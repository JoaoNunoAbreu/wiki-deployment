/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 660.0, "minX": 0.0, "maxY": 37130.0, "series": [{"data": [[0.0, 660.0], [0.1, 728.0], [0.2, 758.0], [0.3, 853.0], [0.4, 868.0], [0.5, 926.0], [0.6, 1006.0], [0.7, 1122.0], [0.8, 1354.0], [0.9, 1443.0], [1.0, 1464.0], [1.1, 1516.0], [1.2, 1546.0], [1.3, 1577.0], [1.4, 1627.0], [1.5, 1658.0], [1.6, 1688.0], [1.7, 1775.0], [1.8, 1815.0], [1.9, 1834.0], [2.0, 1888.0], [2.1, 1924.0], [2.2, 1946.0], [2.3, 1983.0], [2.4, 2009.0], [2.5, 2072.0], [2.6, 2088.0], [2.7, 2101.0], [2.8, 2156.0], [2.9, 2233.0], [3.0, 2249.0], [3.1, 2261.0], [3.2, 2317.0], [3.3, 2331.0], [3.4, 2362.0], [3.5, 2396.0], [3.6, 2406.0], [3.7, 2457.0], [3.8, 2504.0], [3.9, 2535.0], [4.0, 2590.0], [4.1, 2691.0], [4.2, 2763.0], [4.3, 2818.0], [4.4, 2848.0], [4.5, 2863.0], [4.6, 2924.0], [4.7, 2964.0], [4.8, 3008.0], [4.9, 3040.0], [5.0, 3121.0], [5.1, 3158.0], [5.2, 3183.0], [5.3, 3216.0], [5.4, 3299.0], [5.5, 3405.0], [5.6, 3453.0], [5.7, 3484.0], [5.8, 3620.0], [5.9, 3682.0], [6.0, 3727.0], [6.1, 3739.0], [6.2, 3752.0], [6.3, 3781.0], [6.4, 3802.0], [6.5, 3822.0], [6.6, 3842.0], [6.7, 3857.0], [6.8, 3873.0], [6.9, 3924.0], [7.0, 3941.0], [7.1, 3952.0], [7.2, 3993.0], [7.3, 4011.0], [7.4, 4024.0], [7.5, 4036.0], [7.6, 4054.0], [7.7, 4082.0], [7.8, 4111.0], [7.9, 4121.0], [8.0, 4147.0], [8.1, 4166.0], [8.2, 4174.0], [8.3, 4184.0], [8.4, 4193.0], [8.5, 4219.0], [8.6, 4243.0], [8.7, 4274.0], [8.8, 4284.0], [8.9, 4295.0], [9.0, 4324.0], [9.1, 4345.0], [9.2, 4367.0], [9.3, 4382.0], [9.4, 4411.0], [9.5, 4422.0], [9.6, 4479.0], [9.7, 4502.0], [9.8, 4541.0], [9.9, 4546.0], [10.0, 4556.0], [10.1, 4562.0], [10.2, 4588.0], [10.3, 4599.0], [10.4, 4612.0], [10.5, 4634.0], [10.6, 4639.0], [10.7, 4647.0], [10.8, 4661.0], [10.9, 4666.0], [11.0, 4669.0], [11.1, 4677.0], [11.2, 4682.0], [11.3, 4691.0], [11.4, 4703.0], [11.5, 4705.0], [11.6, 4708.0], [11.7, 4715.0], [11.8, 4719.0], [11.9, 4726.0], [12.0, 4734.0], [12.1, 4739.0], [12.2, 4743.0], [12.3, 4752.0], [12.4, 4765.0], [12.5, 4777.0], [12.6, 4788.0], [12.7, 4799.0], [12.8, 4811.0], [12.9, 4812.0], [13.0, 4816.0], [13.1, 4831.0], [13.2, 4841.0], [13.3, 4844.0], [13.4, 4865.0], [13.5, 4881.0], [13.6, 4893.0], [13.7, 4903.0], [13.8, 4916.0], [13.9, 4948.0], [14.0, 4951.0], [14.1, 4974.0], [14.2, 4985.0], [14.3, 5011.0], [14.4, 5022.0], [14.5, 5031.0], [14.6, 5039.0], [14.7, 5046.0], [14.8, 5052.0], [14.9, 5067.0], [15.0, 5101.0], [15.1, 5113.0], [15.2, 5123.0], [15.3, 5130.0], [15.4, 5143.0], [15.5, 5153.0], [15.6, 5160.0], [15.7, 5166.0], [15.8, 5174.0], [15.9, 5177.0], [16.0, 5190.0], [16.1, 5199.0], [16.2, 5207.0], [16.3, 5218.0], [16.4, 5224.0], [16.5, 5239.0], [16.6, 5253.0], [16.7, 5258.0], [16.8, 5306.0], [16.9, 5315.0], [17.0, 5335.0], [17.1, 5351.0], [17.2, 5377.0], [17.3, 5389.0], [17.4, 5398.0], [17.5, 5415.0], [17.6, 5443.0], [17.7, 5453.0], [17.8, 5465.0], [17.9, 5472.0], [18.0, 5486.0], [18.1, 5500.0], [18.2, 5522.0], [18.3, 5541.0], [18.4, 5557.0], [18.5, 5600.0], [18.6, 5676.0], [18.7, 5721.0], [18.8, 5754.0], [18.9, 5770.0], [19.0, 5787.0], [19.1, 5802.0], [19.2, 5807.0], [19.3, 5813.0], [19.4, 5847.0], [19.5, 5857.0], [19.6, 5903.0], [19.7, 5939.0], [19.8, 5956.0], [19.9, 5981.0], [20.0, 6008.0], [20.1, 6028.0], [20.2, 6043.0], [20.3, 6054.0], [20.4, 6064.0], [20.5, 6067.0], [20.6, 6099.0], [20.7, 6140.0], [20.8, 6163.0], [20.9, 6176.0], [21.0, 6191.0], [21.1, 6211.0], [21.2, 6236.0], [21.3, 6252.0], [21.4, 6260.0], [21.5, 6279.0], [21.6, 6319.0], [21.7, 6323.0], [21.8, 6337.0], [21.9, 6344.0], [22.0, 6370.0], [22.1, 6383.0], [22.2, 6388.0], [22.3, 6460.0], [22.4, 6499.0], [22.5, 6507.0], [22.6, 6541.0], [22.7, 6583.0], [22.8, 6606.0], [22.9, 6636.0], [23.0, 6657.0], [23.1, 6695.0], [23.2, 6718.0], [23.3, 6763.0], [23.4, 6777.0], [23.5, 6783.0], [23.6, 6800.0], [23.7, 6845.0], [23.8, 6893.0], [23.9, 6916.0], [24.0, 6927.0], [24.1, 6948.0], [24.2, 6956.0], [24.3, 6973.0], [24.4, 6977.0], [24.5, 6982.0], [24.6, 7005.0], [24.7, 7031.0], [24.8, 7050.0], [24.9, 7082.0], [25.0, 7095.0], [25.1, 7130.0], [25.2, 7150.0], [25.3, 7168.0], [25.4, 7198.0], [25.5, 7208.0], [25.6, 7216.0], [25.7, 7244.0], [25.8, 7350.0], [25.9, 7378.0], [26.0, 7414.0], [26.1, 7434.0], [26.2, 7452.0], [26.3, 7459.0], [26.4, 7511.0], [26.5, 7554.0], [26.6, 7597.0], [26.7, 7609.0], [26.8, 7642.0], [26.9, 7667.0], [27.0, 7690.0], [27.1, 7712.0], [27.2, 7735.0], [27.3, 7755.0], [27.4, 7765.0], [27.5, 7785.0], [27.6, 7805.0], [27.7, 7870.0], [27.8, 7882.0], [27.9, 7919.0], [28.0, 7926.0], [28.1, 7937.0], [28.2, 7961.0], [28.3, 7965.0], [28.4, 7984.0], [28.5, 8009.0], [28.6, 8025.0], [28.7, 8035.0], [28.8, 8055.0], [28.9, 8078.0], [29.0, 8114.0], [29.1, 8130.0], [29.2, 8161.0], [29.3, 8193.0], [29.4, 8220.0], [29.5, 8249.0], [29.6, 8288.0], [29.7, 8308.0], [29.8, 8314.0], [29.9, 8329.0], [30.0, 8347.0], [30.1, 8392.0], [30.2, 8435.0], [30.3, 8444.0], [30.4, 8469.0], [30.5, 8511.0], [30.6, 8551.0], [30.7, 8593.0], [30.8, 8664.0], [30.9, 8704.0], [31.0, 8738.0], [31.1, 8801.0], [31.2, 8829.0], [31.3, 8864.0], [31.4, 8882.0], [31.5, 8899.0], [31.6, 8916.0], [31.7, 8946.0], [31.8, 8994.0], [31.9, 9007.0], [32.0, 9052.0], [32.1, 9097.0], [32.2, 9103.0], [32.3, 9117.0], [32.4, 9154.0], [32.5, 9179.0], [32.6, 9204.0], [32.7, 9215.0], [32.8, 9219.0], [32.9, 9240.0], [33.0, 9352.0], [33.1, 9382.0], [33.2, 9441.0], [33.3, 9543.0], [33.4, 9557.0], [33.5, 9632.0], [33.6, 9658.0], [33.7, 9692.0], [33.8, 9709.0], [33.9, 9945.0], [34.0, 9990.0], [34.1, 10027.0], [34.2, 10051.0], [34.3, 10074.0], [34.4, 10112.0], [34.5, 10176.0], [34.6, 10244.0], [34.7, 10271.0], [34.8, 10287.0], [34.9, 10295.0], [35.0, 10323.0], [35.1, 10330.0], [35.2, 10342.0], [35.3, 10353.0], [35.4, 10361.0], [35.5, 10389.0], [35.6, 10472.0], [35.7, 10538.0], [35.8, 10610.0], [35.9, 10657.0], [36.0, 10678.0], [36.1, 10689.0], [36.2, 10711.0], [36.3, 10744.0], [36.4, 10752.0], [36.5, 10789.0], [36.6, 10814.0], [36.7, 10849.0], [36.8, 10862.0], [36.9, 10894.0], [37.0, 10924.0], [37.1, 10933.0], [37.2, 10952.0], [37.3, 10966.0], [37.4, 10994.0], [37.5, 11002.0], [37.6, 11057.0], [37.7, 11094.0], [37.8, 11107.0], [37.9, 11119.0], [38.0, 11140.0], [38.1, 11149.0], [38.2, 11158.0], [38.3, 11170.0], [38.4, 11185.0], [38.5, 11201.0], [38.6, 11206.0], [38.7, 11210.0], [38.8, 11212.0], [38.9, 11216.0], [39.0, 11228.0], [39.1, 11244.0], [39.2, 11253.0], [39.3, 11277.0], [39.4, 11337.0], [39.5, 11367.0], [39.6, 11390.0], [39.7, 11442.0], [39.8, 11460.0], [39.9, 11480.0], [40.0, 11497.0], [40.1, 11501.0], [40.2, 11543.0], [40.3, 11617.0], [40.4, 11674.0], [40.5, 11798.0], [40.6, 11857.0], [40.7, 11895.0], [40.8, 11910.0], [40.9, 11927.0], [41.0, 11939.0], [41.1, 11950.0], [41.2, 11966.0], [41.3, 11990.0], [41.4, 12017.0], [41.5, 12046.0], [41.6, 12048.0], [41.7, 12067.0], [41.8, 12089.0], [41.9, 12103.0], [42.0, 12146.0], [42.1, 12214.0], [42.2, 12252.0], [42.3, 12257.0], [42.4, 12309.0], [42.5, 12376.0], [42.6, 12433.0], [42.7, 12506.0], [42.8, 12614.0], [42.9, 12781.0], [43.0, 13082.0], [43.1, 13160.0], [43.2, 13234.0], [43.3, 13285.0], [43.4, 13306.0], [43.5, 13334.0], [43.6, 13354.0], [43.7, 13362.0], [43.8, 13371.0], [43.9, 13411.0], [44.0, 13439.0], [44.1, 13512.0], [44.2, 13725.0], [44.3, 13782.0], [44.4, 13796.0], [44.5, 13833.0], [44.6, 13855.0], [44.7, 13860.0], [44.8, 13870.0], [44.9, 13887.0], [45.0, 13911.0], [45.1, 13958.0], [45.2, 13986.0], [45.3, 14016.0], [45.4, 14045.0], [45.5, 14071.0], [45.6, 14089.0], [45.7, 14102.0], [45.8, 14110.0], [45.9, 14118.0], [46.0, 14122.0], [46.1, 14133.0], [46.2, 14142.0], [46.3, 14146.0], [46.4, 14162.0], [46.5, 14174.0], [46.6, 14197.0], [46.7, 14212.0], [46.8, 14214.0], [46.9, 14234.0], [47.0, 14241.0], [47.1, 14273.0], [47.2, 14306.0], [47.3, 14340.0], [47.4, 14469.0], [47.5, 14485.0], [47.6, 14490.0], [47.7, 14512.0], [47.8, 14527.0], [47.9, 14539.0], [48.0, 14653.0], [48.1, 14718.0], [48.2, 15048.0], [48.3, 15208.0], [48.4, 15311.0], [48.5, 15747.0], [48.6, 15768.0], [48.7, 15778.0], [48.8, 15788.0], [48.9, 15794.0], [49.0, 15801.0], [49.1, 15840.0], [49.2, 15858.0], [49.3, 15872.0], [49.4, 15880.0], [49.5, 15934.0], [49.6, 15951.0], [49.7, 15971.0], [49.8, 15987.0], [49.9, 15993.0], [50.0, 16011.0], [50.1, 16022.0], [50.2, 16127.0], [50.3, 16141.0], [50.4, 16171.0], [50.5, 16179.0], [50.6, 16191.0], [50.7, 16217.0], [50.8, 16226.0], [50.9, 16237.0], [51.0, 16247.0], [51.1, 16268.0], [51.2, 16331.0], [51.3, 16407.0], [51.4, 16442.0], [51.5, 16562.0], [51.6, 16602.0], [51.7, 16649.0], [51.8, 16745.0], [51.9, 16844.0], [52.0, 16896.0], [52.1, 17015.0], [52.2, 17064.0], [52.3, 17103.0], [52.4, 17112.0], [52.5, 17182.0], [52.6, 17262.0], [52.7, 17416.0], [52.8, 17567.0], [52.9, 17659.0], [53.0, 17699.0], [53.1, 17718.0], [53.2, 17742.0], [53.3, 17743.0], [53.4, 17752.0], [53.5, 17764.0], [53.6, 17865.0], [53.7, 17885.0], [53.8, 17929.0], [53.9, 17933.0], [54.0, 17950.0], [54.1, 17972.0], [54.2, 18085.0], [54.3, 18439.0], [54.4, 18482.0], [54.5, 18488.0], [54.6, 18493.0], [54.7, 18505.0], [54.8, 18530.0], [54.9, 18537.0], [55.0, 18544.0], [55.1, 18551.0], [55.2, 18554.0], [55.3, 18560.0], [55.4, 18568.0], [55.5, 18575.0], [55.6, 18583.0], [55.7, 18601.0], [55.8, 18613.0], [55.9, 18621.0], [56.0, 18627.0], [56.1, 18632.0], [56.2, 18645.0], [56.3, 18656.0], [56.4, 18666.0], [56.5, 18671.0], [56.6, 18678.0], [56.7, 18684.0], [56.8, 18687.0], [56.9, 18695.0], [57.0, 18705.0], [57.1, 18718.0], [57.2, 18728.0], [57.3, 18734.0], [57.4, 18748.0], [57.5, 18755.0], [57.6, 18780.0], [57.7, 18797.0], [57.8, 18807.0], [57.9, 18817.0], [58.0, 18827.0], [58.1, 18842.0], [58.2, 18853.0], [58.3, 18859.0], [58.4, 18865.0], [58.5, 18875.0], [58.6, 18880.0], [58.7, 18885.0], [58.8, 18890.0], [58.9, 18929.0], [59.0, 19008.0], [59.1, 19104.0], [59.2, 19162.0], [59.3, 19338.0], [59.4, 19389.0], [59.5, 19448.0], [59.6, 19491.0], [59.7, 19553.0], [59.8, 19596.0], [59.9, 19602.0], [60.0, 19605.0], [60.1, 19618.0], [60.2, 19627.0], [60.3, 19650.0], [60.4, 19654.0], [60.5, 19668.0], [60.6, 19680.0], [60.7, 19687.0], [60.8, 19707.0], [60.9, 19724.0], [61.0, 19731.0], [61.1, 19740.0], [61.2, 19754.0], [61.3, 19774.0], [61.4, 19801.0], [61.5, 19837.0], [61.6, 19888.0], [61.7, 19976.0], [61.8, 20077.0], [61.9, 20107.0], [62.0, 20174.0], [62.1, 20204.0], [62.2, 21015.0], [62.3, 21017.0], [62.4, 21020.0], [62.5, 21020.0], [62.6, 21021.0], [62.7, 21022.0], [62.8, 21023.0], [62.9, 21024.0], [63.0, 21025.0], [63.1, 21025.0], [63.2, 21026.0], [63.3, 21026.0], [63.4, 21026.0], [63.5, 21026.0], [63.6, 21026.0], [63.7, 21026.0], [63.8, 21026.0], [63.9, 21027.0], [64.0, 21027.0], [64.1, 21027.0], [64.2, 21027.0], [64.3, 21027.0], [64.4, 21027.0], [64.5, 21027.0], [64.6, 21027.0], [64.7, 21028.0], [64.8, 21028.0], [64.9, 21028.0], [65.0, 21028.0], [65.1, 21028.0], [65.2, 21028.0], [65.3, 21028.0], [65.4, 21028.0], [65.5, 21028.0], [65.6, 21028.0], [65.7, 21029.0], [65.8, 21029.0], [65.9, 21029.0], [66.0, 21029.0], [66.1, 21029.0], [66.2, 21029.0], [66.3, 21029.0], [66.4, 21029.0], [66.5, 21029.0], [66.6, 21029.0], [66.7, 21029.0], [66.8, 21029.0], [66.9, 21030.0], [67.0, 21030.0], [67.1, 21030.0], [67.2, 21030.0], [67.3, 21030.0], [67.4, 21030.0], [67.5, 21030.0], [67.6, 21030.0], [67.7, 21030.0], [67.8, 21030.0], [67.9, 21030.0], [68.0, 21030.0], [68.1, 21030.0], [68.2, 21030.0], [68.3, 21031.0], [68.4, 21031.0], [68.5, 21031.0], [68.6, 21031.0], [68.7, 21031.0], [68.8, 21031.0], [68.9, 21031.0], [69.0, 21031.0], [69.1, 21031.0], [69.2, 21031.0], [69.3, 21031.0], [69.4, 21031.0], [69.5, 21031.0], [69.6, 21031.0], [69.7, 21031.0], [69.8, 21032.0], [69.9, 21032.0], [70.0, 21032.0], [70.1, 21032.0], [70.2, 21032.0], [70.3, 21032.0], [70.4, 21032.0], [70.5, 21032.0], [70.6, 21032.0], [70.7, 21032.0], [70.8, 21032.0], [70.9, 21032.0], [71.0, 21032.0], [71.1, 21032.0], [71.2, 21032.0], [71.3, 21032.0], [71.4, 21033.0], [71.5, 21033.0], [71.6, 21033.0], [71.7, 21033.0], [71.8, 21033.0], [71.9, 21033.0], [72.0, 21033.0], [72.1, 21033.0], [72.2, 21033.0], [72.3, 21033.0], [72.4, 21033.0], [72.5, 21033.0], [72.6, 21034.0], [72.7, 21034.0], [72.8, 21034.0], [72.9, 21034.0], [73.0, 21034.0], [73.1, 21034.0], [73.2, 21034.0], [73.3, 21034.0], [73.4, 21034.0], [73.5, 21034.0], [73.6, 21034.0], [73.7, 21034.0], [73.8, 21034.0], [73.9, 21035.0], [74.0, 21035.0], [74.1, 21035.0], [74.2, 21035.0], [74.3, 21035.0], [74.4, 21035.0], [74.5, 21035.0], [74.6, 21035.0], [74.7, 21035.0], [74.8, 21035.0], [74.9, 21035.0], [75.0, 21035.0], [75.1, 21035.0], [75.2, 21035.0], [75.3, 21036.0], [75.4, 21036.0], [75.5, 21036.0], [75.6, 21036.0], [75.7, 21036.0], [75.8, 21036.0], [75.9, 21036.0], [76.0, 21036.0], [76.1, 21036.0], [76.2, 21036.0], [76.3, 21036.0], [76.4, 21036.0], [76.5, 21036.0], [76.6, 21036.0], [76.7, 21036.0], [76.8, 21037.0], [76.9, 21037.0], [77.0, 21037.0], [77.1, 21037.0], [77.2, 21037.0], [77.3, 21037.0], [77.4, 21037.0], [77.5, 21037.0], [77.6, 21037.0], [77.7, 21037.0], [77.8, 21037.0], [77.9, 21038.0], [78.0, 21038.0], [78.1, 21038.0], [78.2, 21038.0], [78.3, 21038.0], [78.4, 21038.0], [78.5, 21038.0], [78.6, 21038.0], [78.7, 21038.0], [78.8, 21038.0], [78.9, 21038.0], [79.0, 21039.0], [79.1, 21039.0], [79.2, 21039.0], [79.3, 21039.0], [79.4, 21039.0], [79.5, 21039.0], [79.6, 21039.0], [79.7, 21039.0], [79.8, 21040.0], [79.9, 21040.0], [80.0, 21040.0], [80.1, 21040.0], [80.2, 21040.0], [80.3, 21040.0], [80.4, 21040.0], [80.5, 21041.0], [80.6, 21041.0], [80.7, 21041.0], [80.8, 21041.0], [80.9, 21041.0], [81.0, 21041.0], [81.1, 21041.0], [81.2, 21041.0], [81.3, 21041.0], [81.4, 21042.0], [81.5, 21042.0], [81.6, 21042.0], [81.7, 21042.0], [81.8, 21042.0], [81.9, 21042.0], [82.0, 21042.0], [82.1, 21042.0], [82.2, 21043.0], [82.3, 21043.0], [82.4, 21043.0], [82.5, 21043.0], [82.6, 21043.0], [82.7, 21043.0], [82.8, 21043.0], [82.9, 21043.0], [83.0, 21043.0], [83.1, 21044.0], [83.2, 21044.0], [83.3, 21044.0], [83.4, 21044.0], [83.5, 21044.0], [83.6, 21044.0], [83.7, 21044.0], [83.8, 21044.0], [83.9, 21044.0], [84.0, 21045.0], [84.1, 21045.0], [84.2, 21045.0], [84.3, 21045.0], [84.4, 21045.0], [84.5, 21045.0], [84.6, 21045.0], [84.7, 21045.0], [84.8, 21046.0], [84.9, 21046.0], [85.0, 21046.0], [85.1, 21046.0], [85.2, 21046.0], [85.3, 21046.0], [85.4, 21046.0], [85.5, 21046.0], [85.6, 21046.0], [85.7, 21046.0], [85.8, 21046.0], [85.9, 21046.0], [86.0, 21046.0], [86.1, 21047.0], [86.2, 21047.0], [86.3, 21047.0], [86.4, 21047.0], [86.5, 21047.0], [86.6, 21047.0], [86.7, 21047.0], [86.8, 21047.0], [86.9, 21047.0], [87.0, 21047.0], [87.1, 21047.0], [87.2, 21047.0], [87.3, 21047.0], [87.4, 21047.0], [87.5, 21048.0], [87.6, 21048.0], [87.7, 21048.0], [87.8, 21048.0], [87.9, 21048.0], [88.0, 21048.0], [88.1, 21048.0], [88.2, 21048.0], [88.3, 21048.0], [88.4, 21048.0], [88.5, 21049.0], [88.6, 21049.0], [88.7, 21049.0], [88.8, 21049.0], [88.9, 21049.0], [89.0, 21049.0], [89.1, 21049.0], [89.2, 21049.0], [89.3, 21049.0], [89.4, 21049.0], [89.5, 21050.0], [89.6, 21050.0], [89.7, 21050.0], [89.8, 21050.0], [89.9, 21050.0], [90.0, 21050.0], [90.1, 21050.0], [90.2, 21051.0], [90.3, 21051.0], [90.4, 21051.0], [90.5, 21051.0], [90.6, 21051.0], [90.7, 21051.0], [90.8, 21052.0], [90.9, 21052.0], [91.0, 21052.0], [91.1, 21052.0], [91.2, 21052.0], [91.3, 21052.0], [91.4, 21052.0], [91.5, 21052.0], [91.6, 21053.0], [91.7, 21053.0], [91.8, 21053.0], [91.9, 21053.0], [92.0, 21053.0], [92.1, 21054.0], [92.2, 21054.0], [92.3, 21054.0], [92.4, 21054.0], [92.5, 21055.0], [92.6, 21055.0], [92.7, 21055.0], [92.8, 21055.0], [92.9, 21056.0], [93.0, 21056.0], [93.1, 21056.0], [93.2, 21057.0], [93.3, 21057.0], [93.4, 21058.0], [93.5, 21058.0], [93.6, 21059.0], [93.7, 21059.0], [93.8, 21060.0], [93.9, 21060.0], [94.0, 21060.0], [94.1, 21061.0], [94.2, 21061.0], [94.3, 21062.0], [94.4, 21063.0], [94.5, 21063.0], [94.6, 21064.0], [94.7, 21064.0], [94.8, 21065.0], [94.9, 21065.0], [95.0, 21066.0], [95.1, 21067.0], [95.2, 21067.0], [95.3, 21070.0], [95.4, 21073.0], [95.5, 21074.0], [95.6, 21075.0], [95.7, 21077.0], [95.8, 21078.0], [95.9, 21078.0], [96.0, 21079.0], [96.1, 21080.0], [96.2, 21080.0], [96.3, 21084.0], [96.4, 21091.0], [96.5, 21108.0], [96.6, 21144.0], [96.7, 21146.0], [96.8, 21147.0], [96.9, 21148.0], [97.0, 21149.0], [97.1, 21149.0], [97.2, 21151.0], [97.3, 21215.0], [97.4, 21744.0], [97.5, 22555.0], [97.6, 22569.0], [97.7, 22574.0], [97.8, 22584.0], [97.9, 22592.0], [98.0, 22603.0], [98.1, 22606.0], [98.2, 22624.0], [98.3, 22638.0], [98.4, 22657.0], [98.5, 22683.0], [98.6, 22714.0], [98.7, 22719.0], [98.8, 22730.0], [98.9, 22743.0], [99.0, 22747.0], [99.1, 22791.0], [99.2, 22842.0], [99.3, 22887.0], [99.4, 25350.0], [99.5, 25437.0], [99.6, 25502.0], [99.7, 26826.0], [99.8, 27667.0], [99.9, 30841.0], [100.0, 37130.0]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 600.0, "maxY": 1712.0, "series": [{"data": [[600.0, 2.0], [700.0, 11.0], [800.0, 10.0], [900.0, 6.0], [1000.0, 5.0], [1100.0, 2.0], [1200.0, 3.0], [1300.0, 2.0], [1400.0, 11.0], [1500.0, 15.0], [1600.0, 14.0], [1700.0, 7.0], [1800.0, 12.0], [1900.0, 17.0], [2000.0, 16.0], [2100.0, 7.0], [2200.0, 19.0], [2300.0, 16.0], [2400.0, 13.0], [2500.0, 14.0], [2600.0, 3.0], [2700.0, 9.0], [2800.0, 12.0], [2900.0, 14.0], [3000.0, 10.0], [3100.0, 13.0], [3200.0, 8.0], [3300.0, 4.0], [3400.0, 11.0], [3500.0, 4.0], [3700.0, 21.0], [3600.0, 8.0], [3800.0, 26.0], [3900.0, 16.0], [4000.0, 27.0], [4200.0, 25.0], [4100.0, 35.0], [4300.0, 19.0], [4400.0, 18.0], [4500.0, 31.0], [4600.0, 53.0], [4700.0, 67.0], [4800.0, 48.0], [4900.0, 29.0], [5000.0, 37.0], [5100.0, 57.0], [5200.0, 33.0], [5300.0, 32.0], [5400.0, 33.0], [5500.0, 20.0], [5600.0, 7.0], [5800.0, 28.0], [5700.0, 20.0], [5900.0, 20.0], [6000.0, 31.0], [6100.0, 21.0], [6200.0, 25.0], [6300.0, 36.0], [6500.0, 17.0], [6400.0, 8.0], [6600.0, 19.0], [6700.0, 23.0], [6900.0, 36.0], [6800.0, 13.0], [7000.0, 23.0], [7100.0, 19.0], [7200.0, 17.0], [7300.0, 10.0], [7400.0, 22.0], [7500.0, 11.0], [7600.0, 21.0], [7700.0, 27.0], [7800.0, 13.0], [7900.0, 32.0], [8100.0, 19.0], [8000.0, 24.0], [8200.0, 15.0], [8300.0, 25.0], [8400.0, 16.0], [8500.0, 13.0], [8600.0, 9.0], [8700.0, 10.0], [8800.0, 22.0], [9200.0, 21.0], [9000.0, 15.0], [8900.0, 16.0], [9100.0, 21.0], [9300.0, 7.0], [9600.0, 14.0], [9400.0, 8.0], [9500.0, 8.0], [9700.0, 7.0], [10200.0, 18.0], [9900.0, 9.0], [10000.0, 15.0], [10100.0, 9.0], [9800.0, 1.0], [10300.0, 32.0], [10400.0, 4.0], [10600.0, 18.0], [10700.0, 18.0], [10500.0, 8.0], [10800.0, 19.0], [10900.0, 27.0], [11000.0, 17.0], [11100.0, 34.0], [11200.0, 43.0], [11300.0, 15.0], [11500.0, 12.0], [11400.0, 19.0], [11600.0, 8.0], [11700.0, 5.0], [11800.0, 13.0], [11900.0, 27.0], [12000.0, 27.0], [12100.0, 12.0], [12200.0, 15.0], [12300.0, 9.0], [12400.0, 5.0], [12500.0, 5.0], [12700.0, 4.0], [12600.0, 3.0], [12900.0, 2.0], [13100.0, 7.0], [13200.0, 10.0], [13300.0, 25.0], [13000.0, 2.0], [12800.0, 2.0], [13400.0, 10.0], [13500.0, 5.0], [13700.0, 12.0], [13800.0, 27.0], [13600.0, 1.0], [14000.0, 21.0], [13900.0, 13.0], [14100.0, 49.0], [14200.0, 27.0], [14300.0, 11.0], [14400.0, 13.0], [14500.0, 17.0], [14700.0, 6.0], [14600.0, 3.0], [14800.0, 1.0], [15100.0, 4.0], [15000.0, 1.0], [15200.0, 4.0], [15300.0, 3.0], [15400.0, 1.0], [15800.0, 22.0], [15700.0, 27.0], [15900.0, 27.0], [16000.0, 9.0], [16100.0, 25.0], [16300.0, 6.0], [16200.0, 26.0], [16800.0, 9.0], [16600.0, 9.0], [16400.0, 7.0], [17000.0, 10.0], [17200.0, 4.0], [17400.0, 5.0], [17600.0, 10.0], [18000.0, 4.0], [17800.0, 12.0], [18400.0, 20.0], [19200.0, 1.0], [18600.0, 63.0], [19000.0, 5.0], [18800.0, 57.0], [19400.0, 10.0], [19600.0, 46.0], [19800.0, 12.0], [20000.0, 9.0], [20200.0, 2.0], [21200.0, 4.0], [21000.0, 1712.0], [20800.0, 1.0], [21400.0, 1.0], [22600.0, 29.0], [22800.0, 10.0], [23000.0, 2.0], [25400.0, 8.0], [26800.0, 1.0], [27600.0, 5.0], [30800.0, 2.0], [31400.0, 1.0], [37100.0, 2.0], [16500.0, 8.0], [16700.0, 3.0], [16900.0, 3.0], [17100.0, 13.0], [17300.0, 4.0], [17900.0, 19.0], [17700.0, 25.0], [17500.0, 1.0], [18100.0, 3.0], [18500.0, 51.0], [18700.0, 39.0], [18900.0, 6.0], [19100.0, 9.0], [19300.0, 6.0], [19500.0, 11.0], [19700.0, 32.0], [20100.0, 9.0], [19900.0, 4.0], [20300.0, 1.0], [21100.0, 44.0], [20700.0, 1.0], [21700.0, 1.0], [22500.0, 28.0], [22700.0, 28.0], [22900.0, 1.0], [25300.0, 3.0], [25500.0, 5.0], [27500.0, 3.0], [30700.0, 1.0], [30900.0, 1.0]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 37100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 52.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3188.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 52.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3188.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1760.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2499.702199999998, "minX": 1.60876086E12, "maxY": 2499.702199999998, "series": [{"data": [[1.60876086E12, 2499.702199999998]], "isOverall": false, "label": "Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876086E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 727.0, "minX": 1.0, "maxY": 37130.0, "series": [{"data": [[2.0, 37128.0], [3.0, 31493.0], [4.0, 30973.0], [5.0, 30869.0], [6.0, 30841.0], [7.0, 30709.0], [8.0, 27694.0], [9.0, 27565.0], [10.0, 27559.0], [11.0, 27550.0], [12.0, 27683.0], [13.0, 27674.0], [14.0, 27667.0], [15.0, 27663.0], [16.0, 26826.0], [18.0, 25550.0], [19.0, 25537.0], [20.0, 25416.0], [21.0, 25508.0], [22.0, 25502.0], [23.0, 25474.0], [24.0, 25458.0], [25.0, 25350.0], [26.0, 25456.0], [27.0, 25437.0], [28.0, 25440.0], [29.0, 25418.0], [30.0, 25436.0], [31.0, 25340.0], [33.0, 22678.0], [32.0, 25354.0], [35.0, 22880.0], [34.0, 22662.0], [37.0, 22657.0], [36.0, 22661.0], [39.0, 22635.0], [38.0, 22671.0], [41.0, 22647.0], [40.0, 22648.0], [42.0, 22647.0], [45.0, 22632.666666666668], [47.0, 22867.0], [46.0, 22516.0], [49.0, 22847.0], [48.0, 22851.0], [51.0, 22818.0], [50.0, 22842.0], [53.0, 22610.0], [52.0, 22622.0], [55.0, 22591.0], [54.0, 22603.0], [57.0, 22606.0], [56.0, 22579.0], [59.0, 22607.0], [58.0, 22598.0], [61.0, 22592.0], [60.0, 22605.0], [63.0, 22596.0], [67.0, 22577.0], [66.0, 22602.0], [65.0, 22604.0], [69.0, 22729.5], [75.0, 22574.0], [74.0, 22805.5], [72.0, 22582.333333333332], [79.0, 22562.333333333332], [76.0, 22563.0], [83.0, 22553.0], [82.0, 22806.0], [80.0, 22569.0], [87.0, 22530.0], [86.0, 22966.0], [85.0, 22532.0], [84.0, 22559.0], [91.0, 22823.0], [90.0, 22803.0], [89.0, 21454.0], [88.0, 22650.0], [95.0, 22800.0], [94.0, 22624.0], [93.0, 22638.0], [92.0, 22791.0], [99.0, 22590.0], [98.0, 22594.0], [97.0, 22784.0], [96.0, 22613.0], [103.0, 22727.0], [102.0, 22758.0], [101.0, 22748.0], [100.0, 22750.0], [107.0, 22734.0], [105.0, 22745.0], [104.0, 22744.0], [110.0, 22719.0], [109.0, 22744.0], [108.0, 22592.0], [115.0, 22738.0], [113.0, 22730.0], [112.0, 22737.0], [118.0, 22714.0], [117.0, 22581.0], [116.0, 22716.0], [123.0, 22705.0], [122.0, 22570.0], [121.0, 22725.333333333332], [125.0, 22719.0], [131.0, 22692.0], [130.0, 22683.0], [129.0, 22714.0], [128.0, 22711.0], [139.0, 21030.375], [167.0, 21049.0], [166.0, 21045.0], [164.0, 21043.0], [170.0, 21036.0], [168.0, 21040.5], [179.0, 21022.0], [178.0, 21039.5], [176.0, 21046.666666666668], [190.0, 21032.0], [189.0, 21041.0], [188.0, 21043.0], [187.0, 21044.0], [186.0, 21043.0], [185.0, 21042.0], [184.0, 21044.0], [198.0, 21023.0], [197.0, 21032.666666666668], [196.0, 21016.0], [195.0, 21030.0], [194.0, 21039.0], [193.0, 21038.5], [192.0, 21042.0], [207.0, 21027.0], [206.0, 21044.5], [204.0, 21037.0], [203.0, 21023.5], [202.0, 21038.333333333332], [200.0, 21037.333333333332], [214.0, 21035.5], [212.0, 21038.333333333332], [211.0, 21028.0], [208.0, 21029.5], [223.0, 21033.0], [222.0, 21029.0], [221.0, 21028.5], [220.0, 21031.0], [218.0, 21053.0], [217.0, 21030.666666666668], [216.0, 21033.0], [231.0, 21030.0], [230.0, 21030.0], [229.0, 21039.0], [228.0, 21043.0], [227.0, 21027.0], [226.0, 21031.333333333332], [225.0, 21027.0], [224.0, 21053.0], [236.0, 21035.833333333336], [235.0, 21031.0], [234.0, 21034.333333333332], [233.0, 21032.0], [232.0, 21027.0], [268.0, 21041.0], [286.0, 21051.0], [284.0, 21036.0], [282.0, 21042.5], [280.0, 21049.0], [278.0, 21037.0], [276.0, 21051.0], [274.0, 21039.0], [302.0, 21034.0], [300.0, 21037.0], [298.0, 21037.0], [294.0, 21037.333333333332], [292.0, 21032.0], [288.0, 21031.0], [318.0, 21039.5], [314.0, 21030.0], [312.0, 21029.333333333332], [310.0, 21030.0], [334.0, 21036.0], [330.0, 21045.333333333332], [328.0, 21038.0], [326.0, 21040.0], [324.0, 21037.0], [322.0, 21034.0], [320.0, 21041.0], [350.0, 21036.333333333332], [348.0, 21055.0], [346.0, 21036.0], [344.0, 21038.0], [342.0, 21048.666666666668], [340.0, 21037.0], [362.0, 21038.0], [360.0, 21036.0], [356.0, 21037.0], [354.0, 21054.0], [352.0, 21036.0], [382.0, 21035.0], [398.0, 21036.0], [396.0, 21051.0], [392.0, 21032.0], [386.0, 21041.0], [384.0, 21038.5], [414.0, 21035.0], [412.0, 21034.0], [404.0, 21033.0], [400.0, 21049.0], [430.0, 21044.0], [428.0, 21044.0], [424.0, 21035.0], [422.0, 21036.0], [420.0, 21035.5], [418.0, 21036.0], [446.0, 21045.5], [444.0, 21031.0], [442.0, 21040.666666666668], [440.0, 21035.0], [436.0, 21033.5], [434.0, 21044.0], [432.0, 21039.0], [452.0, 21034.333333333332], [450.0, 21029.0], [476.0, 21043.0], [494.0, 21030.0], [492.0, 21030.0], [490.0, 21026.0], [486.0, 21015.0], [484.0, 21034.5], [480.0, 21035.5], [508.0, 21026.0], [506.0, 21027.0], [498.0, 21031.0], [536.0, 21032.0], [532.0, 21037.0], [528.0, 21036.0], [520.0, 21032.5], [516.0, 21031.0], [512.0, 21031.0], [568.0, 21026.5], [564.0, 21026.0], [556.0, 21039.0], [552.0, 21035.5], [604.0, 21032.0], [600.0, 21031.333333333332], [592.0, 21027.0], [580.0, 21036.0], [624.0, 21030.0], [620.0, 21029.0], [612.0, 21029.0], [608.0, 21033.0], [728.0, 21046.5], [716.0, 21061.0], [704.0, 21064.0], [756.0, 21045.0], [752.0, 21040.0], [744.0, 21063.0], [736.0, 21052.0], [780.0, 21039.0], [776.0, 21034.5], [772.0, 21034.0], [768.0, 21030.666666666668], [828.0, 21036.0], [820.0, 21036.333333333332], [808.0, 21040.0], [800.0, 21044.0], [856.0, 21035.0], [852.0, 21034.0], [844.0, 21040.5], [832.0, 21034.5], [864.0, 21037.666666666668], [924.0, 21036.0], [920.0, 21034.0], [916.0, 21069.130434782608], [912.0, 21079.0], [944.0, 21032.0], [956.0, 21030.0], [948.0, 21042.0], [936.0, 21032.5], [932.0, 21028.0], [928.0, 21032.0], [1040.0, 21031.0], [1144.0, 21032.32], [1136.0, 21043.666666666668], [1128.0, 21046.0], [1112.0, 21045.0], [1096.0, 21054.0], [1208.0, 21054.0], [1200.0, 21041.333333333332], [1160.0, 21048.0], [1192.0, 21041.0], [1184.0, 21048.0], [1176.0, 21046.666666666668], [1272.0, 21053.0], [1248.0, 21045.428571428572], [1240.0, 21050.333333333332], [1224.0, 21045.0], [1216.0, 21049.0], [1288.0, 21047.5], [1320.0, 21056.0], [1312.0, 21048.5], [1304.0, 21045.5], [1296.0, 21049.0], [1280.0, 21049.0], [1400.0, 21052.0], [1392.0, 21060.0], [1368.0, 21046.0], [1360.0, 21043.6], [1352.0, 21047.5], [1344.0, 21042.0], [1456.0, 21043.0], [1464.0, 21048.0], [1416.0, 21059.0], [1408.0, 21046.0], [1440.0, 21044.0], [1432.0, 21048.5], [1424.0, 21047.333333333332], [1528.0, 21038.0], [1488.0, 21048.0], [1584.0, 20202.0], [1568.0, 21031.25], [1560.0, 21030.0], [1552.0, 21030.0], [1544.0, 21029.0], [1536.0, 21038.0], [1656.0, 21035.0], [1640.0, 21043.5], [1632.0, 21046.0], [1624.0, 21056.0], [1616.0, 21056.5], [1720.0, 21061.5], [1704.0, 21020.0], [1696.0, 21030.833333333332], [1688.0, 21027.5], [1672.0, 21038.0], [1784.0, 21047.5], [1760.0, 21145.0], [1736.0, 21144.0], [1728.0, 21150.5], [1840.0, 21148.0], [1824.0, 21058.0], [1816.0, 21064.5], [1808.0, 21047.0], [1912.0, 19715.5], [1896.0, 21056.0], [1864.0, 21080.0], [1856.0, 21065.0], [1976.0, 19700.0], [1968.0, 19741.0], [1960.0, 19935.0], [1952.0, 20069.0], [1920.0, 19684.0], [1928.0, 20352.0], [1944.0, 19613.0], [1936.0, 19667.0], [2032.0, 18808.0], [2040.0, 19602.0], [1992.0, 18982.0], [1984.0, 19668.0], [2024.0, 18853.0], [2016.0, 18823.0], [2008.0, 18863.0], [2144.0, 18666.0], [2160.0, 19383.0], [2112.0, 18586.0], [2048.0, 19649.0], [2096.0, 18695.0], [2080.0, 18752.0], [2288.0, 17743.0], [2256.0, 18733.0], [2224.0, 18035.5], [2208.0, 18805.0], [2192.0, 17908.0], [2176.0, 18492.0], [2400.0, 16414.0], [2416.0, 16216.0], [2320.0, 17718.0], [2304.0, 18541.0], [2368.0, 17872.0], [2352.0, 17748.0], [2336.0, 18448.0], [2544.0, 16831.0], [2528.0, 16146.0], [2512.0, 15780.0], [2496.0, 15781.0], [2432.0, 16222.0], [2448.0, 17106.0], [2480.0, 15850.0], [2464.0, 16889.0], [2656.0, 14270.0], [2624.0, 15305.0], [2608.0, 14851.0], [2592.0, 14539.0], [2576.0, 15772.0], [2560.0, 15876.0], [2784.0, 13998.0], [2800.0, 13844.0], [2688.0, 14234.0], [2768.0, 13958.0], [2752.0, 14273.0], [2736.0, 13963.0], [2720.0, 14144.0], [2928.0, 11941.0], [2880.0, 13410.0], [2864.0, 12136.0], [2832.0, 12256.5], [2816.0, 12781.0], [3056.0, 11408.0], [3040.0, 10546.0], [3024.0, 11479.0], [3008.0, 11223.0], [2944.0, 11456.0], [2960.0, 11798.0], [2992.0, 12334.0], [2976.0, 11322.0], [3168.0, 11368.0], [3088.0, 11185.0], [3072.0, 11352.666666666666], [3152.0, 11209.0], [3136.0, 11500.0], [3120.0, 11163.0], [3312.0, 9240.0], [3264.0, 10108.0], [3200.0, 10597.4], [3216.0, 10994.0], [3248.0, 10353.0], [3232.0, 11014.0], [3280.0, 9745.0], [3440.0, 8327.5], [3344.0, 9383.0], [3328.0, 9094.0], [3376.0, 8942.0], [3392.0, 8926.0], [3424.0, 8905.5], [3552.0, 8306.0], [3568.0, 7667.0], [3520.0, 8123.0], [3536.0, 8161.0], [3472.0, 8212.0], [3456.0, 9164.0], [3504.0, 7979.0], [3488.0, 8437.0], [3648.0, 7144.0], [3664.0, 7765.0], [3696.0, 7153.0], [3584.0, 7900.0], [3600.0, 7762.0], [3632.0, 7764.5], [3616.0, 8049.0], [3776.0, 6484.0], [3824.0, 5956.0], [3792.0, 6116.0], [3808.0, 7090.0], [3712.0, 7681.0], [3728.0, 6399.0], [3760.0, 6650.0], [3952.0, 5807.0], [3936.0, 6974.0], [3904.0, 6118.0], [3840.0, 6935.5], [3856.0, 6063.5], [3888.0, 6918.0], [3872.0, 6028.0], [3920.0, 7015.5], [4032.0, 5266.0], [4080.0, 5169.0], [3968.0, 5487.0], [3984.0, 5826.5], [4016.0, 6387.0], [4048.0, 5359.0], [4320.0, 5945.0], [4256.0, 5840.0], [4288.0, 4896.5], [4128.0, 5037.0], [4096.0, 5153.0], [4192.0, 4754.0], [4160.0, 6337.0], [4512.0, 3855.0], [4480.0, 3856.5], [4544.0, 4736.0], [4352.0, 4420.0], [4448.0, 4301.5], [4416.0, 5202.0], [4608.0, 4612.0], [4800.0, 2594.0], [4672.0, 2371.3333333333335], [4640.0, 4718.0], [4704.0, 4281.0], [4768.0, 3672.0], [4736.0, 3197.5], [4832.0, 1555.0], [4864.0, 2371.0], [4896.0, 2348.0], [4960.0, 1658.0], [4928.0, 1982.0], [4289.0, 4547.0], [4321.0, 4562.0], [4225.0, 4710.5], [4129.0, 5119.0], [4193.0, 4708.0], [4161.0, 6036.0], [4385.0, 5191.5], [4353.0, 4864.0], [4449.0, 3947.0], [4417.0, 4691.0], [4513.0, 5239.0], [4481.0, 3816.0], [4609.0, 4707.0], [4801.0, 1774.3333333333335], [4673.0, 1991.6666666666665], [4705.0, 3475.0], [4737.0, 4026.0], [4833.0, 1940.0], [4865.0, 1881.0], [4961.0, 1627.0], [4897.0, 2346.0], [4929.0, 2100.0], [2161.0, 18085.0], [2065.0, 728.0], [2049.0, 19586.0], [2145.0, 18660.0], [2113.0, 19491.0], [2097.0, 18692.0], [2289.0, 18551.0], [2193.0, 18656.0], [2177.0, 18494.0], [2257.0, 18768.0], [2241.0, 17932.0], [2225.0, 18624.0], [2401.0, 17262.0], [2417.0, 16267.0], [2321.0, 18634.0], [2305.0, 17712.0], [2385.0, 16619.5], [2369.0, 17659.0], [2353.0, 17752.0], [2545.0, 16745.0], [2529.0, 16132.0], [2513.0, 16217.0], [2497.0, 15779.0], [2449.0, 17108.0], [2481.0, 15849.0], [2465.0, 15982.0], [2577.0, 15875.0], [2657.0, 13769.0], [2561.0, 15880.0], [2641.0, 14105.666666666666], [2625.0, 13870.0], [2609.0, 15171.0], [2593.0, 14532.0], [2801.0, 13372.0], [2785.0, 13949.0], [2705.0, 14147.666666666666], [2689.0, 14110.0], [2737.0, 13969.0], [2721.0, 14471.0], [2913.0, 13309.5], [2897.0, 7055.75], [2817.0, 13354.0], [2833.0, 12256.0], [2865.0, 13431.0], [3041.0, 10924.0], [3057.0, 10750.0], [2961.0, 11460.0], [2945.0, 11453.0], [3025.0, 11045.0], [3009.0, 11140.0], [2993.0, 12337.0], [2977.0, 11949.0], [3185.0, 10747.0], [3073.0, 10692.0], [3153.0, 11189.0], [3137.0, 11124.0], [3121.0, 11652.0], [3105.0, 11212.5], [3265.0, 9969.0], [3313.0, 9237.0], [3281.0, 10814.0], [3297.0, 10644.0], [3201.0, 11206.0], [3217.0, 9636.0], [3233.0, 10920.0], [3345.0, 10338.0], [3425.0, 8506.0], [3329.0, 9215.0], [3377.0, 8902.0], [3361.0, 9406.0], [3393.0, 8738.0], [3409.0, 9105.0], [3441.0, 8344.0], [3553.0, 8025.0], [3569.0, 7963.0], [3521.0, 7870.0], [3537.0, 8149.0], [3457.0, 8278.0], [3473.0, 8500.0], [3505.0, 9220.0], [3489.0, 8459.0], [3681.0, 7210.333333333333], [3697.0, 7150.0], [3649.0, 7875.0], [3665.0, 7738.0], [3585.0, 7570.0], [3601.0, 7742.0], [3633.0, 7192.0], [3617.0, 7597.0], [3809.0, 6101.0], [3777.0, 6254.0], [3793.0, 6898.0], [3825.0, 5955.0], [3729.0, 6379.0], [3713.0, 7937.0], [3761.0, 6636.0], [3745.0, 7458.0], [3953.0, 5808.0], [3921.0, 6955.0], [3937.0, 5819.0], [3841.0, 6216.0], [3889.0, 6788.0], [3873.0, 6054.0], [4033.0, 6084.0], [4081.0, 5162.0], [4049.0, 6256.0], [4065.0, 5399.5], [3985.0, 6498.0], [3969.0, 6204.0], [4017.0, 6383.0], [4226.0, 4739.0], [4258.0, 5035.5], [4322.0, 4599.0], [4130.0, 5040.0], [4194.0, 5389.0], [4162.0, 5314.0], [4514.0, 5164.0], [4482.0, 3857.0], [4386.0, 4843.0], [4354.0, 4415.0], [4418.0, 5199.0], [4706.0, 4110.0], [4674.0, 1451.0], [4642.0, 4719.5], [4738.0, 2672.5], [4770.0, 3665.5], [4834.0, 2965.0], [4802.0, 1861.0], [4866.0, 2457.0], [4898.0, 2357.0], [4962.0, 1716.0], [4227.0, 4805.0], [4323.0, 5330.0], [4291.0, 4838.0], [4131.0, 5052.0], [4099.0, 5550.0], [4547.0, 4812.666666666667], [4387.0, 5309.0], [4451.0, 4990.0], [4483.0, 4726.0], [4515.0, 4156.0], [4579.0, 4232.25], [4707.0, 4395.0], [4739.0, 2728.0], [4771.0, 2330.0], [4835.0, 1639.0], [4803.0, 3121.0], [4867.0, 1692.0], [4899.0, 2406.0], [4963.0, 1577.0], [4931.0, 1820.5], [1041.0, 21032.0], [1025.0, 21037.5], [1137.0, 21051.0], [1113.0, 21046.5], [1097.0, 21049.0], [1209.0, 21054.0], [1193.0, 21044.0], [1185.0, 21044.0], [1177.0, 21048.5], [1161.0, 21046.0], [1241.0, 21052.0], [1225.0, 21044.0], [1337.0, 21046.0], [1313.0, 21049.5], [1297.0, 21049.0], [1401.0, 21053.0], [1457.0, 21043.333333333332], [1449.0, 21044.0], [1441.0, 21047.0], [1433.0, 21050.0], [1425.0, 21049.0], [1529.0, 21040.0], [1497.0, 21043.666666666668], [1489.0, 21046.0], [1481.0, 21051.0], [1585.0, 20198.0], [1577.0, 21031.5], [1561.0, 21030.0], [1545.0, 21031.0], [1649.0, 21041.0], [1641.0, 21049.0], [1633.0, 21047.0], [1625.0, 21051.0], [1721.0, 21065.0], [1713.0, 21145.0], [1689.0, 21042.0], [1673.0, 21040.0], [1769.0, 21147.0], [1737.0, 21147.0], [1849.0, 21062.666666666668], [1841.0, 21050.0], [1833.0, 21056.0], [1817.0, 21044.0], [1809.0, 21052.0], [1913.0, 19801.0], [1897.0, 21060.0], [1889.0, 21060.0], [1865.0, 21078.0], [1857.0, 21069.5], [1969.0, 19733.0], [1977.0, 19715.0], [1929.0, 19765.0], [1921.0, 19681.0], [1961.0, 19431.0], [1953.0, 19541.0], [1945.0, 19627.0], [1937.0, 19829.0], [2041.0, 19762.0], [2033.0, 18728.0], [2025.0, 18838.0], [2017.0, 18820.0], [1985.0, 19374.0], [1993.0, 19560.0], [2009.0, 18861.0], [2162.0, 18749.0], [2146.0, 19408.0], [2130.0, 18556.0], [2114.0, 18575.0], [2050.0, 19582.0], [2098.0, 18686.0], [2082.0, 18709.5], [2274.0, 18338.333333333332], [2242.0, 17930.0], [2210.0, 18969.0], [2194.0, 19163.0], [2418.0, 16253.0], [2322.0, 18634.0], [2306.0, 18708.0], [2386.0, 17852.0], [2370.0, 16737.0], [2338.0, 18505.5], [2546.0, 15789.0], [2530.0, 16136.0], [2498.0, 15897.0], [2434.0, 16197.5], [2482.0, 15845.0], [2466.0, 15987.0], [2626.0, 7720.5], [2658.0, 14344.0], [2642.0, 14071.0], [2610.0, 15412.0], [2562.0, 15859.0], [2578.0, 15872.0], [2594.0, 14541.0], [2706.0, 14174.0], [2786.0, 13359.0], [2690.0, 14241.0], [2770.0, 13516.0], [2754.0, 14211.5], [2738.0, 13957.0], [2722.0, 14102.0], [2930.0, 11942.0], [2898.0, 4470.333333333334], [2914.0, 12366.0], [2834.0, 12254.0], [2818.0, 13355.0], [2882.0, 12014.0], [2850.0, 12171.0], [2962.0, 11117.0], [3042.0, 11930.0], [2946.0, 12524.0], [3026.0, 11406.0], [3010.0, 11138.0], [2994.0, 10877.0], [2978.0, 12391.0], [3170.0, 10862.5], [3090.0, 10768.0], [3074.0, 10690.0], [3154.0, 10027.0], [3138.0, 11549.0], [3122.0, 11160.0], [3298.0, 10589.0], [3314.0, 9250.0], [3266.0, 10804.0], [3282.0, 10551.0], [3202.0, 11194.0], [3218.0, 10300.0], [3250.0, 10245.0], [3234.0, 9995.0], [3330.0, 9122.0], [3346.0, 9379.0], [3362.0, 9004.0], [3394.0, 8724.0], [3442.0, 9164.0], [3410.0, 9105.0], [3554.0, 8408.0], [3570.0, 7944.0], [3522.0, 9007.0], [3538.0, 7758.0], [3458.0, 8924.0], [3474.0, 8121.0], [3506.0, 9104.0], [3490.0, 8705.0], [3682.0, 7204.0], [3698.0, 6664.0], [3650.0, 7870.0], [3666.0, 6964.0], [3602.0, 8130.0], [3586.0, 7566.0], [3634.0, 7236.0], [3618.0, 7607.0], [3810.0, 7092.0], [3826.0, 7249.0], [3778.0, 6163.0], [3794.0, 7399.0], [3714.0, 7919.0], [3730.0, 7769.0], [3762.0, 6587.0], [3746.0, 7451.0], [3954.0, 5517.0], [3906.0, 6879.5], [3938.0, 5813.0], [3858.0, 6124.0], [3842.0, 6940.0], [3890.0, 6920.0], [3874.0, 7049.0], [4034.0, 5535.0], [4082.0, 5444.0], [4066.0, 5241.0], [3970.0, 5489.0], [4018.0, 6188.0], [4228.0, 4795.0], [4324.0, 5393.0], [4260.0, 5060.5], [4292.0, 4682.0], [4132.0, 6319.0], [4100.0, 6282.0], [4164.0, 4925.0], [4484.0, 5031.0], [4516.0, 5028.0], [4548.0, 4814.0], [4356.0, 4348.5], [4388.0, 4520.0], [4452.0, 4666.0], [4420.0, 5176.5], [4612.0, 4497.0], [4708.0, 3739.0], [4676.0, 4017.3333333333335], [4772.0, 2396.0], [4740.0, 2819.0], [4804.0, 1834.0], [4868.0, 1594.0], [4900.0, 1776.0], [4964.0, 1673.0], [4932.0, 2104.0], [4293.0, 5676.0], [4325.0, 5600.0], [4229.0, 4799.0], [4261.0, 5028.0], [4133.0, 6328.0], [4101.0, 5935.0], [4197.0, 5395.666666666667], [4165.0, 4777.0], [4357.0, 4705.0], [4453.0, 3940.0], [4421.0, 5173.0], [4517.0, 4093.0], [4485.0, 4715.0], [4709.0, 3728.0], [4677.0, 4014.0], [4645.0, 4714.333333333333], [4741.0, 3837.0], [4773.0, 2249.0], [4837.0, 1740.0], [4805.0, 1830.0], [4869.0, 1786.0], [4965.0, 1516.0], [4901.0, 2033.0], [4933.0, 2087.0], [2163.0, 18888.0], [2067.0, 19405.25], [2051.0, 18705.0], [2131.0, 18554.0], [2115.0, 18579.0], [2099.0, 18689.0], [2291.0, 18637.5], [2259.0, 18669.5], [2243.0, 17930.0], [2211.0, 19125.0], [2195.0, 19173.0], [2179.0, 18491.5], [2403.0, 16509.5], [2323.0, 18632.0], [2419.0, 16244.0], [2307.0, 18692.0], [2387.0, 18007.0], [2371.0, 17865.0], [2355.0, 17756.5], [2339.0, 18439.0], [2531.0, 16131.0], [2547.0, 15778.0], [2435.0, 16197.0], [2451.0, 16171.5], [2483.0, 16366.0], [2467.0, 16022.0], [2659.0, 14340.0], [2675.0, 14343.75], [2627.0, 14746.0], [2611.0, 13938.0], [2579.0, 15199.0], [2563.0, 15988.0], [2803.0, 13854.0], [2787.0, 13986.0], [2755.0, 14270.0], [2691.0, 14710.0], [2707.0, 14183.0], [2739.0, 13789.0], [2931.0, 11930.0], [2899.0, 727.0], [2915.0, 13268.0], [2819.0, 13344.0], [2883.0, 13329.0], [2867.0, 13399.0], [2851.0, 12449.5], [3059.0, 11247.0], [3043.0, 11843.0], [3027.0, 11455.0], [3011.0, 11206.0], [2947.0, 12444.0], [2963.0, 11094.0], [2979.0, 11945.0], [3139.0, 10234.0], [3155.0, 11185.0], [3187.0, 10818.0], [3075.0, 11214.0], [3091.0, 11174.0], [3123.0, 10338.0], [3107.0, 11136.0], [3283.0, 10729.0], [3315.0, 9218.0], [3203.0, 10894.0], [3219.0, 9620.0], [3347.0, 5702.5], [3331.0, 9482.0], [3443.0, 9498.0], [3363.0, 9412.0], [3379.0, 8907.0], [3395.0, 9126.0], [3411.0, 9097.0], [3427.0, 8839.5], [3555.0, 8521.0], [3571.0, 7961.0], [3523.0, 7933.0], [3539.0, 8048.0], [3475.0, 8550.0], [3459.0, 9099.0], [3507.0, 8443.0], [3491.0, 8044.0], [3699.0, 7130.0], [3651.0, 7927.0], [3683.0, 7457.0], [3603.0, 7756.0], [3587.0, 8737.0], [3635.0, 7736.0], [3619.0, 8027.0], [3667.0, 6993.0], [3779.0, 6163.0], [3827.0, 7161.0], [3795.0, 6157.0], [3811.0, 6027.0], [3731.0, 6466.0], [3715.0, 7381.0], [3763.0, 6340.0], [3939.0, 5811.0], [3955.0, 6043.0], [3859.0, 6695.0], [3843.0, 7190.0], [3891.0, 6808.0], [3875.0, 5812.0], [4083.0, 5166.0], [4067.0, 5976.0], [4019.0, 6538.0], [4003.0, 6549.333333333333], [4035.0, 5226.0], [4326.0, 4916.0], [4230.0, 5050.0], [4294.0, 5186.0], [4134.0, 5044.0], [4102.0, 5118.0], [4198.0, 5415.0], [4166.0, 6166.0], [4550.0, 4381.0], [4582.0, 4243.0], [4518.0, 4082.0], [4486.0, 4951.0], [4390.0, 4478.5], [4358.0, 4255.0], [4454.0, 5306.0], [4422.0, 5174.0], [4614.0, 4822.5], [4646.0, 4728.0], [4710.0, 3732.0], [4678.0, 4174.0], [4774.0, 2325.0], [4742.0, 3801.0], [4838.0, 1629.0], [4806.0, 1819.0], [4870.0, 1654.0], [4902.0, 2279.0], [4966.0, 1505.0], [4934.0, 2085.0], [4231.0, 5045.0], [4327.0, 4942.0], [4263.0, 5066.5], [4295.0, 4671.0], [4135.0, 5502.0], [4199.0, 5562.0], [4167.0, 4846.0], [4391.0, 5047.0], [4359.0, 4367.0], [4455.0, 4765.0], [4423.0, 5351.0], [4519.0, 4621.0], [4583.0, 4601.0], [4711.0, 3727.0], [4839.0, 1627.0], [4679.0, 4173.0], [4647.0, 4054.0], [4743.0, 3807.0], [4775.0, 3228.0], [4807.0, 2919.0], [4871.0, 1042.0], [4903.0, 1636.0], [4967.0, 1417.0], [4935.0, 2080.0], [541.0, 21036.0], [537.0, 21037.0], [533.0, 21034.5], [529.0, 21035.0], [525.0, 21034.0], [517.0, 21030.0], [513.0, 21030.666666666668], [569.0, 21033.0], [565.0, 21026.0], [545.0, 21037.0], [601.0, 21030.0], [597.0, 21032.0], [585.0, 21035.0], [629.0, 21032.0], [625.0, 21034.0], [621.0, 21036.0], [617.0, 21030.0], [733.0, 21047.5], [729.0, 21040.0], [725.0, 21043.0], [717.0, 21053.0], [713.0, 21047.0], [765.0, 21037.25], [761.0, 21033.0], [757.0, 21040.0], [753.0, 21042.0], [749.0, 21055.666666666668], [745.0, 21063.0], [741.0, 21058.333333333332], [797.0, 21048.0], [829.0, 21045.0], [825.0, 21033.5], [821.0, 21038.0], [817.0, 21038.0], [813.0, 21034.75], [809.0, 21035.0], [805.0, 21040.0], [801.0, 21042.5], [861.0, 21033.5], [857.0, 21026.0], [853.0, 21036.0], [841.0, 21035.666666666668], [837.0, 21033.5], [833.0, 21035.0], [881.0, 21067.0], [865.0, 21034.0], [921.0, 21036.0], [913.0, 21080.0], [957.0, 21034.0], [953.0, 21028.333333333332], [949.0, 21034.5], [945.0, 21035.0], [933.0, 21035.0], [929.0, 21038.0], [961.0, 21031.0], [1026.0, 21035.0], [1146.0, 21031.0], [1138.0, 21048.0], [1130.0, 21038.0], [1210.0, 21052.0], [1202.0, 21051.0], [1186.0, 21046.75], [1274.0, 21051.666666666668], [1234.0, 21049.0], [1226.0, 21048.5], [1338.0, 21047.333333333332], [1322.0, 21051.333333333332], [1306.0, 21046.666666666668], [1298.0, 21052.333333333332], [1290.0, 21048.0], [1354.0, 21041.0], [1346.0, 21047.333333333332], [1466.0, 21048.0], [1458.0, 21043.0], [1450.0, 21045.0], [1442.0, 21043.0], [1434.0, 21049.0], [1410.0, 21049.0], [1418.0, 21059.0], [1426.0, 21047.666666666668], [1530.0, 21040.0], [1498.0, 21044.0], [1490.0, 21047.0], [1594.0, 21050.0], [1586.0, 20185.0], [1578.0, 21032.0], [1570.0, 21031.5], [1562.0, 21030.0], [1538.0, 21035.0], [1546.0, 21031.5], [1554.0, 21032.0], [1658.0, 21029.5], [1602.0, 21057.0], [1642.0, 21047.5], [1634.0, 21045.0], [1626.0, 21048.0], [1618.0, 21044.5], [1714.0, 21144.0], [1698.0, 21020.0], [1690.0, 21029.5], [1786.0, 21047.0], [1738.0, 21148.0], [1730.0, 21147.0], [1850.0, 21066.0], [1842.0, 21051.0], [1794.0, 21046.0], [1834.0, 21057.5], [1826.0, 21043.0], [1810.0, 21052.0], [1914.0, 19687.0], [1906.0, 21125.5], [1898.0, 21058.0], [1858.0, 21070.0], [1978.0, 19679.0], [1970.0, 19727.0], [1962.0, 19976.0], [1954.0, 19454.0], [1922.0, 19680.0], [1930.0, 19766.0], [1946.0, 19624.0], [1938.0, 19657.0], [2042.0, 19654.0], [2034.0, 18808.0], [2026.0, 18836.0], [2018.0, 18817.0], [1994.0, 20013.0], [2010.0, 19338.0], [2002.0, 19073.666666666668], [2164.0, 18900.0], [2148.0, 18712.5], [2132.0, 18550.0], [2052.0, 19618.0], [2100.0, 18645.0], [2260.0, 18629.0], [2244.0, 18790.0], [2228.0, 17935.666666666668], [2212.0, 18843.0], [2196.0, 19148.0], [2420.0, 16296.0], [2404.0, 16513.0], [2388.0, 16582.0], [2372.0, 17647.0], [2308.0, 18550.0], [2324.0, 18485.0], [2356.0, 17752.0], [2340.0, 17121.0], [2548.0, 16573.0], [2532.0, 16094.0], [2500.0, 16328.5], [2452.0, 17112.0], [2484.0, 17325.0], [2468.0, 16018.0], [2660.0, 14234.0], [2676.0, 14197.0], [2596.0, 14478.0], [2628.0, 15251.0], [2564.0, 15981.0], [2580.0, 14560.0], [2612.0, 13897.0], [2804.0, 13839.0], [2788.0, 14007.0], [2756.0, 14235.0], [2724.0, 14137.5], [2708.0, 14169.0], [2692.0, 14574.0], [2932.0, 12431.0], [2916.0, 13350.0], [2884.0, 12010.0], [2820.0, 12762.0], [2836.0, 12251.0], [2868.0, 13439.0], [2852.0, 12084.0], [3012.0, 11345.0], [3044.0, 11604.0], [2996.0, 11404.0], [2980.0, 11939.0], [2964.0, 11114.0], [2948.0, 12067.0], [3188.0, 10258.0], [3156.0, 11181.0], [3140.0, 10738.0], [3124.0, 11002.0], [3092.0, 10662.0], [3076.0, 10685.0], [3300.0, 10620.0], [3204.0, 10097.0], [3220.0, 10051.0], [3252.0, 10503.5], [3236.0, 10883.5], [3284.0, 10658.0], [3332.0, 9215.0], [3348.0, 10395.0], [3380.0, 8946.0], [3364.0, 9352.0], [3396.0, 8682.0], [3412.0, 9420.0], [3444.0, 8684.0], [3428.0, 8860.0], [3556.0, 8526.0], [3524.0, 8355.0], [3540.0, 7735.0], [3572.0, 7844.0], [3476.0, 8260.0], [3460.0, 8622.0], [3508.0, 8444.0], [3492.0, 8050.0], [3700.0, 7046.0], [3652.0, 7459.0], [3668.0, 6968.0], [3684.0, 7971.0], [3588.0, 8308.0], [3604.0, 7414.0], [3828.0, 6176.0], [3780.0, 7451.0], [3796.0, 6975.0], [3812.0, 6008.0], [3716.0, 7642.0], [3764.0, 7554.0], [3844.0, 5805.0], [3956.0, 6041.0], [3860.0, 5777.0], [3892.0, 6801.0], [3876.0, 6178.0], [3924.0, 6949.666666666667], [4084.0, 6323.0], [4068.0, 5187.0], [4036.0, 6270.0], [3972.0, 5581.5], [3988.0, 5634.0], [4020.0, 6533.0], [4004.0, 6239.0], [4052.0, 5311.666666666667], [4232.0, 4688.0], [4264.0, 5458.0], [4296.0, 4594.0], [4136.0, 4950.0], [4200.0, 5921.0], [4168.0, 4843.0], [4552.0, 4918.0], [4488.0, 4040.0], [4584.0, 3822.0], [4520.0, 4038.0], [4360.0, 4295.0], [4392.0, 4672.0], [4456.0, 4765.0], [4424.0, 4066.0], [4616.0, 4836.5], [4712.0, 3729.0], [4776.0, 3211.0], [4744.0, 3063.0], [4840.0, 1620.0], [4968.0, 1275.0], [4936.0, 1573.0], [4233.0, 5987.0], [4265.0, 5458.0], [4329.0, 5003.5], [4297.0, 4669.0], [4137.0, 5032.0], [4105.0, 5659.666666666667], [4361.0, 4370.0], [4393.0, 4950.0], [4425.0, 4057.0], [4553.0, 4002.0], [4521.0, 3782.0], [4489.0, 3879.0], [4585.0, 3879.0], [4713.0, 2976.0], [4649.0, 4682.0], [4681.0, 3375.6666666666665], [4745.0, 4063.0], [4777.0, 3551.0], [4841.0, 1538.0], [4809.0, 2922.0], [4873.0, 1895.5], [4905.0, 2331.5], [4937.0, 1975.0], [2069.0, 19136.5], [2053.0, 18699.0], [2133.0, 18543.0], [2117.0, 18572.0], [2101.0, 19550.0], [2085.0, 18721.666666666668], [2197.0, 18822.0], [2293.0, 18242.0], [2181.0, 18491.0], [2261.0, 18766.0], [2245.0, 17873.0], [2229.0, 18614.0], [2213.0, 18841.0], [2421.0, 16687.0], [2405.0, 16480.0], [2373.0, 16657.0], [2309.0, 17184.0], [2325.0, 17642.0], [2357.0, 17742.0], [2341.0, 17102.0], [2549.0, 15782.0], [2533.0, 16885.0], [2501.0, 17252.0], [2437.0, 16180.5], [2453.0, 17107.0], [2485.0, 15820.0], [2469.0, 15971.0], [2661.0, 14240.0], [2677.0, 14718.0], [2581.0, 14658.0], [2565.0, 15993.0], [2645.0, 14068.0], [2629.0, 15248.0], [2613.0, 13895.0], [2597.0, 14485.0], [2789.0, 14016.0], [2709.0, 14126.0], [2693.0, 14199.0], [2773.0, 13710.666666666666], [2741.0, 13784.5], [2725.0, 14125.0], [2933.0, 11979.0], [2917.0, 13286.0], [2885.0, 12058.0], [2837.0, 12262.0], [2821.0, 13796.0], [3061.0, 11240.0], [3045.0, 10524.0], [2965.0, 11098.0], [3029.0, 11617.5], [3013.0, 11492.0], [2997.0, 11807.0], [3173.0, 10358.333333333334], [3093.0, 10966.0], [3157.0, 11337.0], [3141.0, 11221.0], [3125.0, 11555.0], [3109.0, 11190.0], [3301.0, 10689.0], [3317.0, 9491.5], [3205.0, 10074.0], [3221.0, 10039.0], [3253.0, 10146.0], [3237.0, 10849.0], [3285.0, 10803.0], [3333.0, 9194.0], [3445.0, 8442.0], [3381.0, 8882.0], [3365.0, 9123.0], [3397.0, 8997.0], [3413.0, 8963.0], [3429.0, 9286.0], [3525.0, 8344.0], [3573.0, 7652.0], [3541.0, 7755.0], [3557.0, 8523.0], [3477.0, 9043.0], [3509.0, 9097.0], [3493.0, 9381.0], [3701.0, 6622.0], [3669.0, 7216.0], [3685.0, 7885.0], [3589.0, 7806.0], [3605.0, 8623.0], [3637.0, 8168.5], [3621.0, 7706.0], [3829.0, 5813.0], [3781.0, 7538.0], [3717.0, 7875.0], [3765.0, 6616.0], [3749.0, 7307.0], [3797.0, 6969.0], [3941.0, 5803.0], [3909.0, 6795.666666666667], [3925.0, 6718.0], [3957.0, 5739.0], [3861.0, 6901.0], [3845.0, 5802.0], [3893.0, 6799.0], [3877.0, 6894.0], [4085.0, 5953.0], [4069.0, 5641.0], [4037.0, 6345.0], [3989.0, 6179.0], [3973.0, 5761.0], [4021.0, 6340.0], [4330.0, 5254.0], [4234.0, 4721.0], [4266.0, 4952.0], [4138.0, 5008.0], [4202.0, 4984.0], [4170.0, 4840.5], [4490.0, 4171.0], [4586.0, 3869.0], [4522.0, 5151.0], [4554.0, 3932.0], [4458.0, 5054.0], [4426.0, 4121.0], [4650.0, 4045.0], [4714.0, 4376.0], [4682.0, 4184.0], [4746.0, 3711.0], [4842.0, 1905.0], [4810.0, 2908.0], [4874.0, 2257.0], [4906.0, 2330.0], [4938.0, 1666.0], [4331.0, 4974.0], [4235.0, 6073.0], [4299.0, 4798.0], [4139.0, 5486.0], [4107.0, 5806.5], [4171.0, 6305.0], [4363.0, 4706.0], [4395.0, 4499.0], [4459.0, 4646.0], [4427.0, 4135.0], [4555.0, 3924.0], [4587.0, 4101.0], [4715.0, 4036.0], [4651.0, 4369.0], [4683.0, 4567.0], [4747.0, 3040.0], [4779.0, 2325.5], [4843.0, 2576.0], [4811.0, 3205.0], [4875.0, 2241.0], [4939.0, 1833.0], [1035.0, 21033.0], [1147.0, 21045.5], [1131.0, 21037.0], [1115.0, 21040.0], [1107.0, 21045.0], [1099.0, 21048.0], [1211.0, 21048.5], [1163.0, 21048.0], [1155.0, 21041.333333333332], [1243.0, 21036.0], [1235.0, 21046.0], [1227.0, 21047.0], [1331.0, 21055.0], [1323.0, 21048.0], [1307.0, 21049.0], [1299.0, 21052.0], [1291.0, 21048.0], [1283.0, 21050.0], [1403.0, 21054.0], [1395.0, 21059.0], [1355.0, 21044.75], [1467.0, 21050.0], [1451.0, 21048.5], [1443.0, 21044.0], [1411.0, 21048.5], [1419.0, 21050.0], [1483.0, 21050.5], [1595.0, 21050.5], [1587.0, 20176.0], [1579.0, 21032.333333333332], [1563.0, 21034.0], [1555.0, 21029.0], [1547.0, 21030.0], [1539.0, 20955.0], [1643.0, 21049.0], [1603.0, 21060.0], [1723.0, 21063.5], [1715.0, 21146.0], [1699.0, 21021.0], [1667.0, 21038.5], [1779.0, 21041.0], [1739.0, 21147.0], [1731.0, 21148.5], [1835.0, 21065.333333333332], [1819.0, 21059.0], [1803.0, 21053.0], [1795.0, 21044.0], [1915.0, 19707.0], [1907.0, 19740.0], [1891.0, 21125.5], [1867.0, 21116.0], [1971.0, 19732.0], [1979.0, 19685.0], [1931.0, 19758.0], [1923.0, 19679.0], [1963.0, 19924.0], [1955.0, 20077.0], [1947.0, 20120.0], [1939.0, 19653.0], [2043.0, 19653.0], [2035.0, 18895.0], [2027.0, 18820.0], [2019.0, 19875.0], [1987.0, 19618.5], [1995.0, 20006.0], [2011.0, 18854.0], [2003.0, 18868.0], [2070.0, 19723.0], [2054.0, 19619.0], [2134.0, 18842.0], [2118.0, 18568.0], [2086.0, 18666.0], [2294.0, 17743.0], [2198.0, 19162.0], [2262.0, 18724.0], [2246.0, 17421.0], [2230.0, 18613.0], [2214.0, 18842.0], [2422.0, 16247.0], [2406.0, 16845.0], [2374.0, 17635.0], [2310.0, 17696.0], [2326.0, 17107.0], [2358.0, 17741.0], [2342.0, 17044.0], [2550.0, 15877.0], [2534.0, 16001.0], [2518.0, 15768.6], [2502.0, 15770.0], [2438.0, 16179.0], [2454.0, 17015.0], [2486.0, 15807.0], [2470.0, 16013.0], [2582.0, 14539.0], [2662.0, 14227.0], [2566.0, 15991.0], [2646.0, 14118.0], [2630.0, 15222.0], [2614.0, 13888.0], [2598.0, 14512.0], [2790.0, 14012.0], [2710.0, 14378.0], [2694.0, 14156.0], [2774.0, 13136.0], [2742.0, 13781.0], [2726.0, 14087.0], [2934.0, 11899.0], [2918.0, 12249.0], [2902.0, 13289.25], [2886.0, 12052.0], [2822.0, 13800.0], [2838.0, 12228.0], [2870.0, 12774.0], [2854.0, 12115.5], [3046.0, 11107.0], [3030.0, 11085.0], [2998.0, 11254.0], [2982.0, 11934.0], [2950.0, 12047.0], [3174.0, 10333.0], [3078.0, 11105.5], [3158.0, 10410.0], [3142.0, 11384.0], [3126.0, 11485.0], [3110.0, 11204.0], [3302.0, 9659.0], [3318.0, 9215.0], [3270.0, 10016.25], [3286.0, 10669.0], [3206.0, 9656.0], [3222.0, 10044.0], [3254.0, 10906.0], [3238.0, 9551.0], [3350.0, 932.0], [3334.0, 9709.0], [3366.0, 9001.0], [3398.0, 8682.0], [3430.0, 8783.0], [3414.0, 8592.0], [3574.0, 7965.0], [3526.0, 7839.0], [3542.0, 8026.0], [3558.0, 8009.0], [3462.0, 8432.0], [3478.0, 8249.0], [3702.0, 6618.0], [3686.0, 7410.0], [3654.0, 7365.0], [3606.0, 8666.0], [3590.0, 7434.0], [3638.0, 7925.0], [3622.0, 8305.0], [3814.0, 6456.5], [3830.0, 5922.0], [3782.0, 6935.0], [3798.0, 6056.0], [3718.0, 7622.0], [3734.0, 6379.333333333333], [3766.0, 6977.0], [3750.0, 7450.0], [3942.0, 5805.0], [3958.0, 6718.0], [3862.0, 6916.0], [3846.0, 5805.0], [3894.0, 6793.0], [3878.0, 6851.0], [3926.0, 6167.0], [3974.0, 5398.0], [3990.0, 5979.0], [4022.0, 6689.0], [4054.0, 5757.5], [4038.0, 5144.0], [4332.0, 5239.0], [4236.0, 5111.0], [4268.0, 4788.0], [4300.0, 4662.0], [4140.0, 5485.0], [4108.0, 5107.0], [4492.0, 4705.0], [4524.0, 3953.0], [4556.0, 3693.0], [4396.0, 5465.0], [4460.0, 5201.0], [4428.0, 5129.0], [4652.0, 4402.0], [4716.0, 3043.0], [4780.0, 2202.0], [4748.0, 2604.0], [4844.0, 2590.0], [4812.0, 3171.0], [4876.0, 1517.0], [4908.0, 2293.5], [4940.0, 2009.0], [4333.0, 5235.0], [4301.0, 4950.0], [4237.0, 4712.0], [4141.0, 5374.0], [4109.0, 5199.0], [4205.0, 5175.0], [4173.0, 4905.0], [4557.0, 3671.0], [4365.0, 4895.0], [4461.0, 4980.0], [4429.0, 4113.0], [4525.0, 5031.0], [4589.0, 4090.5], [4717.0, 4238.0], [4653.0, 4367.0], [4749.0, 2941.0], [4781.0, 3453.0], [4845.0, 1906.0], [4813.0, 2863.0], [4877.0, 2224.0], [4909.0, 2243.0], [4941.0, 1946.0], [2167.0, 18881.333333333332], [2151.0, 18616.333333333332], [2135.0, 18541.0], [2119.0, 18560.0], [2055.0, 19725.0], [2071.0, 18671.0], [2103.0, 19097.0], [2087.0, 18663.0], [2295.0, 18610.0], [2279.0, 18629.2], [2263.0, 18734.0], [2231.0, 18611.0], [2199.0, 17885.0], [2183.0, 18485.0], [2215.0, 17567.0], [2423.0, 16239.0], [2407.0, 16442.0], [2391.0, 17316.333333333332], [2375.0, 16581.0], [2311.0, 18674.0], [2359.0, 17735.0], [2343.0, 17033.0], [2551.0, 15875.0], [2535.0, 15929.0], [2519.0, 15808.0], [2503.0, 15752.0], [2455.0, 16242.0], [2487.0, 15924.0], [2471.0, 15969.0], [2679.0, 14284.5], [2663.0, 14234.0], [2647.0, 14102.0], [2631.0, 15208.0], [2567.0, 15990.0], [2583.0, 14533.0], [2615.0, 15351.0], [2599.0, 14527.0], [2807.0, 13658.0], [2791.0, 13331.0], [2775.0, 14089.0], [2759.0, 13682.0], [2727.0, 14079.0], [2935.0, 11979.0], [2919.0, 12591.0], [2903.0, 11967.0], [2887.0, 12048.0], [2839.0, 12231.0], [2823.0, 13797.0], [2871.0, 12119.0], [2855.0, 12050.0], [3047.0, 10775.0], [3063.0, 11162.0], [2967.0, 11495.5], [2951.0, 12029.0], [3031.0, 11002.0], [3015.0, 11242.5], [2999.0, 10848.0], [2983.0, 11634.5], [3095.0, 11231.5], [3175.0, 10330.0], [3079.0, 11203.0], [3159.0, 11158.0], [3143.0, 11390.0], [3127.0, 11170.0], [3111.0, 11212.0], [3319.0, 9250.0], [3303.0, 10711.0], [3271.0, 9945.0], [3207.0, 9658.0], [3223.0, 10031.0], [3255.0, 9875.0], [3239.0, 10197.0], [3335.0, 9179.0], [3351.0, 6635.4], [3367.0, 4950.0], [3399.0, 8663.0], [3415.0, 8561.0], [3447.0, 8446.5], [3431.0, 8831.0], [3559.0, 7928.0], [3527.0, 8313.0], [3479.0, 8469.0], [3463.0, 8366.0], [3511.0, 8434.0], [3543.0, 7703.0], [3703.0, 6615.0], [3655.0, 8078.0], [3607.0, 8093.0], [3591.0, 7514.0], [3639.0, 7755.0], [3623.0, 7244.0], [3815.0, 7335.0], [3831.0, 5848.0], [3783.0, 7549.0], [3735.0, 6379.0], [3719.0, 7785.0], [3767.0, 7455.0], [3943.0, 5800.0], [3927.0, 6273.0], [3959.0, 6796.0], [3863.0, 5771.0], [3847.0, 5802.0], [3895.0, 6144.0], [4071.0, 5743.0], [3975.0, 5383.0], [3991.0, 5732.0], [4055.0, 5994.0], [4039.0, 5224.0], [4238.0, 4701.0], [4270.0, 5229.0], [4334.0, 5626.0], [4302.0, 4638.0], [4110.0, 5174.0], [4206.0, 5875.0], [4174.0, 5236.0], [4590.0, 4093.0], [4526.0, 3802.0], [4558.0, 5007.0], [4398.0, 4790.0], [4462.0, 4958.0], [4430.0, 5157.0], [4718.0, 4324.0], [4654.0, 4559.0], [4686.0, 3940.3333333333335], [4782.0, 2590.0], [4750.0, 2972.0], [4846.0, 2362.0], [4814.0, 2233.0], [4878.0, 2221.0], [4942.0, 1671.0], [4335.0, 5890.0], [4239.0, 5893.0], [4271.0, 5011.0], [4143.0, 5470.0], [4111.0, 5115.0], [4175.0, 4812.0], [4591.0, 4543.0], [4399.0, 4904.0], [4367.0, 4362.0], [4431.0, 4122.0], [4527.0, 3803.0], [4655.0, 4666.0], [4847.0, 2370.0], [4687.0, 3167.0], [4719.0, 4228.0], [4623.0, 4838.5], [4751.0, 2987.0], [4783.0, 2851.0], [4815.0, 1839.0], [4879.0, 2504.0], [4911.0, 2190.5], [4943.0, 1372.0], [263.0, 21045.0], [283.0, 21037.0], [281.0, 21046.0], [279.0, 21047.0], [275.0, 21037.0], [273.0, 21035.0], [303.0, 21033.666666666668], [301.0, 21038.0], [299.0, 21036.5], [291.0, 21038.0], [289.0, 21034.0], [319.0, 21038.0], [317.0, 21049.0], [315.0, 21032.5], [313.0, 21033.5], [311.0, 21051.0], [309.0, 21036.0], [307.0, 21033.333333333332], [305.0, 21034.75], [333.0, 21037.0], [331.0, 21035.0], [329.0, 21040.0], [327.0, 21056.0], [323.0, 21032.0], [321.0, 21037.0], [347.0, 21037.5], [345.0, 21035.0], [343.0, 21037.0], [341.0, 21037.0], [339.0, 21039.0], [337.0, 21041.666666666668], [361.0, 21039.0], [359.0, 21038.666666666668], [357.0, 21036.0], [355.0, 21038.0], [353.0, 21038.5], [399.0, 21038.666666666668], [395.0, 21034.0], [393.0, 21038.0], [391.0, 21032.0], [389.0, 21031.0], [387.0, 21032.0], [385.0, 21038.0], [415.0, 21033.0], [413.0, 21039.0], [411.0, 21034.25], [409.0, 21028.0], [407.0, 21034.0], [405.0, 21029.0], [403.0, 21031.5], [401.0, 21030.0], [431.0, 21039.0], [429.0, 21037.0], [427.0, 21035.75], [425.0, 21043.333333333332], [421.0, 21034.0], [419.0, 21030.0], [417.0, 21032.0], [447.0, 21039.0], [445.0, 21031.0], [443.0, 21029.0], [439.0, 21027.0], [437.0, 21048.0], [435.0, 21026.0], [449.0, 21032.0], [477.0, 21041.0], [473.0, 21025.0], [493.0, 21028.0], [491.0, 21027.0], [489.0, 21017.0], [487.0, 21038.0], [485.0, 21017.0], [481.0, 21034.5], [509.0, 21029.5], [507.0, 21024.0], [505.0, 21017.0], [503.0, 21024.333333333332], [501.0, 21039.5], [499.0, 21028.0], [497.0, 21030.666666666668], [542.0, 21034.0], [538.0, 21033.0], [534.0, 21033.0], [530.0, 21032.666666666668], [526.0, 21035.0], [522.0, 21032.0], [518.0, 21029.0], [514.0, 21029.0], [562.0, 21040.0], [558.0, 21033.0], [554.0, 21027.0], [606.0, 21032.75], [598.0, 21035.0], [594.0, 21036.0], [590.0, 21038.0], [582.0, 21039.0], [630.0, 21027.0], [622.0, 21031.5], [618.0, 21030.5], [614.0, 21031.0], [610.0, 21035.666666666668], [730.0, 21043.5], [726.0, 21057.0], [714.0, 21066.0], [766.0, 21036.350000000002], [762.0, 21039.0], [750.0, 21066.0], [746.0, 21041.0], [738.0, 21054.5], [778.0, 21035.25], [774.0, 21033.5], [770.0, 21055.0], [830.0, 21037.333333333332], [822.0, 21037.5], [818.0, 21035.666666666668], [814.0, 21034.0], [810.0, 21047.0], [802.0, 21035.0], [862.0, 21034.0], [854.0, 21031.0], [850.0, 21033.666666666668], [846.0, 21035.0], [834.0, 21033.0], [866.0, 21034.666666666668], [926.0, 21032.25], [922.0, 21029.0], [918.0, 21034.0], [950.0, 21032.0], [946.0, 21033.0], [942.0, 21030.5], [938.0, 21034.0], [934.0, 21028.0], [962.0, 21031.833333333332], [1022.0, 21039.0], [1044.0, 21035.666666666668], [1028.0, 21032.0], [1100.0, 21049.0], [1148.0, 21047.0], [1124.0, 21042.0], [1108.0, 21037.0], [1092.0, 21032.0], [1204.0, 21038.0], [1196.0, 21050.0], [1188.0, 21042.0], [1180.0, 21049.0], [1172.0, 21043.0], [1340.0, 21042.0], [1332.0, 21048.0], [1308.0, 21048.0], [1300.0, 21053.0], [1284.0, 21050.0], [1420.0, 21057.0], [1468.0, 21050.333333333332], [1412.0, 21059.0], [1444.0, 21045.666666666668], [1436.0, 21049.5], [1428.0, 21053.0], [1532.0, 21035.0], [1524.0, 21042.0], [1492.0, 21045.333333333332], [1484.0, 21052.0], [1548.0, 21031.0], [1588.0, 20174.0], [1580.0, 21029.0], [1572.0, 21031.75], [1556.0, 21026.0], [1540.0, 21034.5], [1660.0, 21033.0], [1652.0, 21044.0], [1612.0, 21057.0], [1636.0, 21050.0], [1628.0, 21047.0], [1620.0, 21055.0], [1724.0, 21063.0], [1708.0, 21023.25], [1700.0, 21025.5], [1684.0, 21021.0], [1676.0, 21039.0], [1772.0, 21149.0], [1740.0, 21149.0], [1844.0, 21066.25], [1852.0, 21064.0], [1828.0, 21052.5], [1812.0, 21054.333333333332], [1804.0, 21077.0], [1916.0, 19691.0], [1908.0, 19732.0], [1900.0, 21055.75], [1892.0, 21053.0], [1868.0, 21078.0], [1860.0, 21074.8], [1980.0, 19673.0], [1972.0, 19711.0], [1964.0, 19911.0], [1956.0, 19448.0], [1948.0, 19603.0], [1924.0, 19666.0], [1932.0, 19754.0], [1940.0, 19650.0], [1996.0, 19081.0], [2036.0, 19810.0], [1988.0, 19604.0], [2028.0, 18804.0], [2020.0, 18848.0], [2012.0, 18853.0], [2004.0, 18989.0], [2168.0, 18885.0], [2152.0, 18885.0], [2120.0, 19477.0], [2104.0, 19550.0], [2072.0, 18685.0], [2088.0, 19543.0], [2200.0, 18807.0], [2280.0, 18718.0], [2248.0, 18338.5], [2216.0, 19036.0], [2184.0, 18488.0], [2424.0, 16235.0], [2328.0, 18555.5], [2392.0, 16602.0], [2376.0, 17822.0], [2360.0, 17707.0], [2344.0, 17064.0], [2552.0, 15861.0], [2536.0, 15997.0], [2520.0, 17065.0], [2504.0, 15750.0], [2488.0, 15804.0], [2440.0, 16145.5], [2456.0, 16237.0], [2472.0, 15966.0], [2584.0, 14528.0], [2664.0, 14232.0], [2680.0, 14653.0], [2648.0, 14102.0], [2600.0, 14509.0], [2568.0, 15962.0], [2712.0, 14238.5], [2792.0, 14056.0], [2696.0, 14015.0], [2776.0, 14088.0], [2760.0, 14140.0], [2744.0, 13786.0], [2728.0, 14117.0], [2936.0, 11918.0], [2920.0, 12103.0], [2904.0, 12017.0], [2888.0, 11956.0], [2856.0, 12048.0], [2840.0, 12214.0], [2824.0, 13189.0], [3064.0, 11014.0], [3048.0, 11209.0], [3032.0, 11002.0], [3000.0, 10850.0], [2952.0, 12008.0], [2968.0, 12468.0], [2984.0, 12309.0], [3176.0, 10277.0], [3192.0, 10766.5], [3080.0, 11210.0], [3160.0, 11118.0], [3144.0, 10522.0], [3128.0, 11631.0], [3112.0, 11640.0], [3320.0, 9215.0], [3272.0, 10867.0], [3304.0, 9798.0], [3208.0, 11097.0], [3224.0, 10818.0], [3256.0, 10336.0], [3240.0, 10187.0], [3288.0, 10792.0], [3336.0, 9700.0], [3352.0, 5627.5], [3384.0, 8881.333333333334], [3368.0, 10271.0], [3400.0, 9168.0], [3416.0, 8889.0], [3448.0, 8963.0], [3432.0, 9550.0], [3576.0, 7986.0], [3528.0, 9216.0], [3560.0, 7654.0], [3480.0, 8762.0], [3464.0, 8181.0], [3512.0, 8016.0], [3496.0, 8144.333333333333], [3544.0, 8113.0], [3704.0, 7711.0], [3656.0, 3943.5], [3688.0, 7167.0], [3592.0, 7795.0], [3608.0, 8664.0], [3624.0, 8313.0], [3672.0, 7212.666666666667], [3832.0, 6974.0], [3784.0, 6985.0], [3816.0, 7001.0], [3720.0, 7730.0], [3736.0, 6384.0], [3768.0, 6204.0], [3752.0, 7070.5], [3800.0, 6541.5], [3944.0, 6321.0], [3848.0, 6981.0], [3864.0, 7144.0], [3896.0, 6783.0], [3880.0, 6628.0], [3928.0, 5537.0], [4072.0, 5111.0], [4040.0, 6012.0], [3976.0, 5472.0], [4024.0, 5735.0], [4008.0, 6554.75], [4056.0, 5476.0], [4304.0, 5374.5], [4336.0, 4559.0], [4240.0, 4694.0], [4272.0, 4946.0], [4144.0, 4866.0], [4112.0, 5113.0], [4208.0, 5076.0], [4176.0, 4807.0], [4592.0, 4887.0], [4560.0, 4785.0], [4528.0, 3730.0], [4368.0, 5685.0], [4400.0, 4486.0], [4464.0, 5144.0], [4720.0, 3991.0], [4656.0, 3334.0], [4688.0, 3463.0], [4784.0, 2079.0], [4752.0, 2596.0], [4848.0, 2325.0], [4816.0, 2929.0], [4880.0, 1586.0], [4912.0, 2236.0], [4944.0, 1902.0], [4241.0, 5124.0], [4337.0, 4549.0], [4273.0, 4708.0], [4145.0, 4994.0], [4113.0, 5910.0], [4209.0, 4782.0], [4177.0, 4893.0], [4561.0, 4032.0], [4401.0, 5244.0], [4465.0, 4751.5], [4529.0, 4816.0], [4497.0, 4470.6], [4593.0, 4274.0], [4657.0, 4647.0], [4689.0, 1443.0], [4721.0, 4008.0], [4625.0, 4130.285714285714], [4753.0, 2964.0], [4785.0, 2848.0], [4849.0, 1924.0], [4817.0, 2828.0], [4881.0, 2509.0], [4913.0, 2243.0], [4945.0, 1775.0], [2073.0, 18685.0], [2057.0, 19616.0], [2169.0, 18875.0], [2153.0, 18124.0], [2137.0, 18539.5], [2121.0, 19470.0], [2105.0, 18680.0], [2089.0, 18732.0], [2201.0, 18800.0], [2281.0, 18712.0], [2185.0, 18487.0], [2265.0, 18736.0], [2249.0, 17884.0], [2233.0, 17940.5], [2217.0, 18885.0], [2329.0, 18467.0], [2425.0, 16228.0], [2313.0, 18509.5], [2393.0, 17602.0], [2377.0, 16640.0], [2361.0, 17710.0], [2345.0, 17430.0], [2553.0, 16177.0], [2537.0, 15918.0], [2521.0, 16988.0], [2505.0, 15747.0], [2489.0, 15798.0], [2441.0, 16182.0], [2473.0, 16011.0], [2665.0, 14224.0], [2585.0, 14521.0], [2569.0, 15982.0], [2649.0, 14107.0], [2633.0, 14052.5], [2601.0, 14515.0], [2713.0, 14120.0], [2793.0, 13822.0], [2777.0, 13439.0], [2761.0, 14141.0], [2745.0, 14376.0], [2729.0, 14118.0], [2937.0, 11915.0], [2921.0, 12613.0], [2905.0, 13334.0], [2889.0, 13362.0], [2873.0, 13331.0], [2825.0, 13306.0], [2841.0, 12525.0], [2857.0, 12046.0], [2969.0, 12377.0], [2953.0, 11158.0], [3033.0, 10998.0], [3017.0, 11140.0], [3001.0, 10846.0], [3097.0, 11235.0], [3193.0, 11119.0], [3177.0, 11120.0], [3081.0, 10687.0], [3129.0, 11543.0], [3113.0, 11701.0], [3273.0, 10861.0], [3321.0, 9203.0], [3305.0, 9205.0], [3257.0, 9991.0], [3241.0, 10024.0], [3337.0, 9448.0], [3353.0, 758.0], [3369.0, 8990.0], [3449.0, 8718.0], [3401.0, 8968.0], [3417.0, 8845.0], [3577.0, 8864.0], [3529.0, 8301.0], [3561.0, 7660.0], [3465.0, 8234.0], [3481.0, 8121.0], [3513.0, 8017.0], [3497.0, 8314.0], [3545.0, 8104.0], [3705.0, 7982.0], [3657.0, 6978.0], [3689.0, 7405.0], [3593.0, 7474.0], [3609.0, 8161.0], [3641.0, 7581.0], [3673.0, 6893.0], [3833.0, 7139.0], [3817.0, 6853.0], [3785.0, 7359.0], [3721.0, 7610.0], [3769.0, 7280.0], [3753.0, 7444.0], [3801.0, 6078.0], [3961.0, 5685.0], [3913.0, 6982.5], [3945.0, 5399.0], [3865.0, 6237.0], [3849.0, 5787.0], [3897.0, 6782.0], [3881.0, 5721.0], [3929.0, 6954.0], [4041.0, 6358.0], [4057.0, 5482.0], [4073.0, 5138.0], [3993.0, 5987.0], [4025.0, 5574.0], [4009.0, 6236.0], [4338.0, 4555.0], [4274.0, 5708.0], [4146.0, 6099.0], [4114.0, 5411.0], [4210.0, 5546.0], [4178.0, 6279.0], [4562.0, 4213.0], [4594.0, 3451.0], [4402.0, 4186.0], [4370.0, 4876.5], [4466.0, 5011.0], [4434.0, 4927.0], [4626.0, 4769.0], [4658.0, 3320.0], [4722.0, 4284.0], [4690.0, 3515.0], [4786.0, 2042.0], [4754.0, 2934.0], [4850.0, 2754.0], [4818.0, 2496.0], [4882.0, 1945.0], [4914.0, 2221.0], [4946.0, 1765.0], [4307.0, 5308.333333333333], [4339.0, 4542.0], [4243.0, 4770.0], [4275.0, 4680.0], [4147.0, 5358.0], [4115.0, 5903.0], [4211.0, 4677.0], [4179.0, 4752.0], [4371.0, 5527.0], [4403.0, 4183.0], [4467.0, 3822.0], [4435.0, 4112.0], [4563.0, 4780.0], [4531.0, 4244.0], [4595.0, 3466.0], [4723.0, 2189.5], [4627.0, 4486.0], [4691.0, 3963.0], [4659.0, 3620.0], [4787.0, 1983.0], [4851.0, 2783.0], [4819.0, 1819.0], [4883.0, 2509.0], [4915.0, 1688.0], [4947.0, 852.0], [1045.0, 21029.999999999996], [1149.0, 21043.0], [1133.0, 21033.666666666668], [1101.0, 21047.0], [1189.0, 21041.5], [1181.0, 21043.0], [1173.0, 21042.0], [1165.0, 21045.0], [1245.0, 21050.2], [1237.0, 21049.333333333332], [1229.0, 21042.0], [1221.0, 21049.0], [1333.0, 21046.0], [1309.0, 21047.333333333332], [1301.0, 21050.0], [1293.0, 21049.666666666668], [1285.0, 21054.0], [1397.0, 21059.5], [1349.0, 21044.0], [1461.0, 21043.0], [1421.0, 21051.0], [1453.0, 21047.333333333332], [1445.0, 21044.0], [1437.0, 21044.5], [1429.0, 21048.0], [1501.0, 21044.0], [1493.0, 21046.333333333332], [1589.0, 20160.0], [1597.0, 21046.0], [1581.0, 21744.0], [1565.0, 21030.0], [1557.0, 21032.0], [1549.0, 21029.0], [1653.0, 21041.0], [1661.0, 21046.0], [1613.0, 21053.0], [1605.0, 21057.0], [1645.0, 21042.0], [1637.0, 21047.0], [1629.0, 21037.0], [1725.0, 21062.0], [1685.0, 21029.0], [1677.0, 21031.5], [1669.0, 21043.5], [1781.0, 21044.0], [1765.0, 21149.0], [1757.0, 21148.0], [1749.0, 21147.5], [1733.0, 21149.0], [1853.0, 21070.0], [1837.0, 21054.0], [1821.0, 21050.666666666668], [1797.0, 21040.0], [1917.0, 20096.0], [1901.0, 19778.0], [1885.0, 20984.681818181816], [1861.0, 21112.5], [1933.0, 19749.0], [1973.0, 18962.0], [1925.0, 20049.0], [1965.0, 19876.0], [1957.0, 19461.0], [1949.0, 20091.0], [1941.0, 19731.0], [2045.0, 19697.5], [2037.0, 18791.0], [2029.0, 18808.0], [2021.0, 18855.0], [2013.0, 18875.0], [1989.0, 19008.0], [1997.0, 18875.0], [2005.0, 18864.0], [2170.0, 18885.0], [2154.0, 18531.0], [2138.0, 18463.0], [2106.0, 18678.0], [2074.0, 18682.0], [2058.0, 18684.0], [2090.0, 19596.0], [2202.0, 18797.0], [2298.0, 17742.0], [2266.0, 17820.0], [2234.0, 17951.0], [2218.0, 19028.0], [2186.0, 19220.0], [2410.0, 16289.666666666666], [2426.0, 16226.0], [2330.0, 17142.0], [2394.0, 16441.0], [2378.0, 16649.0], [2362.0, 17699.0], [2346.0, 16956.0], [2554.0, 15735.0], [2538.0, 16331.0], [2522.0, 16162.0], [2506.0, 15859.0], [2490.0, 15801.0], [2458.0, 16593.0], [2442.0, 16191.0], [2474.0, 15957.0], [2682.0, 14149.0], [2666.0, 13725.0], [2650.0, 14102.0], [2570.0, 15848.0], [2586.0, 14518.0], [2602.0, 14492.0], [2794.0, 12872.0], [2698.0, 13859.0], [2778.0, 13876.0], [2762.0, 14100.0], [2746.0, 14373.0], [2730.0, 14110.0], [2922.0, 11883.0], [2938.0, 11950.0], [2842.0, 12503.0], [2826.0, 12273.0], [2906.0, 13333.0], [2874.0, 13303.5], [2858.0, 12033.0], [3050.0, 10931.5], [3066.0, 10931.0], [2970.0, 12376.0], [3034.0, 10989.0], [3002.0, 11154.0], [2986.0, 12145.5], [3178.0, 10294.0], [3194.0, 10248.0], [3098.0, 11111.0], [3082.0, 10342.0], [3146.0, 11246.0], [3130.0, 11631.0], [3114.0, 10933.0], [3322.0, 9204.0], [3274.0, 10287.0], [3306.0, 9633.0], [3210.0, 11033.5], [3226.0, 9596.0], [3258.0, 9992.0], [3242.0, 10390.0], [3290.0, 10645.0], [3338.0, 9698.0], [3450.0, 8331.0], [3386.0, 8874.5], [3370.0, 8945.0], [3402.0, 9088.0], [3354.0, 9740.0], [3418.0, 8829.0], [3578.0, 7633.0], [3530.0, 8167.0], [3562.0, 7926.0], [3466.0, 8347.0], [3482.0, 8499.0], [3514.0, 8019.0], [3498.0, 8312.0], [3546.0, 7734.0], [3690.0, 6765.0], [3658.0, 7802.0], [3610.0, 7702.0], [3594.0, 7794.0], [3642.0, 7198.0], [3626.0, 7450.5], [3674.0, 8191.0], [3834.0, 6640.0], [3786.0, 6982.0], [3818.0, 6657.0], [3722.0, 7615.0], [3738.0, 6401.0], [3770.0, 7609.0], [3754.0, 6225.0], [3802.0, 6953.0], [3946.0, 5770.0], [3914.0, 7031.0], [3866.0, 6603.0], [3882.0, 6160.0], [3930.0, 5838.0], [4074.0, 5220.0], [4090.0, 5544.4], [4026.0, 6334.0], [4010.0, 5386.0], [4244.0, 5514.0], [4340.0, 4411.0], [4276.0, 5101.0], [4308.0, 4502.0], [4148.0, 5049.0], [4116.0, 5114.0], [4212.0, 5541.0], [4596.0, 4260.0], [4564.0, 4652.0], [4532.0, 4006.0], [4500.0, 4874.666666666667], [4372.0, 4722.0], [4404.0, 4183.0], [4436.0, 4024.0], [4724.0, 4293.0], [4660.0, 3216.0], [4692.0, 4170.0], [4788.0, 1983.0], [4756.0, 2729.0], [4852.0, 2770.0], [4820.0, 2851.0], [4884.0, 1560.0], [4948.0, 937.0], [4245.0, 4713.0], [4277.0, 4635.0], [4341.0, 4824.0], [4149.0, 5395.0], [4117.0, 5039.0], [4213.0, 5175.0], [4181.0, 5755.5], [4373.0, 2986.5], [4597.0, 3873.0], [4405.0, 5545.0], [4437.0, 4028.0], [4533.0, 4689.0], [4501.0, 3857.0], [4629.0, 4750.5], [4693.0, 3135.0], [4661.0, 4052.0], [4725.0, 4295.0], [4789.0, 1983.0], [4757.0, 2924.0], [4853.0, 2738.0], [4821.0, 3159.0], [4885.0, 2101.0], [4917.0, 1646.5], [4949.0, 941.0], [2155.0, 19389.0], [2171.0, 18884.0], [2075.0, 19583.0], [2059.0, 18687.0], [2139.0, 18705.0], [2107.0, 18620.0], [2091.0, 18720.0], [2299.0, 18736.0], [2283.0, 18725.0], [2251.0, 18243.0], [2219.0, 18981.0], [2203.0, 18798.0], [2187.0, 18482.0], [2315.0, 18660.0], [2395.0, 16834.0], [2363.0, 16754.0], [2347.0, 17394.0], [2555.0, 16381.0], [2539.0, 16407.0], [2523.0, 15716.0], [2507.0, 16131.0], [2491.0, 17182.0], [2443.0, 16178.0], [2459.0, 17340.0], [2475.0, 15998.0], [2683.0, 14281.0], [2667.0, 14210.0], [2651.0, 14089.0], [2619.0, 13905.5], [2587.0, 14514.0], [2571.0, 15951.0], [2811.0, 13423.0], [2795.0, 13811.0], [2779.0, 13878.0], [2763.0, 14095.0], [2747.0, 14307.0], [2715.0, 14168.0], [2731.0, 14251.0], [2923.0, 13160.0], [2939.0, 11898.0], [2843.0, 12506.0], [2827.0, 12694.0], [2907.0, 11899.0], [2891.0, 12045.5], [2875.0, 12111.0], [2859.0, 12949.0], [3067.0, 11149.0], [3051.0, 10822.0], [3035.0, 11057.0], [3003.0, 11264.0], [2955.0, 11310.5], [2971.0, 12440.0], [2987.0, 10943.0], [3195.0, 11215.0], [3179.0, 10308.0], [3163.0, 10707.666666666666], [3147.0, 11363.0], [3131.0, 10657.0], [3083.0, 11203.0], [3099.0, 10952.0], [3115.0, 11097.0], [3275.0, 10862.0], [3323.0, 9185.0], [3291.0, 5685.5], [3307.0, 10636.0], [3227.0, 10027.0], [3259.0, 9990.0], [3243.0, 10176.0], [3387.0, 8899.0], [3355.0, 9382.0], [3371.0, 9071.0], [3339.0, 9706.0], [3403.0, 9018.0], [3419.0, 8614.0], [3451.0, 8704.0], [3579.0, 7924.0], [3531.0, 7805.0], [3563.0, 7922.0], [3483.0, 8196.0], [3467.0, 8901.0], [3515.0, 8009.0], [3707.0, 7268.0], [3691.0, 7862.0], [3659.0, 6973.0], [3611.0, 7930.0], [3643.0, 8126.0], [3627.0, 7687.0], [3675.0, 6848.0], [3835.0, 6970.0], [3787.0, 7431.0], [3819.0, 6778.0], [3739.0, 7736.0], [3723.0, 6488.0], [3771.0, 7607.0], [3755.0, 7108.0], [3803.0, 6044.0], [3963.0, 6578.0], [3915.0, 6230.0], [3899.0, 6905.5], [3883.0, 7077.0], [3931.0, 6661.0], [3979.0, 6152.666666666667], [3995.0, 6251.5], [4027.0, 6656.0], [4011.0, 5939.0], [4059.0, 6174.0], [4043.0, 6165.5], [4246.0, 4757.0], [4278.0, 4643.0], [4310.0, 4542.5], [4150.0, 6069.0], [4118.0, 5052.0], [4214.0, 4658.0], [4182.0, 5177.0], [4502.0, 3781.0], [4598.0, 4243.0], [4534.0, 3942.0], [4566.0, 4175.5], [4406.0, 5549.0], [4374.0, 4320.0], [4438.0, 3957.0], [4630.0, 4811.0], [4662.0, 3220.0], [4726.0, 4284.0], [4694.0, 3036.0], [4758.0, 2903.0], [4790.0, 3398.0], [4822.0, 2098.0], [4886.0, 1675.0], [4918.0, 1917.0], [4950.0, 840.0], [4247.0, 5868.0], [4279.0, 4560.0], [4119.0, 5062.0], [4215.0, 5380.0], [4183.0, 4846.0], [4407.0, 4147.0], [4375.0, 4718.0], [4567.0, 4417.0], [4471.0, 4647.25], [4439.0, 4051.0], [4503.0, 3757.0], [4535.0, 5046.0], [4631.0, 3741.0], [4695.0, 4445.0], [4663.0, 4296.0], [4727.0, 2853.0], [4759.0, 2501.0], [4823.0, 2156.0], [4887.0, 2402.0], [4919.0, 1546.0], [4951.0, 1735.0], [543.0, 21035.6], [539.0, 21036.0], [527.0, 21031.5], [523.0, 21032.0], [519.0, 21035.0], [515.0, 21029.0], [571.0, 21034.166666666664], [567.0, 21028.0], [563.0, 21027.0], [547.0, 21037.0], [603.0, 21028.5], [591.0, 21043.0], [587.0, 21032.0], [583.0, 21031.0], [631.0, 21036.0], [627.0, 21031.0], [623.0, 21034.0], [615.0, 21029.333333333332], [735.0, 21051.333333333332], [731.0, 21047.0], [727.0, 21044.0], [723.0, 21041.0], [711.0, 21047.0], [707.0, 21061.0], [755.0, 21038.0], [747.0, 21039.0], [743.0, 21062.5], [739.0, 21052.0], [767.0, 21037.04545454545], [791.0, 21038.0], [779.0, 21036.5], [775.0, 21035.0], [771.0, 21033.666666666668], [831.0, 21031.0], [823.0, 21038.0], [815.0, 21035.0], [811.0, 21041.5], [803.0, 21044.5], [863.0, 21029.666666666668], [859.0, 21035.0], [855.0, 21033.0], [847.0, 21034.0], [843.0, 21036.5], [839.0, 21033.0], [835.0, 21038.0], [927.0, 21028.0], [923.0, 21030.0], [915.0, 21079.0], [959.0, 21039.5], [955.0, 21028.0], [951.0, 21027.0], [943.0, 21029.0], [935.0, 21037.0], [931.0, 21028.0], [939.0, 21027.0], [1019.0, 21039.0], [1038.0, 21033.0], [1030.0, 21037.0], [1142.0, 21052.0], [1134.0, 21027.0], [1118.0, 21036.0], [1110.0, 21046.0], [1214.0, 21047.0], [1206.0, 21054.0], [1190.0, 21044.0], [1182.0, 21044.0], [1174.0, 21048.75], [1230.0, 21053.0], [1278.0, 21052.666666666668], [1270.0, 21053.333333333332], [1246.0, 21027.0], [1238.0, 21048.5], [1222.0, 21046.0], [1342.0, 21046.0], [1326.0, 21050.5], [1302.0, 21047.0], [1398.0, 21057.0], [1390.0, 21060.0], [1366.0, 21039.0], [1350.0, 21041.0], [1470.0, 21050.166666666668], [1462.0, 21049.0], [1446.0, 21046.0], [1422.0, 21048.0], [1430.0, 21047.0], [1486.0, 21049.5], [1478.0, 21051.5], [1598.0, 21058.0], [1590.0, 20161.0], [1582.0, 20799.0], [1574.0, 21030.0], [1550.0, 21031.0], [1558.0, 21028.0], [1654.0, 21036.0], [1662.0, 21044.0], [1614.0, 21054.0], [1646.0, 21042.0], [1638.0, 21048.0], [1630.0, 21048.0], [1622.0, 21052.0], [1726.0, 21061.0], [1718.0, 21063.0], [1710.0, 21023.0], [1670.0, 21026.0], [1742.0, 21149.0], [1790.0, 21043.0], [1782.0, 21041.0], [1766.0, 21151.0], [1750.0, 21149.0], [1734.0, 21152.0], [1806.0, 21047.0], [1846.0, 21059.5], [1798.0, 21052.0], [1838.0, 21057.0], [1830.0, 21059.0], [1822.0, 21043.0], [1814.0, 21039.0], [1918.0, 20082.0], [1910.0, 19773.5], [1902.0, 19732.0], [1870.0, 21102.64285714286], [1982.0, 19900.0], [1974.0, 19705.0], [1966.0, 19793.0], [1958.0, 19443.0], [1950.0, 20107.0], [1926.0, 19776.0], [1942.0, 19630.0], [2046.0, 19651.0], [2038.0, 19640.0], [2030.0, 18898.0], [2022.0, 18851.0], [2014.0, 18880.0], [1990.0, 19602.0], [1998.0, 18870.0], [2172.0, 18692.0], [2156.0, 18525.0], [2140.0, 18158.0], [2124.0, 18557.333333333332], [2108.0, 18626.0], [2076.0, 18680.0], [2060.0, 18685.0], [2092.0, 18889.0], [2204.0, 19123.0], [2300.0, 18705.0], [2284.0, 18559.0], [2252.0, 18753.0], [2220.0, 18929.0], [2188.0, 18482.0], [2428.0, 16225.0], [2412.0, 16264.5], [2396.0, 16911.0], [2380.0, 16828.0], [2364.0, 17716.0], [2316.0, 18643.0], [2332.0, 18578.0], [2348.0, 16896.0], [2556.0, 16118.0], [2540.0, 15979.0], [2524.0, 17095.0], [2508.0, 17149.0], [2492.0, 15798.0], [2444.0, 17103.0], [2460.0, 17455.0], [2476.0, 15999.0], [2668.0, 14214.0], [2604.0, 9881.666666666666], [2684.0, 14144.0], [2652.0, 14062.0], [2620.0, 13885.0], [2572.0, 15946.0], [2588.0, 14502.0], [2716.0, 14121.0], [2796.0, 12614.0], [2764.0, 13263.0], [2748.0, 14302.0], [2732.0, 14035.0], [2700.0, 14142.0], [2940.0, 11927.0], [2924.0, 11862.0], [2908.0, 11927.0], [2892.0, 11955.0], [2876.0, 13335.0], [2828.0, 12252.0], [2860.0, 12013.0], [2972.0, 12433.0], [3036.0, 10947.0], [3004.0, 11960.0], [2988.0, 11277.0], [2956.0, 11140.0], [3100.0, 10957.0], [3180.0, 10283.0], [3164.0, 11146.0], [3132.0, 11617.0], [3116.0, 11674.0], [3084.0, 11204.0], [3324.0, 9216.0], [3276.0, 10068.0], [3308.0, 9232.0], [3260.0, 10700.0], [3228.0, 10255.0], [3244.0, 10751.0], [3292.0, 10527.0], [3340.0, 9701.0], [3356.0, 9367.0], [3388.0, 8821.0], [3452.0, 8386.0], [3404.0, 9117.0], [3420.0, 9377.0], [3436.0, 9148.0], [3580.0, 7941.0], [3532.0, 8220.0], [3484.0, 8186.0], [3468.0, 9436.0], [3516.0, 8999.0], [3500.0, 8556.0], [3548.0, 7850.0], [3708.0, 7690.0], [3660.0, 7786.0], [3692.0, 6717.0], [3644.0, 7168.0], [3596.0, 7727.5], [3612.0, 8574.0], [3628.0, 8078.0], [3676.0, 8236.0], [3836.0, 7135.0], [3788.0, 7353.0], [3820.0, 7216.0], [3772.0, 6948.0], [3724.0, 6762.0], [3740.0, 6763.0], [3756.0, 7434.0], [3804.0, 6059.0], [3964.0, 6571.5], [3948.0, 5576.0], [3900.0, 6779.0], [3852.0, 6977.0], [3884.0, 7065.0], [3916.0, 6388.0], [4076.0, 5744.0], [4092.0, 5945.5], [4028.0, 6340.0], [3980.0, 5377.0], [3996.0, 6537.0], [4012.0, 5190.0], [4060.0, 5253.0], [4344.0, 4762.666666666667], [4248.0, 6039.0], [4280.0, 5453.0], [4312.0, 4759.5], [4120.0, 5063.0], [4184.0, 4844.0], [4536.0, 3686.0], [4504.0, 3753.0], [4568.0, 4683.0], [4376.0, 4559.0], [4408.0, 4205.0], [4472.0, 3835.0], [4632.0, 4801.0], [4856.0, 2274.3333333333335], [4728.0, 2847.0], [4696.0, 4286.0], [4760.0, 2486.0], [4792.0, 2523.0], [4824.0, 2561.0], [4888.0, 2261.0], [4920.0, 2072.0], [4952.0, 908.0], [4313.0, 5299.0], [4345.0, 5578.0], [4249.0, 4623.0], [4281.0, 4556.0], [4153.0, 4915.666666666667], [4121.0, 5166.0], [4217.0, 4914.5], [4185.0, 5160.0], [4409.0, 4196.0], [4377.0, 4330.0], [4601.0, 4549.0], [4473.0, 4194.0], [4441.0, 4704.0], [4569.0, 3659.0], [4537.0, 3742.0], [4505.0, 3812.0], [4729.0, 2818.0], [4697.0, 3121.0], [4665.0, 3831.5], [4793.0, 2763.0], [4761.0, 3657.0], [4857.0, 2691.0], [4825.0, 2252.0], [4889.0, 2256.0], [4953.0, 1815.0], [4921.0, 1888.0], [2173.0, 18040.0], [2157.0, 19384.0], [2077.0, 18676.0], [2141.0, 18551.0], [2125.0, 18553.0], [2109.0, 18610.0], [2285.0, 18561.0], [2301.0, 17223.0], [2205.0, 18813.0], [2189.0, 18679.0], [2269.0, 18381.0], [2237.0, 17951.0], [2221.0, 17985.0], [2429.0, 16228.0], [2413.0, 16245.0], [2397.0, 17328.0], [2381.0, 18027.0], [2365.0, 17689.0], [2317.0, 17731.0], [2333.0, 18539.0], [2349.0, 16889.0], [2557.0, 16026.0], [2541.0, 16844.0], [2525.0, 16157.0], [2509.0, 15799.0], [2493.0, 15794.0], [2445.0, 17010.0], [2477.0, 15989.0], [2589.0, 14489.0], [2685.0, 14701.0], [2573.0, 15840.0], [2653.0, 13633.0], [2637.0, 14866.75], [2621.0, 13881.0], [2605.0, 14488.0], [2797.0, 13779.0], [2813.0, 13857.0], [2781.0, 13668.5], [2749.0, 14306.0], [2733.0, 13396.0], [2941.0, 11905.0], [2925.0, 11857.0], [2909.0, 12390.0], [2893.0, 12044.0], [2877.0, 12101.0], [2861.0, 12149.0], [3069.0, 11032.5], [2973.0, 11336.0], [2957.0, 11468.0], [3021.0, 11485.0], [3005.0, 11726.0], [2989.0, 11895.0], [3101.0, 10955.0], [3181.0, 10302.0], [3085.0, 10680.0], [3165.0, 10349.0], [3149.0, 11229.5], [3133.0, 11602.0], [3117.0, 11174.0], [3309.0, 9218.0], [3325.0, 9198.0], [3277.0, 10750.0], [3261.0, 10326.0], [3245.0, 10379.0], [3293.0, 10626.0], [3341.0, 9692.0], [3357.0, 9663.0], [3389.0, 9247.0], [3373.0, 8992.5], [3405.0, 8585.0], [3437.0, 9448.0], [3421.0, 8829.0], [3581.0, 8155.0], [3533.0, 8217.0], [3565.0, 8071.0], [3517.0, 7882.0], [3469.0, 8882.0], [3485.0, 8072.0], [3501.0, 8288.0], [3549.0, 8297.0], [3709.0, 7915.0], [3661.0, 8088.0], [3693.0, 7180.0], [3645.0, 7005.0], [3597.0, 7721.0], [3613.0, 8123.0], [3629.0, 8318.0], [3677.0, 8228.0], [3837.0, 7061.0], [3789.0, 6211.0], [3821.0, 7216.0], [3741.0, 7465.0], [3725.0, 7570.0], [3773.0, 7584.0], [3757.0, 7419.0], [3965.0, 6540.0], [3917.0, 7027.0], [3869.0, 5893.0], [3901.0, 6773.0], [3933.0, 6793.5], [4077.0, 5224.0], [4093.0, 5154.0], [4045.0, 6321.5], [4061.0, 5981.0], [3997.0, 6248.0], [3981.0, 5377.0], [4029.0, 6652.0], [4013.0, 5313.0], [4314.0, 5351.0], [4250.0, 5852.0], [4346.0, 4366.0], [4282.0, 5770.0], [4154.0, 5253.0], [4122.0, 5099.0], [4506.0, 3742.0], [4538.0, 3682.0], [4602.0, 4479.0], [4410.0, 4138.0], [4378.0, 4554.0], [4474.0, 4737.0], [4442.0, 4244.0], [4634.0, 4674.5], [4666.0, 2200.5], [4730.0, 3941.0], [4698.0, 4346.0], [4762.0, 2547.0], [4794.0, 3008.0], [4858.0, 2402.0], [4826.0, 2730.0], [4890.0, 856.0], [4922.0, 2154.0], [4954.0, 890.0], [4315.0, 5795.0], [4251.0, 4983.0], [4347.0, 4434.0], [4219.0, 4741.0], [4187.0, 4976.0], [4379.0, 4705.0], [4411.0, 4126.0], [4475.0, 4191.0], [4443.0, 3872.0], [4571.0, 4016.0], [4507.0, 5198.0], [4539.0, 4778.0], [4603.0, 4570.0], [4635.0, 4795.0], [4667.0, 3484.0], [4731.0, 2793.0], [4795.0, 3038.0], [4763.0, 2435.0], [4859.0, 2415.0], [4827.0, 1505.0], [4891.0, 874.0], [4923.0, 2043.0], [4955.0, 1808.0], [1047.0, 21032.5], [1039.0, 21033.0], [1143.0, 21043.432432432433], [1127.0, 21035.0], [1119.0, 21046.0], [1167.0, 21043.0], [1159.0, 21042.0], [1231.0, 21048.0], [1343.0, 21041.0], [1335.0, 21055.0], [1327.0, 21050.5], [1319.0, 21051.0], [1311.0, 21050.666666666668], [1295.0, 21057.0], [1287.0, 21051.0], [1407.0, 21046.5], [1399.0, 21058.333333333332], [1367.0, 21044.0], [1359.0, 21044.8], [1351.0, 21043.0], [1423.0, 21047.0], [1463.0, 21046.0], [1447.0, 21049.0], [1439.0, 21047.5], [1415.0, 21058.0], [1511.0, 21032.125], [1503.0, 21051.0], [1495.0, 21044.5], [1599.0, 21055.0], [1583.0, 20204.0], [1575.0, 21031.0], [1551.0, 21030.5], [1543.0, 21030.666666666668], [1655.0, 21034.0], [1639.0, 21052.0], [1631.0, 21043.0], [1623.0, 21051.333333333332], [1607.0, 21061.0], [1719.0, 21060.0], [1711.0, 21023.666666666668], [1735.0, 21148.0], [1847.0, 21058.0], [1807.0, 21042.0], [1855.0, 21061.0], [1839.0, 21063.0], [1831.0, 21065.0], [1823.0, 21055.0], [1815.0, 21053.0], [1919.0, 20084.0], [1895.0, 21058.5], [1887.0, 21061.5], [1863.0, 21078.5], [1935.0, 19840.0], [1983.0, 19683.0], [1927.0, 19774.0], [1967.0, 19745.0], [1959.0, 19443.0], [1951.0, 19730.0], [1943.0, 19615.0], [2047.0, 18886.0], [2039.0, 19792.0], [2031.0, 19837.0], [2023.0, 18857.0], [2015.0, 18827.0], [1991.0, 19602.0], [1999.0, 18869.0], [2007.0, 18864.5], [2158.0, 18115.0], [2174.0, 18505.0], [2078.0, 19667.0], [2142.0, 18892.0], [2126.0, 18553.0], [2110.0, 18602.0], [2094.0, 18901.0], [2286.0, 18715.0], [2302.0, 18589.0], [2206.0, 19144.0], [2190.0, 19188.0], [2254.0, 18227.0], [2238.0, 17940.0], [2222.0, 17972.0], [2430.0, 16231.0], [2414.0, 16225.0], [2398.0, 16423.0], [2382.0, 17862.0], [2366.0, 17689.0], [2318.0, 18651.0], [2350.0, 17758.0], [2558.0, 16021.0], [2542.0, 16685.0], [2526.0, 16145.0], [2510.0, 15794.0], [2494.0, 15793.0], [2446.0, 17065.0], [2462.0, 15937.0], [2478.0, 15861.0], [2670.0, 14213.0], [2686.0, 13454.0], [2574.0, 15939.0], [2654.0, 14332.0], [2638.0, 14019.0], [2622.0, 15311.0], [2606.0, 14485.0], [2718.0, 14144.0], [2798.0, 12746.0], [2702.0, 14175.0], [2782.0, 13082.0], [2766.0, 13522.5], [2750.0, 14259.0], [2734.0, 13991.0], [2942.0, 12701.0], [2926.0, 12936.0], [2878.0, 12084.0], [2830.0, 12264.5], [2846.0, 12589.0], [2862.0, 12056.0], [2974.0, 11970.0], [3054.0, 11239.333333333334], [3038.0, 10914.0], [3022.0, 10767.0], [3006.0, 11232.0], [2958.0, 11800.0], [3102.0, 10946.0], [3182.0, 10295.0], [3086.0, 11201.0], [3150.0, 11157.0], [3134.0, 10281.0], [3118.0, 11164.0], [3326.0, 9948.0], [3278.0, 10745.0], [3310.0, 10682.0], [3262.0, 10137.0], [3230.0, 10240.0], [3246.0, 10373.0], [3294.0, 10613.0], [3390.0, 8760.0], [3342.0, 9691.0], [3374.0, 9052.0], [3454.0, 8752.5], [3406.0, 9457.0], [3438.0, 8416.0], [3358.0, 9658.0], [3422.0, 8813.0], [3582.0, 7915.0], [3534.0, 8193.0], [3566.0, 8028.0], [3518.0, 8994.0], [3470.0, 8220.0], [3486.0, 8486.0], [3502.0, 7987.0], [3550.0, 8055.0], [3710.0, 7966.0], [3662.0, 7781.0], [3694.0, 7870.0], [3614.0, 7608.0], [3598.0, 7770.0], [3646.0, 7157.0], [3630.0, 8456.0], [3678.0, 7925.0], [3838.0, 7130.0], [3790.0, 7511.0], [3822.0, 5857.0], [3774.0, 7517.0], [3726.0, 6426.0], [3742.0, 7460.0], [3758.0, 7040.0], [3806.0, 6051.0], [3966.0, 5351.0], [3950.0, 5917.0], [3854.0, 6093.25], [3886.0, 6958.0], [4078.0, 5172.0], [4094.0, 5437.0], [4030.0, 6332.0], [3982.0, 6606.0], [4014.0, 6208.0], [4062.0, 5190.0], [4046.0, 5207.0], [4348.0, 4343.0], [4252.0, 5850.0], [4284.0, 4796.0], [4316.0, 5271.0], [4156.0, 4897.0], [4220.0, 4748.5], [4540.0, 5046.0], [4508.0, 5207.0], [4572.0, 3993.0], [4476.0, 4181.0], [4412.0, 4925.0], [4444.0, 3956.0], [4860.0, 2405.0], [4732.0, 4191.0], [4764.0, 2535.0], [4796.0, 2251.0], [4828.0, 2445.0], [4892.0, 868.0], [4924.0, 2009.0], [4956.0, 868.0], [4349.0, 5217.0], [4125.0, 5498.0], [4221.0, 4743.0], [4189.0, 4788.5], [4381.0, 4928.0], [4413.0, 4193.0], [4477.0, 4665.0], [4445.0, 5389.0], [4573.0, 2598.5], [4541.0, 3932.0], [4509.0, 3885.0], [4605.0, 4541.0], [4669.0, 3688.5], [4637.0, 4672.5], [4701.0, 4123.666666666667], [4733.0, 4249.0], [4797.0, 3299.0], [4765.0, 3196.0], [4861.0, 2088.0], [4829.0, 2437.0], [4925.0, 2004.0], [4957.0, 1473.0], [2175.0, 18503.0], [2159.0, 19366.0], [2143.0, 18544.0], [2127.0, 18550.0], [2111.0, 18598.0], [2063.0, 19329.666666666668], [2079.0, 18673.0], [2095.0, 18656.0], [2303.0, 17205.0], [2287.0, 18719.0], [2271.0, 18187.5], [2255.0, 18613.0], [2207.0, 18859.0], [2191.0, 18653.0], [2431.0, 17141.0], [2415.0, 16285.0], [2399.0, 16412.0], [2383.0, 16647.0], [2367.0, 17662.0], [2335.0, 18537.0], [2319.0, 18621.0], [2559.0, 16019.0], [2543.0, 16812.0], [2527.0, 16141.0], [2511.0, 15790.0], [2495.0, 15788.0], [2447.0, 16174.0], [2463.0, 15935.0], [2479.0, 15858.0], [2687.0, 14693.0], [2671.0, 14210.0], [2655.0, 14565.0], [2623.0, 13859.0], [2575.0, 15798.0], [2591.0, 14487.5], [2607.0, 14469.0], [2815.0, 13532.5], [2799.0, 12802.0], [2767.0, 13148.0], [2751.0, 14324.0], [2719.0, 14113.0], [2735.0, 13968.0], [2943.0, 11779.0], [2927.0, 12089.0], [2911.0, 12606.0], [2895.0, 12680.5], [2879.0, 13411.0], [2863.0, 12146.0], [3055.0, 11384.0], [2975.0, 11347.0], [2959.0, 11462.0], [3039.0, 11816.0], [3007.0, 10809.0], [2991.0, 11581.0], [3183.0, 10293.0], [3151.0, 11219.0], [3103.0, 11211.0], [3087.0, 10980.0], [3167.0, 10320.0], [3135.0, 11497.0], [3119.0, 11407.0], [3327.0, 10348.0], [3279.0, 10744.0], [3311.0, 9222.0], [3263.0, 10112.0], [3231.0, 11013.0], [3247.0, 10927.0], [3295.0, 10739.0], [3343.0, 9441.0], [3375.0, 9045.0], [3455.0, 8319.0], [3407.0, 8551.0], [3583.0, 8114.0], [3535.0, 8140.0], [3567.0, 7963.0], [3487.0, 8511.0], [3471.0, 9609.0], [3503.0, 8255.0], [3551.0, 7667.0], [3711.0, 7941.0], [3663.0, 8347.0], [3695.0, 7089.0], [3615.0, 7605.0], [3599.0, 7768.0], [3647.0, 7712.0], [3791.0, 7332.0], [3823.0, 5882.0], [3727.0, 6390.0], [3775.0, 6258.0], [3759.0, 6342.0], [3807.0, 7081.0], [3967.0, 5331.0], [3951.0, 6051.0], [3919.0, 6695.0], [3871.0, 5892.5], [3903.0, 5662.0], [3887.0, 7095.0], [3935.0, 6956.0], [4095.0, 5140.0], [4063.0, 5158.0], [4079.0, 5130.0], [4031.0, 6460.0], [4015.0, 6377.0], [4318.0, 5576.0], [4254.0, 5667.5], [4158.0, 4950.0], [4126.0, 5143.0], [4222.0, 4743.0], [4190.0, 4780.0], [4510.0, 4909.0], [4606.0, 4893.0], [4542.0, 4077.0], [4414.0, 5213.0], [4382.0, 4842.0], [4478.0, 3785.0], [4446.0, 4666.0], [4638.0, 4432.0], [4670.0, 3453.0], [4734.0, 2863.0], [4766.0, 2831.0], [4798.0, 3019.0], [4862.0, 2372.0], [4830.0, 2722.0], [4894.0, 865.0], [4926.0, 1993.0], [4958.0, 1006.0], [4351.0, 4418.0], [4319.0, 4563.0], [4255.0, 5847.0], [4159.0, 6336.0], [4127.0, 5123.0], [4223.0, 5163.0], [4191.0, 6220.0], [4415.0, 5203.0], [4383.0, 4836.0], [4607.0, 4894.0], [4511.0, 4906.0], [4543.0, 3748.0], [4575.0, 4634.0], [4639.0, 3726.0], [4703.0, 4312.5], [4671.0, 3147.0], [4863.0, 2374.0], [4767.0, 3184.0], [4831.0, 2650.0], [4895.0, 853.0], [4927.0, 2022.0], [4959.0, 1776.0], [1.0, 37130.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[2499.699999999999, 14183.606200000037]], "isOverall": false, "label": "Home-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4968.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6426.0, "minX": 1.60876086E12, "maxY": 795684.6666666666, "series": [{"data": [[1.60876086E12, 795684.6666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60876086E12, 6426.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876086E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 14183.606200000037, "minX": 1.60876086E12, "maxY": 14183.606200000037, "series": [{"data": [[1.60876086E12, 14183.606200000037]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876086E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6776.025999999991, "minX": 1.60876086E12, "maxY": 6776.025999999991, "series": [{"data": [[1.60876086E12, 6776.025999999991]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876086E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 11478.406600000028, "minX": 1.60876086E12, "maxY": 11478.406600000028, "series": [{"data": [[1.60876086E12, 11478.406600000028]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876086E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 660.0, "minX": 1.60876086E12, "maxY": 37130.0, "series": [{"data": [[1.60876086E12, 37130.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60876086E12, 966.1119629096986]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60876086E12, 1063.2885046362876]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60876086E12, 1034.421986091137]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.60876086E12, 660.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60876086E12, 9151.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876086E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1062.0, "minX": 1.0, "maxY": 37129.0, "series": [{"data": [[33.0, 1062.0], [2.0, 37129.0], [49.0, 15772.0], [3.0, 30869.0], [95.0, 2405.0], [1521.0, 20198.0], [94.0, 22666.5], [97.0, 1917.0], [98.0, 15975.0], [108.0, 3719.0], [112.0, 13787.0], [114.0, 16672.0], [121.0, 12079.0], [130.0, 14169.5], [8.0, 27614.0], [144.0, 7365.0], [149.0, 8027.0], [157.0, 8963.0], [153.0, 18898.0], [175.0, 11212.0], [188.0, 10355.5], [13.0, 22648.0], [229.0, 18578.0], [264.0, 4551.0], [16.0, 25448.0], [1.0, 30709.0], [291.0, 6251.0], [298.0, 19731.5], [335.0, 5047.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[298.0, 21061.5], [1521.0, 21038.0], [94.0, 21029.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1521.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 37129.0, "series": [{"data": [[33.0, 1062.0], [2.0, 37129.0], [49.0, 15772.0], [3.0, 30869.0], [95.0, 2404.0], [1521.0, 20198.0], [94.0, 22666.5], [97.0, 1917.0], [98.0, 15975.0], [108.0, 3719.0], [112.0, 13787.0], [114.0, 16672.0], [121.0, 12079.0], [130.0, 14169.5], [8.0, 27614.0], [144.0, 7365.0], [149.0, 8027.0], [157.0, 8963.0], [153.0, 18898.0], [175.0, 11212.0], [188.0, 10355.5], [13.0, 22648.0], [229.0, 18578.0], [264.0, 4551.0], [16.0, 25448.0], [1.0, 30709.0], [291.0, 6251.0], [298.0, 19731.5], [335.0, 5047.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[298.0, 0.0], [1521.0, 0.0], [94.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1521.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.60876086E12, "maxY": 83.33333333333333, "series": [{"data": [[1.60876086E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876086E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 29.333333333333332, "minX": 1.60876086E12, "maxY": 54.0, "series": [{"data": [[1.60876086E12, 54.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.60876086E12, 29.333333333333332]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876086E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 29.333333333333332, "minX": 1.60876086E12, "maxY": 54.0, "series": [{"data": [[1.60876086E12, 54.0]], "isOverall": false, "label": "Home-success", "isController": false}, {"data": [[1.60876086E12, 29.333333333333332]], "isOverall": false, "label": "Home-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876086E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 29.333333333333332, "minX": 1.60876086E12, "maxY": 54.0, "series": [{"data": [[1.60876086E12, 54.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.60876086E12, 29.333333333333332]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876086E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

