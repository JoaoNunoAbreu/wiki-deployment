/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 95.0, "minX": 0.0, "maxY": 2900.0, "series": [{"data": [[0.0, 188.0], [0.1, 188.0], [0.2, 188.0], [0.3, 188.0], [0.4, 203.0], [0.5, 203.0], [0.6, 203.0], [0.7, 203.0], [0.8, 206.0], [0.9, 206.0], [1.0, 206.0], [1.1, 206.0], [1.2, 206.0], [1.3, 207.0], [1.4, 207.0], [1.5, 207.0], [1.6, 207.0], [1.7, 207.0], [1.8, 207.0], [1.9, 207.0], [2.0, 210.0], [2.1, 210.0], [2.2, 210.0], [2.3, 210.0], [2.4, 212.0], [2.5, 212.0], [2.6, 212.0], [2.7, 212.0], [2.8, 212.0], [2.9, 212.0], [3.0, 212.0], [3.1, 212.0], [3.2, 214.0], [3.3, 214.0], [3.4, 214.0], [3.5, 214.0], [3.6, 216.0], [3.7, 216.0], [3.8, 216.0], [3.9, 216.0], [4.0, 216.0], [4.1, 216.0], [4.2, 216.0], [4.3, 216.0], [4.4, 217.0], [4.5, 217.0], [4.6, 217.0], [4.7, 217.0], [4.8, 217.0], [4.9, 220.0], [5.0, 220.0], [5.1, 220.0], [5.2, 220.0], [5.3, 221.0], [5.4, 221.0], [5.5, 221.0], [5.6, 221.0], [5.7, 221.0], [5.8, 221.0], [5.9, 221.0], [6.0, 221.0], [6.1, 221.0], [6.2, 221.0], [6.3, 221.0], [6.4, 221.0], [6.5, 223.0], [6.6, 223.0], [6.7, 223.0], [6.8, 223.0], [6.9, 223.0], [7.0, 223.0], [7.1, 223.0], [7.2, 223.0], [7.3, 223.0], [7.4, 223.0], [7.5, 223.0], [7.6, 223.0], [7.7, 224.0], [7.8, 224.0], [7.9, 224.0], [8.0, 224.0], [8.1, 224.0], [8.2, 224.0], [8.3, 224.0], [8.4, 224.0], [8.5, 225.0], [8.6, 225.0], [8.7, 225.0], [8.8, 225.0], [8.9, 229.0], [9.0, 229.0], [9.1, 229.0], [9.2, 229.0], [9.3, 230.0], [9.4, 230.0], [9.5, 230.0], [9.6, 230.0], [9.7, 231.0], [9.8, 231.0], [9.9, 231.0], [10.0, 231.0], [10.1, 231.0], [10.2, 231.0], [10.3, 231.0], [10.4, 231.0], [10.5, 232.0], [10.6, 232.0], [10.7, 232.0], [10.8, 232.0], [10.9, 233.0], [11.0, 233.0], [11.1, 233.0], [11.2, 233.0], [11.3, 233.0], [11.4, 233.0], [11.5, 233.0], [11.6, 233.0], [11.7, 233.0], [11.8, 233.0], [11.9, 233.0], [12.0, 233.0], [12.1, 235.0], [12.2, 235.0], [12.3, 235.0], [12.4, 235.0], [12.5, 235.0], [12.6, 235.0], [12.7, 235.0], [12.8, 235.0], [12.9, 235.0], [13.0, 235.0], [13.1, 235.0], [13.2, 235.0], [13.3, 235.0], [13.4, 235.0], [13.5, 235.0], [13.6, 235.0], [13.7, 235.0], [13.8, 235.0], [13.9, 235.0], [14.0, 235.0], [14.1, 236.0], [14.2, 236.0], [14.3, 236.0], [14.4, 236.0], [14.5, 239.0], [14.6, 239.0], [14.7, 239.0], [14.8, 239.0], [14.9, 241.0], [15.0, 241.0], [15.1, 241.0], [15.2, 241.0], [15.3, 244.0], [15.4, 244.0], [15.5, 244.0], [15.6, 244.0], [15.7, 244.0], [15.8, 244.0], [15.9, 244.0], [16.0, 244.0], [16.1, 249.0], [16.2, 249.0], [16.3, 249.0], [16.4, 249.0], [16.5, 250.0], [16.6, 250.0], [16.7, 250.0], [16.8, 250.0], [16.9, 250.0], [17.0, 250.0], [17.1, 250.0], [17.2, 250.0], [17.3, 251.0], [17.4, 251.0], [17.5, 251.0], [17.6, 251.0], [17.7, 251.0], [17.8, 251.0], [17.9, 251.0], [18.0, 251.0], [18.1, 251.0], [18.2, 251.0], [18.3, 251.0], [18.4, 251.0], [18.5, 252.0], [18.6, 252.0], [18.7, 252.0], [18.8, 252.0], [18.9, 252.0], [19.0, 252.0], [19.1, 252.0], [19.2, 252.0], [19.3, 255.0], [19.4, 255.0], [19.5, 255.0], [19.6, 256.0], [19.7, 256.0], [19.8, 256.0], [19.9, 256.0], [20.0, 259.0], [20.1, 259.0], [20.2, 259.0], [20.3, 259.0], [20.4, 259.0], [20.5, 259.0], [20.6, 259.0], [20.7, 259.0], [20.8, 260.0], [20.9, 260.0], [21.0, 260.0], [21.1, 260.0], [21.2, 261.0], [21.3, 261.0], [21.4, 261.0], [21.5, 261.0], [21.6, 261.0], [21.7, 261.0], [21.8, 261.0], [21.9, 261.0], [22.0, 262.0], [22.1, 262.0], [22.2, 262.0], [22.3, 262.0], [22.4, 263.0], [22.5, 263.0], [22.6, 263.0], [22.7, 263.0], [22.8, 263.0], [22.9, 263.0], [23.0, 263.0], [23.1, 263.0], [23.2, 264.0], [23.3, 264.0], [23.4, 264.0], [23.5, 264.0], [23.6, 264.0], [23.7, 264.0], [23.8, 264.0], [23.9, 264.0], [24.0, 265.0], [24.1, 265.0], [24.2, 265.0], [24.3, 265.0], [24.4, 265.0], [24.5, 265.0], [24.6, 265.0], [24.7, 265.0], [24.8, 265.0], [24.9, 265.0], [25.0, 265.0], [25.1, 265.0], [25.2, 266.0], [25.3, 266.0], [25.4, 266.0], [25.5, 266.0], [25.6, 266.0], [25.7, 266.0], [25.8, 266.0], [25.9, 266.0], [26.0, 266.0], [26.1, 266.0], [26.2, 266.0], [26.3, 266.0], [26.4, 266.0], [26.5, 266.0], [26.6, 266.0], [26.7, 266.0], [26.8, 266.0], [26.9, 266.0], [27.0, 266.0], [27.1, 266.0], [27.2, 266.0], [27.3, 266.0], [27.4, 266.0], [27.5, 266.0], [27.6, 267.0], [27.7, 267.0], [27.8, 267.0], [27.9, 267.0], [28.0, 267.0], [28.1, 267.0], [28.2, 267.0], [28.3, 267.0], [28.4, 267.0], [28.5, 267.0], [28.6, 267.0], [28.7, 267.0], [28.8, 268.0], [28.9, 268.0], [29.0, 268.0], [29.1, 268.0], [29.2, 268.0], [29.3, 268.0], [29.4, 268.0], [29.5, 268.0], [29.6, 268.0], [29.7, 268.0], [29.8, 268.0], [29.9, 268.0], [30.0, 269.0], [30.1, 269.0], [30.2, 269.0], [30.3, 269.0], [30.4, 269.0], [30.5, 269.0], [30.6, 269.0], [30.7, 269.0], [30.8, 269.0], [30.9, 269.0], [31.0, 269.0], [31.1, 269.0], [31.2, 270.0], [31.3, 270.0], [31.4, 270.0], [31.5, 270.0], [31.6, 270.0], [31.7, 270.0], [31.8, 270.0], [31.9, 270.0], [32.0, 271.0], [32.1, 271.0], [32.2, 271.0], [32.3, 271.0], [32.4, 271.0], [32.5, 271.0], [32.6, 271.0], [32.7, 271.0], [32.8, 271.0], [32.9, 271.0], [33.0, 271.0], [33.1, 271.0], [33.2, 272.0], [33.3, 272.0], [33.4, 272.0], [33.5, 272.0], [33.6, 273.0], [33.7, 273.0], [33.8, 273.0], [33.9, 273.0], [34.0, 274.0], [34.1, 274.0], [34.2, 274.0], [34.3, 274.0], [34.4, 274.0], [34.5, 274.0], [34.6, 274.0], [34.7, 274.0], [34.8, 274.0], [34.9, 274.0], [35.0, 274.0], [35.1, 274.0], [35.2, 277.0], [35.3, 277.0], [35.4, 277.0], [35.5, 277.0], [35.6, 277.0], [35.7, 277.0], [35.8, 277.0], [35.9, 277.0], [36.0, 279.0], [36.1, 279.0], [36.2, 279.0], [36.3, 279.0], [36.4, 282.0], [36.5, 282.0], [36.6, 282.0], [36.7, 282.0], [36.8, 282.0], [36.9, 282.0], [37.0, 282.0], [37.1, 282.0], [37.2, 283.0], [37.3, 283.0], [37.4, 283.0], [37.5, 283.0], [37.6, 284.0], [37.7, 284.0], [37.8, 284.0], [37.9, 284.0], [38.0, 284.0], [38.1, 284.0], [38.2, 284.0], [38.3, 284.0], [38.4, 285.0], [38.5, 285.0], [38.6, 285.0], [38.7, 285.0], [38.8, 287.0], [38.9, 287.0], [39.0, 287.0], [39.1, 287.0], [39.2, 287.0], [39.3, 287.0], [39.4, 287.0], [39.5, 287.0], [39.6, 288.0], [39.7, 288.0], [39.8, 288.0], [39.9, 288.0], [40.0, 289.0], [40.1, 289.0], [40.2, 289.0], [40.3, 289.0], [40.4, 289.0], [40.5, 289.0], [40.6, 289.0], [40.7, 289.0], [40.8, 290.0], [40.9, 290.0], [41.0, 290.0], [41.1, 290.0], [41.2, 291.0], [41.3, 291.0], [41.4, 291.0], [41.5, 291.0], [41.6, 292.0], [41.7, 292.0], [41.8, 292.0], [41.9, 292.0], [42.0, 292.0], [42.1, 292.0], [42.2, 292.0], [42.3, 292.0], [42.4, 292.0], [42.5, 292.0], [42.6, 292.0], [42.7, 292.0], [42.8, 296.0], [42.9, 296.0], [43.0, 296.0], [43.1, 296.0], [43.2, 296.0], [43.3, 296.0], [43.4, 296.0], [43.5, 296.0], [43.6, 296.0], [43.7, 296.0], [43.8, 296.0], [43.9, 296.0], [44.0, 296.0], [44.1, 296.0], [44.2, 296.0], [44.3, 296.0], [44.4, 297.0], [44.5, 297.0], [44.6, 297.0], [44.7, 297.0], [44.8, 297.0], [44.9, 297.0], [45.0, 297.0], [45.1, 297.0], [45.2, 297.0], [45.3, 297.0], [45.4, 297.0], [45.5, 297.0], [45.6, 298.0], [45.7, 298.0], [45.8, 298.0], [45.9, 298.0], [46.0, 298.0], [46.1, 298.0], [46.2, 298.0], [46.3, 298.0], [46.4, 299.0], [46.5, 299.0], [46.6, 299.0], [46.7, 299.0], [46.8, 300.0], [46.9, 300.0], [47.0, 300.0], [47.1, 300.0], [47.2, 300.0], [47.3, 300.0], [47.4, 300.0], [47.5, 300.0], [47.6, 301.0], [47.7, 301.0], [47.8, 301.0], [47.9, 301.0], [48.0, 301.0], [48.1, 301.0], [48.2, 301.0], [48.3, 301.0], [48.4, 302.0], [48.5, 302.0], [48.6, 302.0], [48.7, 302.0], [48.8, 303.0], [48.9, 303.0], [49.0, 303.0], [49.1, 303.0], [49.2, 304.0], [49.3, 304.0], [49.4, 304.0], [49.5, 304.0], [49.6, 304.0], [49.7, 304.0], [49.8, 304.0], [49.9, 304.0], [50.0, 306.0], [50.1, 306.0], [50.2, 306.0], [50.3, 306.0], [50.4, 306.0], [50.5, 306.0], [50.6, 306.0], [50.7, 306.0], [50.8, 306.0], [50.9, 306.0], [51.0, 306.0], [51.1, 306.0], [51.2, 307.0], [51.3, 307.0], [51.4, 307.0], [51.5, 307.0], [51.6, 307.0], [51.7, 307.0], [51.8, 307.0], [51.9, 307.0], [52.0, 307.0], [52.1, 307.0], [52.2, 307.0], [52.3, 307.0], [52.4, 307.0], [52.5, 307.0], [52.6, 307.0], [52.7, 307.0], [52.8, 308.0], [52.9, 308.0], [53.0, 308.0], [53.1, 308.0], [53.2, 309.0], [53.3, 309.0], [53.4, 309.0], [53.5, 309.0], [53.6, 309.0], [53.7, 309.0], [53.8, 309.0], [53.9, 309.0], [54.0, 309.0], [54.1, 309.0], [54.2, 309.0], [54.3, 309.0], [54.4, 310.0], [54.5, 310.0], [54.6, 310.0], [54.7, 310.0], [54.8, 310.0], [54.9, 310.0], [55.0, 310.0], [55.1, 310.0], [55.2, 310.0], [55.3, 310.0], [55.4, 310.0], [55.5, 310.0], [55.6, 311.0], [55.7, 311.0], [55.8, 311.0], [55.9, 311.0], [56.0, 311.0], [56.1, 311.0], [56.2, 311.0], [56.3, 311.0], [56.4, 312.0], [56.5, 312.0], [56.6, 312.0], [56.7, 312.0], [56.8, 312.0], [56.9, 312.0], [57.0, 312.0], [57.1, 312.0], [57.2, 313.0], [57.3, 313.0], [57.4, 313.0], [57.5, 313.0], [57.6, 313.0], [57.7, 313.0], [57.8, 313.0], [57.9, 313.0], [58.0, 313.0], [58.1, 313.0], [58.2, 313.0], [58.3, 313.0], [58.4, 313.0], [58.5, 313.0], [58.6, 313.0], [58.7, 313.0], [58.8, 313.0], [58.9, 313.0], [59.0, 313.0], [59.1, 313.0], [59.2, 314.0], [59.3, 314.0], [59.4, 314.0], [59.5, 314.0], [59.6, 314.0], [59.7, 314.0], [59.8, 314.0], [59.9, 314.0], [60.0, 314.0], [60.1, 314.0], [60.2, 314.0], [60.3, 314.0], [60.4, 314.0], [60.5, 314.0], [60.6, 314.0], [60.7, 314.0], [60.8, 315.0], [60.9, 315.0], [61.0, 315.0], [61.1, 315.0], [61.2, 315.0], [61.3, 315.0], [61.4, 315.0], [61.5, 315.0], [61.6, 317.0], [61.7, 317.0], [61.8, 317.0], [61.9, 317.0], [62.0, 319.0], [62.1, 319.0], [62.2, 319.0], [62.3, 319.0], [62.4, 319.0], [62.5, 319.0], [62.6, 319.0], [62.7, 319.0], [62.8, 320.0], [62.9, 320.0], [63.0, 320.0], [63.1, 320.0], [63.2, 320.0], [63.3, 320.0], [63.4, 320.0], [63.5, 320.0], [63.6, 321.0], [63.7, 321.0], [63.8, 321.0], [63.9, 321.0], [64.0, 322.0], [64.1, 322.0], [64.2, 322.0], [64.3, 322.0], [64.4, 322.0], [64.5, 322.0], [64.6, 322.0], [64.7, 322.0], [64.8, 324.0], [64.9, 324.0], [65.0, 324.0], [65.1, 324.0], [65.2, 325.0], [65.3, 325.0], [65.4, 325.0], [65.5, 325.0], [65.6, 325.0], [65.7, 325.0], [65.8, 325.0], [65.9, 325.0], [66.0, 325.0], [66.1, 325.0], [66.2, 325.0], [66.3, 325.0], [66.4, 325.0], [66.5, 325.0], [66.6, 325.0], [66.7, 325.0], [66.8, 326.0], [66.9, 326.0], [67.0, 326.0], [67.1, 326.0], [67.2, 326.0], [67.3, 326.0], [67.4, 326.0], [67.5, 326.0], [67.6, 327.0], [67.7, 327.0], [67.8, 327.0], [67.9, 327.0], [68.0, 327.0], [68.1, 327.0], [68.2, 327.0], [68.3, 327.0], [68.4, 328.0], [68.5, 328.0], [68.6, 328.0], [68.7, 328.0], [68.8, 328.0], [68.9, 328.0], [69.0, 328.0], [69.1, 328.0], [69.2, 331.0], [69.3, 331.0], [69.4, 331.0], [69.5, 331.0], [69.6, 333.0], [69.7, 333.0], [69.8, 333.0], [69.9, 333.0], [70.0, 333.0], [70.1, 333.0], [70.2, 333.0], [70.3, 333.0], [70.4, 334.0], [70.5, 334.0], [70.6, 334.0], [70.7, 334.0], [70.8, 335.0], [70.9, 335.0], [71.0, 335.0], [71.1, 335.0], [71.2, 338.0], [71.3, 338.0], [71.4, 338.0], [71.5, 338.0], [71.6, 338.0], [71.7, 338.0], [71.8, 338.0], [71.9, 338.0], [72.0, 338.0], [72.1, 338.0], [72.2, 338.0], [72.3, 338.0], [72.4, 339.0], [72.5, 339.0], [72.6, 339.0], [72.7, 339.0], [72.8, 340.0], [72.9, 340.0], [73.0, 340.0], [73.1, 340.0], [73.2, 341.0], [73.3, 341.0], [73.4, 341.0], [73.5, 341.0], [73.6, 341.0], [73.7, 341.0], [73.8, 341.0], [73.9, 341.0], [74.0, 341.0], [74.1, 341.0], [74.2, 341.0], [74.3, 341.0], [74.4, 341.0], [74.5, 341.0], [74.6, 341.0], [74.7, 341.0], [74.8, 341.0], [74.9, 341.0], [75.0, 341.0], [75.1, 341.0], [75.2, 342.0], [75.3, 342.0], [75.4, 342.0], [75.5, 342.0], [75.6, 343.0], [75.7, 343.0], [75.8, 343.0], [75.9, 343.0], [76.0, 344.0], [76.1, 344.0], [76.2, 344.0], [76.3, 344.0], [76.4, 344.0], [76.5, 344.0], [76.6, 344.0], [76.7, 344.0], [76.8, 345.0], [76.9, 345.0], [77.0, 345.0], [77.1, 345.0], [77.2, 346.0], [77.3, 346.0], [77.4, 346.0], [77.5, 346.0], [77.6, 347.0], [77.7, 347.0], [77.8, 347.0], [77.9, 347.0], [78.0, 348.0], [78.1, 348.0], [78.2, 348.0], [78.3, 348.0], [78.4, 348.0], [78.5, 348.0], [78.6, 348.0], [78.7, 348.0], [78.8, 349.0], [78.9, 349.0], [79.0, 349.0], [79.1, 349.0], [79.2, 350.0], [79.3, 350.0], [79.4, 350.0], [79.5, 350.0], [79.6, 350.0], [79.7, 350.0], [79.8, 350.0], [79.9, 350.0], [80.0, 350.0], [80.1, 350.0], [80.2, 350.0], [80.3, 350.0], [80.4, 352.0], [80.5, 352.0], [80.6, 352.0], [80.7, 352.0], [80.8, 352.0], [80.9, 354.0], [81.0, 354.0], [81.1, 354.0], [81.2, 354.0], [81.3, 354.0], [81.4, 354.0], [81.5, 354.0], [81.6, 354.0], [81.7, 355.0], [81.8, 355.0], [81.9, 355.0], [82.0, 355.0], [82.1, 359.0], [82.2, 359.0], [82.3, 359.0], [82.4, 359.0], [82.5, 359.0], [82.6, 359.0], [82.7, 359.0], [82.8, 359.0], [82.9, 361.0], [83.0, 361.0], [83.1, 361.0], [83.2, 361.0], [83.3, 363.0], [83.4, 363.0], [83.5, 363.0], [83.6, 363.0], [83.7, 364.0], [83.8, 364.0], [83.9, 364.0], [84.0, 364.0], [84.1, 371.0], [84.2, 371.0], [84.3, 371.0], [84.4, 371.0], [84.5, 371.0], [84.6, 371.0], [84.7, 371.0], [84.8, 371.0], [84.9, 371.0], [85.0, 371.0], [85.1, 371.0], [85.2, 371.0], [85.3, 373.0], [85.4, 373.0], [85.5, 373.0], [85.6, 373.0], [85.7, 377.0], [85.8, 377.0], [85.9, 377.0], [86.0, 377.0], [86.1, 377.0], [86.2, 377.0], [86.3, 377.0], [86.4, 377.0], [86.5, 377.0], [86.6, 377.0], [86.7, 377.0], [86.8, 377.0], [86.9, 377.0], [87.0, 377.0], [87.1, 377.0], [87.2, 377.0], [87.3, 381.0], [87.4, 381.0], [87.5, 381.0], [87.6, 381.0], [87.7, 384.0], [87.8, 384.0], [87.9, 384.0], [88.0, 384.0], [88.1, 511.0], [88.2, 511.0], [88.3, 511.0], [88.4, 511.0], [88.5, 1141.0], [88.6, 1141.0], [88.7, 1141.0], [88.8, 1141.0], [88.9, 1646.0], [89.0, 1646.0], [89.1, 1646.0], [89.2, 1646.0], [89.3, 1656.0], [89.4, 1656.0], [89.5, 1656.0], [89.6, 1656.0], [89.7, 1666.0], [89.8, 1666.0], [89.9, 1666.0], [90.0, 1666.0], [90.1, 1679.0], [90.2, 1679.0], [90.3, 1679.0], [90.4, 1679.0], [90.5, 1702.0], [90.6, 1702.0], [90.7, 1702.0], [90.8, 1702.0], [90.9, 1703.0], [91.0, 1703.0], [91.1, 1703.0], [91.2, 1703.0], [91.3, 1704.0], [91.4, 1704.0], [91.5, 1704.0], [91.6, 1704.0], [91.7, 1710.0], [91.8, 1710.0], [91.9, 1710.0], [92.0, 1710.0], [92.1, 1832.0], [92.2, 1832.0], [92.3, 1832.0], [92.4, 1832.0], [92.5, 1834.0], [92.6, 1834.0], [92.7, 1834.0], [92.8, 1834.0], [92.9, 1843.0], [93.0, 1843.0], [93.1, 1843.0], [93.2, 1843.0], [93.3, 1856.0], [93.4, 1856.0], [93.5, 1856.0], [93.6, 1856.0], [93.7, 1861.0], [93.8, 1861.0], [93.9, 1861.0], [94.0, 1861.0], [94.1, 1862.0], [94.2, 1862.0], [94.3, 1862.0], [94.4, 1862.0], [94.5, 1866.0], [94.6, 1866.0], [94.7, 1866.0], [94.8, 1866.0], [94.9, 1869.0], [95.0, 1869.0], [95.1, 1869.0], [95.2, 1869.0], [95.3, 1888.0], [95.4, 1888.0], [95.5, 1888.0], [95.6, 1888.0], [95.7, 1888.0], [95.8, 1888.0], [95.9, 1888.0], [96.0, 1888.0], [96.1, 1902.0], [96.2, 1902.0], [96.3, 1902.0], [96.4, 1902.0], [96.5, 1991.0], [96.6, 1991.0], [96.7, 1991.0], [96.8, 1991.0], [96.9, 1995.0], [97.0, 1995.0], [97.1, 1995.0], [97.2, 1995.0], [97.3, 1997.0], [97.4, 1997.0], [97.5, 1997.0], [97.6, 1997.0], [97.7, 2000.0], [97.8, 2000.0], [97.9, 2000.0], [98.0, 2000.0], [98.1, 2019.0], [98.2, 2019.0], [98.3, 2019.0], [98.4, 2019.0], [98.5, 2035.0], [98.6, 2035.0], [98.7, 2035.0], [98.8, 2035.0], [98.9, 2091.0], [99.0, 2091.0], [99.1, 2091.0], [99.2, 2091.0], [99.3, 2093.0], [99.4, 2093.0], [99.5, 2093.0], [99.6, 2093.0], [99.7, 2096.0], [99.8, 2096.0], [99.9, 2096.0], [100.0, 2096.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[0.0, 95.0], [0.1, 95.0], [0.2, 95.0], [0.3, 95.0], [0.4, 98.0], [0.5, 98.0], [0.6, 98.0], [0.7, 98.0], [0.8, 99.0], [0.9, 99.0], [1.0, 99.0], [1.1, 99.0], [1.2, 99.0], [1.3, 101.0], [1.4, 101.0], [1.5, 101.0], [1.6, 101.0], [1.7, 101.0], [1.8, 101.0], [1.9, 101.0], [2.0, 102.0], [2.1, 102.0], [2.2, 102.0], [2.3, 102.0], [2.4, 104.0], [2.5, 104.0], [2.6, 104.0], [2.7, 104.0], [2.8, 105.0], [2.9, 105.0], [3.0, 105.0], [3.1, 105.0], [3.2, 105.0], [3.3, 105.0], [3.4, 105.0], [3.5, 105.0], [3.6, 105.0], [3.7, 105.0], [3.8, 105.0], [3.9, 105.0], [4.0, 108.0], [4.1, 108.0], [4.2, 108.0], [4.3, 108.0], [4.4, 108.0], [4.5, 108.0], [4.6, 108.0], [4.7, 108.0], [4.8, 108.0], [4.9, 108.0], [5.0, 108.0], [5.1, 108.0], [5.2, 109.0], [5.3, 109.0], [5.4, 109.0], [5.5, 109.0], [5.6, 109.0], [5.7, 109.0], [5.8, 109.0], [5.9, 109.0], [6.0, 109.0], [6.1, 109.0], [6.2, 109.0], [6.3, 109.0], [6.4, 109.0], [6.5, 109.0], [6.6, 109.0], [6.7, 109.0], [6.8, 109.0], [6.9, 110.0], [7.0, 110.0], [7.1, 110.0], [7.2, 110.0], [7.3, 110.0], [7.4, 110.0], [7.5, 110.0], [7.6, 110.0], [7.7, 111.0], [7.8, 111.0], [7.9, 111.0], [8.0, 112.0], [8.1, 112.0], [8.2, 112.0], [8.3, 112.0], [8.4, 112.0], [8.5, 112.0], [8.6, 112.0], [8.7, 112.0], [8.8, 112.0], [8.9, 112.0], [9.0, 112.0], [9.1, 112.0], [9.2, 112.0], [9.3, 112.0], [9.4, 112.0], [9.5, 112.0], [9.6, 112.0], [9.7, 112.0], [9.8, 112.0], [9.9, 112.0], [10.0, 113.0], [10.1, 113.0], [10.2, 113.0], [10.3, 113.0], [10.4, 114.0], [10.5, 114.0], [10.6, 114.0], [10.7, 114.0], [10.8, 114.0], [10.9, 114.0], [11.0, 114.0], [11.1, 114.0], [11.2, 114.0], [11.3, 115.0], [11.4, 115.0], [11.5, 115.0], [11.6, 115.0], [11.7, 116.0], [11.8, 116.0], [11.9, 116.0], [12.0, 116.0], [12.1, 117.0], [12.2, 117.0], [12.3, 117.0], [12.4, 117.0], [12.5, 117.0], [12.6, 117.0], [12.7, 117.0], [12.8, 117.0], [12.9, 117.0], [13.0, 117.0], [13.1, 117.0], [13.2, 117.0], [13.3, 117.0], [13.4, 117.0], [13.5, 117.0], [13.6, 117.0], [13.7, 118.0], [13.8, 118.0], [13.9, 118.0], [14.0, 118.0], [14.1, 118.0], [14.2, 118.0], [14.3, 118.0], [14.4, 118.0], [14.5, 118.0], [14.6, 118.0], [14.7, 118.0], [14.8, 119.0], [14.9, 119.0], [15.0, 119.0], [15.1, 119.0], [15.2, 119.0], [15.3, 119.0], [15.4, 119.0], [15.5, 119.0], [15.6, 119.0], [15.7, 120.0], [15.8, 120.0], [15.9, 120.0], [16.0, 120.0], [16.1, 120.0], [16.2, 120.0], [16.3, 120.0], [16.4, 120.0], [16.5, 120.0], [16.6, 120.0], [16.7, 120.0], [16.8, 121.0], [16.9, 121.0], [17.0, 121.0], [17.1, 121.0], [17.2, 122.0], [17.3, 122.0], [17.4, 122.0], [17.5, 122.0], [17.6, 123.0], [17.7, 123.0], [17.8, 123.0], [17.9, 123.0], [18.0, 124.0], [18.1, 124.0], [18.2, 124.0], [18.3, 124.0], [18.4, 124.0], [18.5, 124.0], [18.6, 124.0], [18.7, 124.0], [18.8, 124.0], [18.9, 124.0], [19.0, 124.0], [19.1, 124.0], [19.2, 124.0], [19.3, 124.0], [19.4, 124.0], [19.5, 124.0], [19.6, 125.0], [19.7, 125.0], [19.8, 125.0], [19.9, 125.0], [20.0, 125.0], [20.1, 125.0], [20.2, 125.0], [20.3, 125.0], [20.4, 125.0], [20.5, 125.0], [20.6, 125.0], [20.7, 125.0], [20.8, 125.0], [20.9, 125.0], [21.0, 125.0], [21.1, 125.0], [21.2, 125.0], [21.3, 125.0], [21.4, 125.0], [21.5, 125.0], [21.6, 125.0], [21.7, 125.0], [21.8, 125.0], [21.9, 125.0], [22.0, 125.0], [22.1, 125.0], [22.2, 125.0], [22.3, 125.0], [22.4, 126.0], [22.5, 126.0], [22.6, 126.0], [22.7, 126.0], [22.8, 126.0], [22.9, 126.0], [23.0, 126.0], [23.1, 126.0], [23.2, 126.0], [23.3, 126.0], [23.4, 126.0], [23.5, 126.0], [23.6, 126.0], [23.7, 126.0], [23.8, 126.0], [23.9, 126.0], [24.0, 127.0], [24.1, 127.0], [24.2, 127.0], [24.3, 127.0], [24.4, 127.0], [24.5, 127.0], [24.6, 127.0], [24.7, 127.0], [24.8, 128.0], [24.9, 128.0], [25.0, 128.0], [25.1, 128.0], [25.2, 128.0], [25.3, 128.0], [25.4, 128.0], [25.5, 128.0], [25.6, 129.0], [25.7, 129.0], [25.8, 129.0], [25.9, 129.0], [26.0, 129.0], [26.1, 129.0], [26.2, 129.0], [26.3, 129.0], [26.4, 129.0], [26.5, 129.0], [26.6, 129.0], [26.7, 129.0], [26.8, 129.0], [26.9, 129.0], [27.0, 129.0], [27.1, 129.0], [27.2, 129.0], [27.3, 129.0], [27.4, 129.0], [27.5, 129.0], [27.6, 130.0], [27.7, 130.0], [27.8, 130.0], [27.9, 130.0], [28.0, 130.0], [28.1, 130.0], [28.2, 130.0], [28.3, 130.0], [28.4, 130.0], [28.5, 130.0], [28.6, 130.0], [28.7, 130.0], [28.8, 130.0], [28.9, 130.0], [29.0, 130.0], [29.1, 130.0], [29.2, 130.0], [29.3, 131.0], [29.4, 131.0], [29.5, 131.0], [29.6, 131.0], [29.7, 131.0], [29.8, 131.0], [29.9, 131.0], [30.0, 131.0], [30.1, 131.0], [30.2, 131.0], [30.3, 131.0], [30.4, 131.0], [30.5, 132.0], [30.6, 132.0], [30.7, 132.0], [30.8, 132.0], [30.9, 132.0], [31.0, 132.0], [31.1, 132.0], [31.2, 132.0], [31.3, 132.0], [31.4, 132.0], [31.5, 132.0], [31.6, 132.0], [31.7, 132.0], [31.8, 132.0], [31.9, 132.0], [32.0, 132.0], [32.1, 132.0], [32.2, 132.0], [32.3, 132.0], [32.4, 132.0], [32.5, 132.0], [32.6, 132.0], [32.7, 132.0], [32.8, 132.0], [32.9, 132.0], [33.0, 132.0], [33.1, 132.0], [33.2, 133.0], [33.3, 133.0], [33.4, 133.0], [33.5, 133.0], [33.6, 133.0], [33.7, 133.0], [33.8, 133.0], [33.9, 133.0], [34.0, 133.0], [34.1, 133.0], [34.2, 133.0], [34.3, 133.0], [34.4, 133.0], [34.5, 134.0], [34.6, 134.0], [34.7, 134.0], [34.8, 134.0], [34.9, 134.0], [35.0, 134.0], [35.1, 134.0], [35.2, 134.0], [35.3, 134.0], [35.4, 134.0], [35.5, 134.0], [35.6, 134.0], [35.7, 134.0], [35.8, 134.0], [35.9, 134.0], [36.0, 134.0], [36.1, 135.0], [36.2, 135.0], [36.3, 135.0], [36.4, 135.0], [36.5, 135.0], [36.6, 135.0], [36.7, 135.0], [36.8, 135.0], [36.9, 135.0], [37.0, 135.0], [37.1, 135.0], [37.2, 135.0], [37.3, 135.0], [37.4, 135.0], [37.5, 135.0], [37.6, 135.0], [37.7, 135.0], [37.8, 135.0], [37.9, 135.0], [38.0, 135.0], [38.1, 136.0], [38.2, 136.0], [38.3, 136.0], [38.4, 136.0], [38.5, 136.0], [38.6, 136.0], [38.7, 136.0], [38.8, 136.0], [38.9, 137.0], [39.0, 137.0], [39.1, 137.0], [39.2, 137.0], [39.3, 137.0], [39.4, 137.0], [39.5, 137.0], [39.6, 137.0], [39.7, 137.0], [39.8, 137.0], [39.9, 137.0], [40.0, 137.0], [40.1, 137.0], [40.2, 137.0], [40.3, 137.0], [40.4, 137.0], [40.5, 137.0], [40.6, 137.0], [40.7, 137.0], [40.8, 137.0], [40.9, 137.0], [41.0, 137.0], [41.1, 137.0], [41.2, 140.0], [41.3, 140.0], [41.4, 140.0], [41.5, 140.0], [41.6, 143.0], [41.7, 143.0], [41.8, 143.0], [41.9, 143.0], [42.0, 143.0], [42.1, 143.0], [42.2, 143.0], [42.3, 143.0], [42.4, 143.0], [42.5, 143.0], [42.6, 143.0], [42.7, 143.0], [42.8, 143.0], [42.9, 144.0], [43.0, 144.0], [43.1, 144.0], [43.2, 144.0], [43.3, 144.0], [43.4, 144.0], [43.5, 144.0], [43.6, 145.0], [43.7, 145.0], [43.8, 145.0], [43.9, 145.0], [44.0, 146.0], [44.1, 146.0], [44.2, 146.0], [44.3, 146.0], [44.4, 147.0], [44.5, 147.0], [44.6, 147.0], [44.7, 147.0], [44.8, 147.0], [44.9, 147.0], [45.0, 147.0], [45.1, 147.0], [45.2, 148.0], [45.3, 148.0], [45.4, 148.0], [45.5, 148.0], [45.6, 159.0], [45.7, 159.0], [45.8, 159.0], [45.9, 159.0], [46.0, 167.0], [46.1, 167.0], [46.2, 167.0], [46.3, 167.0], [46.4, 168.0], [46.5, 168.0], [46.6, 168.0], [46.7, 168.0], [46.8, 169.0], [46.9, 169.0], [47.0, 169.0], [47.1, 169.0], [47.2, 170.0], [47.3, 170.0], [47.4, 170.0], [47.5, 170.0], [47.6, 170.0], [47.7, 170.0], [47.8, 170.0], [47.9, 170.0], [48.0, 170.0], [48.1, 170.0], [48.2, 170.0], [48.3, 170.0], [48.4, 172.0], [48.5, 172.0], [48.6, 172.0], [48.7, 172.0], [48.8, 173.0], [48.9, 173.0], [49.0, 173.0], [49.1, 173.0], [49.2, 204.0], [49.3, 204.0], [49.4, 204.0], [49.5, 204.0], [49.6, 205.0], [49.7, 205.0], [49.8, 205.0], [49.9, 205.0], [50.0, 206.0], [50.1, 206.0], [50.2, 206.0], [50.3, 206.0], [50.4, 207.0], [50.5, 207.0], [50.6, 207.0], [50.7, 207.0], [50.8, 207.0], [50.9, 207.0], [51.0, 207.0], [51.1, 207.0], [51.2, 208.0], [51.3, 208.0], [51.4, 208.0], [51.5, 208.0], [51.6, 209.0], [51.7, 209.0], [51.8, 209.0], [51.9, 209.0], [52.0, 209.0], [52.1, 209.0], [52.2, 209.0], [52.3, 209.0], [52.4, 209.0], [52.5, 209.0], [52.6, 209.0], [52.7, 209.0], [52.8, 209.0], [52.9, 209.0], [53.0, 209.0], [53.1, 209.0], [53.2, 212.0], [53.3, 212.0], [53.4, 212.0], [53.5, 212.0], [53.6, 212.0], [53.7, 212.0], [53.8, 212.0], [53.9, 212.0], [54.0, 212.0], [54.1, 212.0], [54.2, 212.0], [54.3, 212.0], [54.4, 212.0], [54.5, 212.0], [54.6, 212.0], [54.7, 212.0], [54.8, 214.0], [54.9, 214.0], [55.0, 214.0], [55.1, 214.0], [55.2, 294.0], [55.3, 294.0], [55.4, 294.0], [55.5, 294.0], [55.6, 295.0], [55.7, 295.0], [55.8, 295.0], [55.9, 295.0], [56.0, 309.0], [56.1, 309.0], [56.2, 309.0], [56.3, 309.0], [56.4, 313.0], [56.5, 313.0], [56.6, 313.0], [56.7, 313.0], [56.8, 315.0], [56.9, 315.0], [57.0, 315.0], [57.1, 315.0], [57.2, 322.0], [57.3, 322.0], [57.4, 322.0], [57.5, 322.0], [57.6, 324.0], [57.7, 324.0], [57.8, 324.0], [57.9, 324.0], [58.0, 324.0], [58.1, 324.0], [58.2, 324.0], [58.3, 324.0], [58.4, 325.0], [58.5, 325.0], [58.6, 325.0], [58.7, 325.0], [58.8, 327.0], [58.9, 327.0], [59.0, 327.0], [59.1, 327.0], [59.2, 365.0], [59.3, 365.0], [59.4, 365.0], [59.5, 365.0], [59.6, 365.0], [59.7, 365.0], [59.8, 365.0], [59.9, 365.0], [60.0, 367.0], [60.1, 367.0], [60.2, 367.0], [60.3, 367.0], [60.4, 368.0], [60.5, 368.0], [60.6, 368.0], [60.7, 368.0], [60.8, 369.0], [60.9, 369.0], [61.0, 369.0], [61.1, 369.0], [61.2, 371.0], [61.3, 371.0], [61.4, 371.0], [61.5, 371.0], [61.6, 373.0], [61.7, 373.0], [61.8, 373.0], [61.9, 373.0], [62.0, 373.0], [62.1, 373.0], [62.2, 373.0], [62.3, 373.0], [62.4, 375.0], [62.5, 375.0], [62.6, 375.0], [62.7, 375.0], [62.8, 460.0], [62.9, 460.0], [63.0, 460.0], [63.1, 460.0], [63.2, 460.0], [63.3, 460.0], [63.4, 460.0], [63.5, 460.0], [63.6, 460.0], [63.7, 460.0], [63.8, 460.0], [63.9, 460.0], [64.0, 461.0], [64.1, 461.0], [64.2, 461.0], [64.3, 461.0], [64.4, 461.0], [64.5, 461.0], [64.6, 461.0], [64.7, 461.0], [64.8, 464.0], [64.9, 464.0], [65.0, 464.0], [65.1, 464.0], [65.2, 464.0], [65.3, 464.0], [65.4, 464.0], [65.5, 464.0], [65.6, 466.0], [65.7, 466.0], [65.8, 466.0], [65.9, 466.0], [66.0, 470.0], [66.1, 470.0], [66.2, 470.0], [66.3, 470.0], [66.4, 472.0], [66.5, 472.0], [66.6, 472.0], [66.7, 472.0], [66.8, 481.0], [66.9, 481.0], [67.0, 481.0], [67.1, 481.0], [67.2, 481.0], [67.3, 481.0], [67.4, 481.0], [67.5, 481.0], [67.6, 482.0], [67.7, 482.0], [67.8, 482.0], [67.9, 482.0], [68.0, 482.0], [68.1, 482.0], [68.2, 482.0], [68.3, 482.0], [68.4, 485.0], [68.5, 485.0], [68.6, 485.0], [68.7, 485.0], [68.8, 486.0], [68.9, 486.0], [69.0, 486.0], [69.1, 486.0], [69.2, 487.0], [69.3, 487.0], [69.4, 487.0], [69.5, 487.0], [69.6, 487.0], [69.7, 487.0], [69.8, 487.0], [69.9, 487.0], [70.0, 487.0], [70.1, 487.0], [70.2, 487.0], [70.3, 487.0], [70.4, 488.0], [70.5, 488.0], [70.6, 488.0], [70.7, 488.0], [70.8, 488.0], [70.9, 488.0], [71.0, 488.0], [71.1, 488.0], [71.2, 489.0], [71.3, 489.0], [71.4, 489.0], [71.5, 489.0], [71.6, 489.0], [71.7, 489.0], [71.8, 489.0], [71.9, 489.0], [72.0, 490.0], [72.1, 490.0], [72.2, 490.0], [72.3, 490.0], [72.4, 490.0], [72.5, 490.0], [72.6, 490.0], [72.7, 490.0], [72.8, 491.0], [72.9, 491.0], [73.0, 491.0], [73.1, 491.0], [73.2, 491.0], [73.3, 491.0], [73.4, 491.0], [73.5, 491.0], [73.6, 491.0], [73.7, 491.0], [73.8, 491.0], [73.9, 491.0], [74.0, 491.0], [74.1, 491.0], [74.2, 491.0], [74.3, 491.0], [74.4, 492.0], [74.5, 492.0], [74.6, 492.0], [74.7, 492.0], [74.8, 492.0], [74.9, 492.0], [75.0, 492.0], [75.1, 492.0], [75.2, 492.0], [75.3, 492.0], [75.4, 492.0], [75.5, 492.0], [75.6, 492.0], [75.7, 492.0], [75.8, 492.0], [75.9, 492.0], [76.0, 493.0], [76.1, 493.0], [76.2, 493.0], [76.3, 493.0], [76.4, 494.0], [76.5, 494.0], [76.6, 494.0], [76.7, 494.0], [76.8, 494.0], [76.9, 494.0], [77.0, 494.0], [77.1, 494.0], [77.2, 494.0], [77.3, 494.0], [77.4, 494.0], [77.5, 494.0], [77.6, 495.0], [77.7, 495.0], [77.8, 495.0], [77.9, 495.0], [78.0, 495.0], [78.1, 495.0], [78.2, 495.0], [78.3, 495.0], [78.4, 495.0], [78.5, 495.0], [78.6, 495.0], [78.7, 495.0], [78.8, 495.0], [78.9, 495.0], [79.0, 495.0], [79.1, 495.0], [79.2, 495.0], [79.3, 495.0], [79.4, 495.0], [79.5, 495.0], [79.6, 496.0], [79.7, 496.0], [79.8, 496.0], [79.9, 496.0], [80.0, 497.0], [80.1, 497.0], [80.2, 497.0], [80.3, 497.0], [80.4, 499.0], [80.5, 499.0], [80.6, 499.0], [80.7, 499.0], [80.8, 504.0], [80.9, 504.0], [81.0, 504.0], [81.1, 504.0], [81.2, 568.0], [81.3, 568.0], [81.4, 568.0], [81.5, 568.0], [81.6, 569.0], [81.7, 569.0], [81.8, 569.0], [81.9, 569.0], [82.0, 569.0], [82.1, 569.0], [82.2, 569.0], [82.3, 569.0], [82.4, 570.0], [82.5, 570.0], [82.6, 570.0], [82.7, 570.0], [82.8, 570.0], [82.9, 570.0], [83.0, 570.0], [83.1, 570.0], [83.2, 572.0], [83.3, 572.0], [83.4, 572.0], [83.5, 572.0], [83.6, 573.0], [83.7, 573.0], [83.8, 573.0], [83.9, 573.0], [84.0, 574.0], [84.1, 574.0], [84.2, 574.0], [84.3, 574.0], [84.4, 574.0], [84.5, 574.0], [84.6, 574.0], [84.7, 574.0], [84.8, 575.0], [84.9, 575.0], [85.0, 575.0], [85.1, 575.0], [85.2, 575.0], [85.3, 575.0], [85.4, 575.0], [85.5, 575.0], [85.6, 682.0], [85.7, 682.0], [85.8, 682.0], [85.9, 682.0], [86.0, 700.0], [86.1, 700.0], [86.2, 700.0], [86.3, 700.0], [86.4, 727.0], [86.5, 727.0], [86.6, 727.0], [86.7, 727.0], [86.8, 727.0], [86.9, 729.0], [87.0, 729.0], [87.1, 729.0], [87.2, 729.0], [87.3, 730.0], [87.4, 730.0], [87.5, 730.0], [87.6, 730.0], [87.7, 731.0], [87.8, 731.0], [87.9, 731.0], [88.0, 731.0], [88.1, 732.0], [88.2, 732.0], [88.3, 732.0], [88.4, 732.0], [88.5, 733.0], [88.6, 733.0], [88.7, 733.0], [88.8, 733.0], [88.9, 734.0], [89.0, 734.0], [89.1, 734.0], [89.2, 734.0], [89.3, 735.0], [89.4, 735.0], [89.5, 735.0], [89.6, 735.0], [89.7, 736.0], [89.8, 736.0], [89.9, 736.0], [90.0, 736.0], [90.1, 754.0], [90.2, 754.0], [90.3, 754.0], [90.4, 754.0], [90.5, 756.0], [90.6, 756.0], [90.7, 756.0], [90.8, 756.0], [90.9, 756.0], [91.0, 756.0], [91.1, 756.0], [91.2, 756.0], [91.3, 757.0], [91.4, 757.0], [91.5, 757.0], [91.6, 757.0], [91.7, 758.0], [91.8, 758.0], [91.9, 758.0], [92.0, 758.0], [92.1, 759.0], [92.2, 759.0], [92.3, 759.0], [92.4, 759.0], [92.5, 763.0], [92.6, 763.0], [92.7, 763.0], [92.8, 763.0], [92.9, 764.0], [93.0, 764.0], [93.1, 764.0], [93.2, 764.0], [93.3, 940.0], [93.4, 940.0], [93.5, 940.0], [93.6, 940.0], [93.7, 1586.0], [93.8, 1586.0], [93.9, 1586.0], [94.0, 1586.0], [94.1, 2335.0], [94.2, 2335.0], [94.3, 2335.0], [94.4, 2335.0], [94.5, 2358.0], [94.6, 2358.0], [94.7, 2358.0], [94.8, 2358.0], [94.9, 2379.0], [95.0, 2379.0], [95.1, 2379.0], [95.2, 2379.0], [95.3, 2391.0], [95.4, 2391.0], [95.5, 2391.0], [95.6, 2391.0], [95.7, 2406.0], [95.8, 2406.0], [95.9, 2406.0], [96.0, 2406.0], [96.1, 2433.0], [96.2, 2433.0], [96.3, 2433.0], [96.4, 2433.0], [96.5, 2436.0], [96.6, 2436.0], [96.7, 2436.0], [96.8, 2436.0], [96.9, 2462.0], [97.0, 2462.0], [97.1, 2462.0], [97.2, 2462.0], [97.3, 2474.0], [97.4, 2474.0], [97.5, 2474.0], [97.6, 2474.0], [97.7, 2478.0], [97.8, 2478.0], [97.9, 2478.0], [98.0, 2478.0], [98.1, 2478.0], [98.2, 2478.0], [98.3, 2478.0], [98.4, 2478.0], [98.5, 2478.0], [98.6, 2478.0], [98.7, 2478.0], [98.8, 2478.0], [98.9, 2479.0], [99.0, 2479.0], [99.1, 2479.0], [99.2, 2479.0], [99.3, 2481.0], [99.4, 2481.0], [99.5, 2481.0], [99.6, 2481.0], [99.7, 2494.0], [99.8, 2494.0], [99.9, 2494.0], [100.0, 2494.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[0.0, 112.0], [0.1, 112.0], [0.2, 112.0], [0.3, 112.0], [0.4, 124.0], [0.5, 124.0], [0.6, 124.0], [0.7, 124.0], [0.8, 125.0], [0.9, 125.0], [1.0, 125.0], [1.1, 125.0], [1.2, 125.0], [1.3, 125.0], [1.4, 125.0], [1.5, 125.0], [1.6, 127.0], [1.7, 127.0], [1.8, 127.0], [1.9, 127.0], [2.0, 128.0], [2.1, 128.0], [2.2, 128.0], [2.3, 128.0], [2.4, 137.0], [2.5, 137.0], [2.6, 137.0], [2.7, 137.0], [2.8, 139.0], [2.9, 139.0], [3.0, 139.0], [3.1, 139.0], [3.2, 141.0], [3.3, 141.0], [3.4, 141.0], [3.5, 141.0], [3.6, 141.0], [3.7, 141.0], [3.8, 141.0], [3.9, 141.0], [4.0, 143.0], [4.1, 143.0], [4.2, 143.0], [4.3, 143.0], [4.4, 145.0], [4.5, 145.0], [4.6, 145.0], [4.7, 145.0], [4.8, 145.0], [4.9, 146.0], [5.0, 146.0], [5.1, 146.0], [5.2, 146.0], [5.3, 148.0], [5.4, 148.0], [5.5, 148.0], [5.6, 148.0], [5.7, 151.0], [5.8, 151.0], [5.9, 151.0], [6.0, 151.0], [6.1, 153.0], [6.2, 153.0], [6.3, 153.0], [6.4, 153.0], [6.5, 154.0], [6.6, 154.0], [6.7, 154.0], [6.8, 154.0], [6.9, 154.0], [7.0, 154.0], [7.1, 154.0], [7.2, 154.0], [7.3, 155.0], [7.4, 155.0], [7.5, 155.0], [7.6, 155.0], [7.7, 156.0], [7.8, 156.0], [7.9, 156.0], [8.0, 156.0], [8.1, 157.0], [8.2, 157.0], [8.3, 157.0], [8.4, 157.0], [8.5, 158.0], [8.6, 158.0], [8.7, 158.0], [8.8, 158.0], [8.9, 158.0], [9.0, 158.0], [9.1, 158.0], [9.2, 158.0], [9.3, 158.0], [9.4, 158.0], [9.5, 158.0], [9.6, 158.0], [9.7, 159.0], [9.8, 159.0], [9.9, 159.0], [10.0, 159.0], [10.1, 160.0], [10.2, 160.0], [10.3, 160.0], [10.4, 160.0], [10.5, 160.0], [10.6, 160.0], [10.7, 160.0], [10.8, 160.0], [10.9, 161.0], [11.0, 161.0], [11.1, 161.0], [11.2, 161.0], [11.3, 161.0], [11.4, 161.0], [11.5, 161.0], [11.6, 161.0], [11.7, 161.0], [11.8, 161.0], [11.9, 161.0], [12.0, 161.0], [12.1, 162.0], [12.2, 162.0], [12.3, 162.0], [12.4, 162.0], [12.5, 162.0], [12.6, 162.0], [12.7, 162.0], [12.8, 162.0], [12.9, 167.0], [13.0, 167.0], [13.1, 167.0], [13.2, 167.0], [13.3, 168.0], [13.4, 168.0], [13.5, 168.0], [13.6, 168.0], [13.7, 169.0], [13.8, 169.0], [13.9, 169.0], [14.0, 169.0], [14.1, 169.0], [14.2, 169.0], [14.3, 169.0], [14.4, 169.0], [14.5, 170.0], [14.6, 170.0], [14.7, 170.0], [14.8, 170.0], [14.9, 170.0], [15.0, 170.0], [15.1, 170.0], [15.2, 170.0], [15.3, 171.0], [15.4, 171.0], [15.5, 171.0], [15.6, 171.0], [15.7, 171.0], [15.8, 171.0], [15.9, 171.0], [16.0, 171.0], [16.1, 173.0], [16.2, 173.0], [16.3, 173.0], [16.4, 173.0], [16.5, 176.0], [16.6, 176.0], [16.7, 176.0], [16.8, 183.0], [16.9, 183.0], [17.0, 183.0], [17.1, 183.0], [17.2, 496.0], [17.3, 496.0], [17.4, 496.0], [17.5, 496.0], [17.6, 498.0], [17.7, 498.0], [17.8, 498.0], [17.9, 498.0], [18.0, 1517.0], [18.1, 1517.0], [18.2, 1517.0], [18.3, 1517.0], [18.4, 1549.0], [18.5, 1549.0], [18.6, 1549.0], [18.7, 1549.0], [18.8, 1549.0], [18.9, 1549.0], [19.0, 1549.0], [19.1, 1549.0], [19.2, 1550.0], [19.3, 1550.0], [19.4, 1550.0], [19.5, 1550.0], [19.6, 1557.0], [19.7, 1557.0], [19.8, 1557.0], [19.9, 1557.0], [20.0, 1561.0], [20.1, 1561.0], [20.2, 1561.0], [20.3, 1561.0], [20.4, 1562.0], [20.5, 1562.0], [20.6, 1562.0], [20.7, 1562.0], [20.8, 1563.0], [20.9, 1563.0], [21.0, 1563.0], [21.1, 1563.0], [21.2, 1564.0], [21.3, 1564.0], [21.4, 1564.0], [21.5, 1564.0], [21.6, 1565.0], [21.7, 1565.0], [21.8, 1565.0], [21.9, 1565.0], [22.0, 1565.0], [22.1, 1565.0], [22.2, 1565.0], [22.3, 1565.0], [22.4, 1566.0], [22.5, 1566.0], [22.6, 1566.0], [22.7, 1566.0], [22.8, 1571.0], [22.9, 1571.0], [23.0, 1571.0], [23.1, 1571.0], [23.2, 1572.0], [23.3, 1572.0], [23.4, 1572.0], [23.5, 1572.0], [23.6, 1573.0], [23.7, 1573.0], [23.8, 1573.0], [23.9, 1573.0], [24.0, 1577.0], [24.1, 1577.0], [24.2, 1577.0], [24.3, 1577.0], [24.4, 1584.0], [24.5, 1584.0], [24.6, 1584.0], [24.7, 1584.0], [24.8, 1589.0], [24.9, 1589.0], [25.0, 1589.0], [25.1, 1589.0], [25.2, 1589.0], [25.3, 1589.0], [25.4, 1589.0], [25.5, 1589.0], [25.6, 1590.0], [25.7, 1590.0], [25.8, 1590.0], [25.9, 1590.0], [26.0, 1595.0], [26.1, 1595.0], [26.2, 1595.0], [26.3, 1595.0], [26.4, 1595.0], [26.5, 1595.0], [26.6, 1595.0], [26.7, 1595.0], [26.8, 1596.0], [26.9, 1596.0], [27.0, 1596.0], [27.1, 1596.0], [27.2, 1602.0], [27.3, 1602.0], [27.4, 1602.0], [27.5, 1602.0], [27.6, 1604.0], [27.7, 1604.0], [27.8, 1604.0], [27.9, 1604.0], [28.0, 1605.0], [28.1, 1605.0], [28.2, 1605.0], [28.3, 1605.0], [28.4, 1617.0], [28.5, 1617.0], [28.6, 1617.0], [28.7, 1617.0], [28.8, 1621.0], [28.9, 1621.0], [29.0, 1621.0], [29.1, 1621.0], [29.2, 1625.0], [29.3, 1625.0], [29.4, 1625.0], [29.5, 1625.0], [29.6, 1631.0], [29.7, 1631.0], [29.8, 1631.0], [29.9, 1631.0], [30.0, 1634.0], [30.1, 1634.0], [30.2, 1634.0], [30.3, 1634.0], [30.4, 1635.0], [30.5, 1635.0], [30.6, 1635.0], [30.7, 1635.0], [30.8, 1636.0], [30.9, 1636.0], [31.0, 1636.0], [31.1, 1636.0], [31.2, 1641.0], [31.3, 1641.0], [31.4, 1641.0], [31.5, 1641.0], [31.6, 1642.0], [31.7, 1642.0], [31.8, 1642.0], [31.9, 1642.0], [32.0, 1643.0], [32.1, 1643.0], [32.2, 1643.0], [32.3, 1643.0], [32.4, 1644.0], [32.5, 1644.0], [32.6, 1644.0], [32.7, 1644.0], [32.8, 1646.0], [32.9, 1646.0], [33.0, 1646.0], [33.1, 1646.0], [33.2, 1647.0], [33.3, 1647.0], [33.4, 1647.0], [33.5, 1647.0], [33.6, 1647.0], [33.7, 1647.0], [33.8, 1647.0], [33.9, 1647.0], [34.0, 1651.0], [34.1, 1651.0], [34.2, 1651.0], [34.3, 1651.0], [34.4, 1652.0], [34.5, 1652.0], [34.6, 1652.0], [34.7, 1652.0], [34.8, 1653.0], [34.9, 1653.0], [35.0, 1653.0], [35.1, 1653.0], [35.2, 1656.0], [35.3, 1656.0], [35.4, 1656.0], [35.5, 1656.0], [35.6, 1656.0], [35.7, 1656.0], [35.8, 1656.0], [35.9, 1656.0], [36.0, 1660.0], [36.1, 1660.0], [36.2, 1660.0], [36.3, 1660.0], [36.4, 1660.0], [36.5, 1660.0], [36.6, 1660.0], [36.7, 1660.0], [36.8, 1662.0], [36.9, 1662.0], [37.0, 1662.0], [37.1, 1662.0], [37.2, 1668.0], [37.3, 1668.0], [37.4, 1668.0], [37.5, 1668.0], [37.6, 1669.0], [37.7, 1669.0], [37.8, 1669.0], [37.9, 1669.0], [38.0, 1672.0], [38.1, 1672.0], [38.2, 1672.0], [38.3, 1672.0], [38.4, 1673.0], [38.5, 1673.0], [38.6, 1673.0], [38.7, 1673.0], [38.8, 1674.0], [38.9, 1674.0], [39.0, 1674.0], [39.1, 1674.0], [39.2, 1677.0], [39.3, 1677.0], [39.4, 1677.0], [39.5, 1677.0], [39.6, 1685.0], [39.7, 1685.0], [39.8, 1685.0], [39.9, 1685.0], [40.0, 1685.0], [40.1, 1685.0], [40.2, 1685.0], [40.3, 1685.0], [40.4, 1688.0], [40.5, 1688.0], [40.6, 1688.0], [40.7, 1688.0], [40.8, 1695.0], [40.9, 1695.0], [41.0, 1695.0], [41.1, 1695.0], [41.2, 1697.0], [41.3, 1697.0], [41.4, 1697.0], [41.5, 1697.0], [41.6, 1697.0], [41.7, 1697.0], [41.8, 1697.0], [41.9, 1697.0], [42.0, 1699.0], [42.1, 1699.0], [42.2, 1699.0], [42.3, 1699.0], [42.4, 1699.0], [42.5, 1699.0], [42.6, 1699.0], [42.7, 1699.0], [42.8, 1700.0], [42.9, 1700.0], [43.0, 1700.0], [43.1, 1700.0], [43.2, 1705.0], [43.3, 1705.0], [43.4, 1705.0], [43.5, 1705.0], [43.6, 1708.0], [43.7, 1708.0], [43.8, 1708.0], [43.9, 1708.0], [44.0, 1709.0], [44.1, 1709.0], [44.2, 1709.0], [44.3, 1709.0], [44.4, 1709.0], [44.5, 1709.0], [44.6, 1709.0], [44.7, 1709.0], [44.8, 1711.0], [44.9, 1711.0], [45.0, 1711.0], [45.1, 1711.0], [45.2, 1712.0], [45.3, 1712.0], [45.4, 1712.0], [45.5, 1712.0], [45.6, 1715.0], [45.7, 1715.0], [45.8, 1715.0], [45.9, 1715.0], [46.0, 1716.0], [46.1, 1716.0], [46.2, 1716.0], [46.3, 1716.0], [46.4, 1717.0], [46.5, 1717.0], [46.6, 1717.0], [46.7, 1717.0], [46.8, 1717.0], [46.9, 1717.0], [47.0, 1717.0], [47.1, 1717.0], [47.2, 1719.0], [47.3, 1719.0], [47.4, 1719.0], [47.5, 1719.0], [47.6, 1722.0], [47.7, 1722.0], [47.8, 1722.0], [47.9, 1722.0], [48.0, 1724.0], [48.1, 1724.0], [48.2, 1724.0], [48.3, 1724.0], [48.4, 1726.0], [48.5, 1726.0], [48.6, 1726.0], [48.7, 1726.0], [48.8, 1728.0], [48.9, 1728.0], [49.0, 1728.0], [49.1, 1728.0], [49.2, 1731.0], [49.3, 1731.0], [49.4, 1731.0], [49.5, 1731.0], [49.6, 1732.0], [49.7, 1732.0], [49.8, 1732.0], [49.9, 1732.0], [50.0, 1733.0], [50.1, 1733.0], [50.2, 1733.0], [50.3, 1733.0], [50.4, 1735.0], [50.5, 1735.0], [50.6, 1735.0], [50.7, 1735.0], [50.8, 1736.0], [50.9, 1736.0], [51.0, 1736.0], [51.1, 1736.0], [51.2, 1738.0], [51.3, 1738.0], [51.4, 1738.0], [51.5, 1738.0], [51.6, 1739.0], [51.7, 1739.0], [51.8, 1739.0], [51.9, 1739.0], [52.0, 1740.0], [52.1, 1740.0], [52.2, 1740.0], [52.3, 1740.0], [52.4, 1740.0], [52.5, 1740.0], [52.6, 1740.0], [52.7, 1740.0], [52.8, 1740.0], [52.9, 1740.0], [53.0, 1740.0], [53.1, 1740.0], [53.2, 1741.0], [53.3, 1741.0], [53.4, 1741.0], [53.5, 1741.0], [53.6, 1741.0], [53.7, 1741.0], [53.8, 1741.0], [53.9, 1741.0], [54.0, 1743.0], [54.1, 1743.0], [54.2, 1743.0], [54.3, 1743.0], [54.4, 1744.0], [54.5, 1744.0], [54.6, 1744.0], [54.7, 1744.0], [54.8, 1745.0], [54.9, 1745.0], [55.0, 1745.0], [55.1, 1745.0], [55.2, 1747.0], [55.3, 1747.0], [55.4, 1747.0], [55.5, 1747.0], [55.6, 1748.0], [55.7, 1748.0], [55.8, 1748.0], [55.9, 1748.0], [56.0, 1748.0], [56.1, 1748.0], [56.2, 1748.0], [56.3, 1748.0], [56.4, 1752.0], [56.5, 1752.0], [56.6, 1752.0], [56.7, 1752.0], [56.8, 1753.0], [56.9, 1753.0], [57.0, 1753.0], [57.1, 1753.0], [57.2, 1755.0], [57.3, 1755.0], [57.4, 1755.0], [57.5, 1755.0], [57.6, 1758.0], [57.7, 1758.0], [57.8, 1758.0], [57.9, 1758.0], [58.0, 1763.0], [58.1, 1763.0], [58.2, 1763.0], [58.3, 1763.0], [58.4, 1766.0], [58.5, 1766.0], [58.6, 1766.0], [58.7, 1766.0], [58.8, 1773.0], [58.9, 1773.0], [59.0, 1773.0], [59.1, 1773.0], [59.2, 1773.0], [59.3, 1773.0], [59.4, 1773.0], [59.5, 1773.0], [59.6, 1776.0], [59.7, 1776.0], [59.8, 1776.0], [59.9, 1776.0], [60.0, 1780.0], [60.1, 1780.0], [60.2, 1780.0], [60.3, 1780.0], [60.4, 1782.0], [60.5, 1782.0], [60.6, 1782.0], [60.7, 1782.0], [60.8, 1789.0], [60.9, 1789.0], [61.0, 1789.0], [61.1, 1789.0], [61.2, 1789.0], [61.3, 1789.0], [61.4, 1789.0], [61.5, 1789.0], [61.6, 1795.0], [61.7, 1795.0], [61.8, 1795.0], [61.9, 1795.0], [62.0, 1798.0], [62.1, 1798.0], [62.2, 1798.0], [62.3, 1798.0], [62.4, 1803.0], [62.5, 1803.0], [62.6, 1803.0], [62.7, 1803.0], [62.8, 1809.0], [62.9, 1809.0], [63.0, 1809.0], [63.1, 1809.0], [63.2, 1813.0], [63.3, 1813.0], [63.4, 1813.0], [63.5, 1813.0], [63.6, 1815.0], [63.7, 1815.0], [63.8, 1815.0], [63.9, 1815.0], [64.0, 1818.0], [64.1, 1818.0], [64.2, 1818.0], [64.3, 1818.0], [64.4, 1820.0], [64.5, 1820.0], [64.6, 1820.0], [64.7, 1820.0], [64.8, 1823.0], [64.9, 1823.0], [65.0, 1823.0], [65.1, 1823.0], [65.2, 1825.0], [65.3, 1825.0], [65.4, 1825.0], [65.5, 1825.0], [65.6, 1826.0], [65.7, 1826.0], [65.8, 1826.0], [65.9, 1826.0], [66.0, 1830.0], [66.1, 1830.0], [66.2, 1830.0], [66.3, 1830.0], [66.4, 1836.0], [66.5, 1836.0], [66.6, 1836.0], [66.7, 1836.0], [66.8, 1836.0], [66.9, 1836.0], [67.0, 1836.0], [67.1, 1836.0], [67.2, 1837.0], [67.3, 1837.0], [67.4, 1837.0], [67.5, 1837.0], [67.6, 1838.0], [67.7, 1838.0], [67.8, 1838.0], [67.9, 1838.0], [68.0, 1840.0], [68.1, 1840.0], [68.2, 1840.0], [68.3, 1840.0], [68.4, 1841.0], [68.5, 1841.0], [68.6, 1841.0], [68.7, 1841.0], [68.8, 1841.0], [68.9, 1841.0], [69.0, 1841.0], [69.1, 1841.0], [69.2, 1842.0], [69.3, 1842.0], [69.4, 1842.0], [69.5, 1842.0], [69.6, 1842.0], [69.7, 1842.0], [69.8, 1842.0], [69.9, 1842.0], [70.0, 1844.0], [70.1, 1844.0], [70.2, 1844.0], [70.3, 1844.0], [70.4, 1847.0], [70.5, 1847.0], [70.6, 1847.0], [70.7, 1847.0], [70.8, 1848.0], [70.9, 1848.0], [71.0, 1848.0], [71.1, 1848.0], [71.2, 1849.0], [71.3, 1849.0], [71.4, 1849.0], [71.5, 1849.0], [71.6, 1850.0], [71.7, 1850.0], [71.8, 1850.0], [71.9, 1850.0], [72.0, 1851.0], [72.1, 1851.0], [72.2, 1851.0], [72.3, 1851.0], [72.4, 1857.0], [72.5, 1857.0], [72.6, 1857.0], [72.7, 1857.0], [72.8, 1860.0], [72.9, 1860.0], [73.0, 1860.0], [73.1, 1860.0], [73.2, 1863.0], [73.3, 1863.0], [73.4, 1863.0], [73.5, 1863.0], [73.6, 1863.0], [73.7, 1863.0], [73.8, 1863.0], [73.9, 1863.0], [74.0, 1864.0], [74.1, 1864.0], [74.2, 1864.0], [74.3, 1864.0], [74.4, 1867.0], [74.5, 1867.0], [74.6, 1867.0], [74.7, 1867.0], [74.8, 1871.0], [74.9, 1871.0], [75.0, 1871.0], [75.1, 1871.0], [75.2, 1871.0], [75.3, 1871.0], [75.4, 1871.0], [75.5, 1871.0], [75.6, 1875.0], [75.7, 1875.0], [75.8, 1875.0], [75.9, 1875.0], [76.0, 1880.0], [76.1, 1880.0], [76.2, 1880.0], [76.3, 1880.0], [76.4, 1886.0], [76.5, 1886.0], [76.6, 1886.0], [76.7, 1886.0], [76.8, 1887.0], [76.9, 1887.0], [77.0, 1887.0], [77.1, 1887.0], [77.2, 1889.0], [77.3, 1889.0], [77.4, 1889.0], [77.5, 1889.0], [77.6, 1899.0], [77.7, 1899.0], [77.8, 1899.0], [77.9, 1899.0], [78.0, 1901.0], [78.1, 1901.0], [78.2, 1901.0], [78.3, 1901.0], [78.4, 1906.0], [78.5, 1906.0], [78.6, 1906.0], [78.7, 1906.0], [78.8, 1908.0], [78.9, 1908.0], [79.0, 1908.0], [79.1, 1908.0], [79.2, 1910.0], [79.3, 1910.0], [79.4, 1910.0], [79.5, 1910.0], [79.6, 1910.0], [79.7, 1916.0], [79.8, 1916.0], [79.9, 1916.0], [80.0, 1916.0], [80.1, 1916.0], [80.2, 1916.0], [80.3, 1916.0], [80.4, 1918.0], [80.5, 1918.0], [80.6, 1918.0], [80.7, 1918.0], [80.8, 1918.0], [80.9, 1922.0], [81.0, 1922.0], [81.1, 1922.0], [81.2, 1922.0], [81.3, 1923.0], [81.4, 1923.0], [81.5, 1923.0], [81.6, 1923.0], [81.7, 1925.0], [81.8, 1925.0], [81.9, 1925.0], [82.0, 1925.0], [82.1, 1928.0], [82.2, 1928.0], [82.3, 1928.0], [82.4, 1928.0], [82.5, 1931.0], [82.6, 1931.0], [82.7, 1931.0], [82.8, 1931.0], [82.9, 1932.0], [83.0, 1932.0], [83.1, 1932.0], [83.2, 1932.0], [83.3, 1935.0], [83.4, 1935.0], [83.5, 1935.0], [83.6, 1935.0], [83.7, 1937.0], [83.8, 1937.0], [83.9, 1937.0], [84.0, 1937.0], [84.1, 1938.0], [84.2, 1938.0], [84.3, 1938.0], [84.4, 1938.0], [84.5, 1939.0], [84.6, 1939.0], [84.7, 1939.0], [84.8, 1939.0], [84.9, 1940.0], [85.0, 1940.0], [85.1, 1940.0], [85.2, 1940.0], [85.3, 1941.0], [85.4, 1941.0], [85.5, 1941.0], [85.6, 1941.0], [85.7, 1945.0], [85.8, 1945.0], [85.9, 1945.0], [86.0, 1945.0], [86.1, 1946.0], [86.2, 1946.0], [86.3, 1946.0], [86.4, 1946.0], [86.5, 1950.0], [86.6, 1950.0], [86.7, 1950.0], [86.8, 1950.0], [86.9, 1954.0], [87.0, 1954.0], [87.1, 1954.0], [87.2, 1954.0], [87.3, 1956.0], [87.4, 1956.0], [87.5, 1956.0], [87.6, 1956.0], [87.7, 1959.0], [87.8, 1959.0], [87.9, 1959.0], [88.0, 1959.0], [88.1, 1962.0], [88.2, 1962.0], [88.3, 1962.0], [88.4, 1962.0], [88.5, 1965.0], [88.6, 1965.0], [88.7, 1965.0], [88.8, 1965.0], [88.9, 1970.0], [89.0, 1970.0], [89.1, 1970.0], [89.2, 1970.0], [89.3, 1970.0], [89.4, 1970.0], [89.5, 1970.0], [89.6, 1970.0], [89.7, 1974.0], [89.8, 1974.0], [89.9, 1974.0], [90.0, 1974.0], [90.1, 1976.0], [90.2, 1976.0], [90.3, 1976.0], [90.4, 1976.0], [90.5, 1976.0], [90.6, 1976.0], [90.7, 1976.0], [90.8, 1976.0], [90.9, 1977.0], [91.0, 1977.0], [91.1, 1977.0], [91.2, 1977.0], [91.3, 1986.0], [91.4, 1986.0], [91.5, 1986.0], [91.6, 1986.0], [91.7, 1988.0], [91.8, 1988.0], [91.9, 1988.0], [92.0, 1988.0], [92.1, 1988.0], [92.2, 1988.0], [92.3, 1988.0], [92.4, 1988.0], [92.5, 1990.0], [92.6, 1990.0], [92.7, 1990.0], [92.8, 1990.0], [92.9, 2002.0], [93.0, 2002.0], [93.1, 2002.0], [93.2, 2002.0], [93.3, 2003.0], [93.4, 2003.0], [93.5, 2003.0], [93.6, 2003.0], [93.7, 2008.0], [93.8, 2008.0], [93.9, 2008.0], [94.0, 2008.0], [94.1, 2016.0], [94.2, 2016.0], [94.3, 2016.0], [94.4, 2016.0], [94.5, 2021.0], [94.6, 2021.0], [94.7, 2021.0], [94.8, 2021.0], [94.9, 2022.0], [95.0, 2022.0], [95.1, 2022.0], [95.2, 2022.0], [95.3, 2026.0], [95.4, 2026.0], [95.5, 2026.0], [95.6, 2026.0], [95.7, 2029.0], [95.8, 2029.0], [95.9, 2029.0], [96.0, 2029.0], [96.1, 2032.0], [96.2, 2032.0], [96.3, 2032.0], [96.4, 2032.0], [96.5, 2035.0], [96.6, 2035.0], [96.7, 2035.0], [96.8, 2035.0], [96.9, 2039.0], [97.0, 2039.0], [97.1, 2039.0], [97.2, 2039.0], [97.3, 2040.0], [97.4, 2040.0], [97.5, 2040.0], [97.6, 2040.0], [97.7, 2043.0], [97.8, 2043.0], [97.9, 2043.0], [98.0, 2043.0], [98.1, 2043.0], [98.2, 2043.0], [98.3, 2043.0], [98.4, 2043.0], [98.5, 2045.0], [98.6, 2045.0], [98.7, 2045.0], [98.8, 2045.0], [98.9, 2060.0], [99.0, 2060.0], [99.1, 2060.0], [99.2, 2060.0], [99.3, 2062.0], [99.4, 2062.0], [99.5, 2062.0], [99.6, 2062.0], [99.7, 2073.0], [99.8, 2073.0], [99.9, 2073.0], [100.0, 2073.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[0.0, 1925.0], [0.1, 1925.0], [0.2, 1925.0], [0.3, 1925.0], [0.4, 1979.0], [0.5, 1979.0], [0.6, 1979.0], [0.7, 1979.0], [0.8, 1986.0], [0.9, 1986.0], [1.0, 1986.0], [1.1, 1986.0], [1.2, 1986.0], [1.3, 1995.0], [1.4, 1995.0], [1.5, 1995.0], [1.6, 1997.0], [1.7, 1997.0], [1.8, 1997.0], [1.9, 1997.0], [2.0, 1997.0], [2.1, 1997.0], [2.2, 1997.0], [2.3, 1997.0], [2.4, 1997.0], [2.5, 2005.0], [2.6, 2005.0], [2.7, 2005.0], [2.8, 2005.0], [2.9, 2006.0], [3.0, 2006.0], [3.1, 2006.0], [3.2, 2013.0], [3.3, 2013.0], [3.4, 2013.0], [3.5, 2013.0], [3.6, 2014.0], [3.7, 2014.0], [3.8, 2014.0], [3.9, 2014.0], [4.0, 2015.0], [4.1, 2015.0], [4.2, 2015.0], [4.3, 2015.0], [4.4, 2016.0], [4.5, 2016.0], [4.6, 2016.0], [4.7, 2016.0], [4.8, 2016.0], [4.9, 2022.0], [5.0, 2022.0], [5.1, 2022.0], [5.2, 2022.0], [5.3, 2023.0], [5.4, 2023.0], [5.5, 2023.0], [5.6, 2023.0], [5.7, 2026.0], [5.8, 2026.0], [5.9, 2026.0], [6.0, 2026.0], [6.1, 2034.0], [6.2, 2034.0], [6.3, 2034.0], [6.4, 2034.0], [6.5, 2042.0], [6.6, 2042.0], [6.7, 2042.0], [6.8, 2042.0], [6.9, 2049.0], [7.0, 2049.0], [7.1, 2049.0], [7.2, 2049.0], [7.3, 2054.0], [7.4, 2054.0], [7.5, 2054.0], [7.6, 2054.0], [7.7, 2057.0], [7.8, 2057.0], [7.9, 2057.0], [8.0, 2057.0], [8.1, 2060.0], [8.2, 2060.0], [8.3, 2060.0], [8.4, 2060.0], [8.5, 2068.0], [8.6, 2068.0], [8.7, 2068.0], [8.8, 2068.0], [8.9, 2068.0], [9.0, 2068.0], [9.1, 2068.0], [9.2, 2068.0], [9.3, 2072.0], [9.4, 2072.0], [9.5, 2072.0], [9.6, 2072.0], [9.7, 2072.0], [9.8, 2072.0], [9.9, 2072.0], [10.0, 2072.0], [10.1, 2072.0], [10.2, 2072.0], [10.3, 2072.0], [10.4, 2072.0], [10.5, 2073.0], [10.6, 2073.0], [10.7, 2073.0], [10.8, 2073.0], [10.9, 2075.0], [11.0, 2075.0], [11.1, 2075.0], [11.2, 2075.0], [11.3, 2082.0], [11.4, 2082.0], [11.5, 2082.0], [11.6, 2082.0], [11.7, 2084.0], [11.8, 2084.0], [11.9, 2084.0], [12.0, 2084.0], [12.1, 2085.0], [12.2, 2085.0], [12.3, 2085.0], [12.4, 2085.0], [12.5, 2086.0], [12.6, 2086.0], [12.7, 2086.0], [12.8, 2086.0], [12.9, 2087.0], [13.0, 2087.0], [13.1, 2087.0], [13.2, 2087.0], [13.3, 2096.0], [13.4, 2096.0], [13.5, 2096.0], [13.6, 2096.0], [13.7, 2097.0], [13.8, 2097.0], [13.9, 2097.0], [14.0, 2097.0], [14.1, 2098.0], [14.2, 2098.0], [14.3, 2098.0], [14.4, 2098.0], [14.5, 2103.0], [14.6, 2103.0], [14.7, 2103.0], [14.8, 2103.0], [14.9, 2104.0], [15.0, 2104.0], [15.1, 2104.0], [15.2, 2104.0], [15.3, 2105.0], [15.4, 2105.0], [15.5, 2105.0], [15.6, 2105.0], [15.7, 2106.0], [15.8, 2106.0], [15.9, 2106.0], [16.0, 2106.0], [16.1, 2110.0], [16.2, 2110.0], [16.3, 2110.0], [16.4, 2110.0], [16.5, 2111.0], [16.6, 2111.0], [16.7, 2111.0], [16.8, 2111.0], [16.9, 2117.0], [17.0, 2117.0], [17.1, 2117.0], [17.2, 2117.0], [17.3, 2119.0], [17.4, 2119.0], [17.5, 2119.0], [17.6, 2119.0], [17.7, 2119.0], [17.8, 2119.0], [17.9, 2119.0], [18.0, 2119.0], [18.1, 2120.0], [18.2, 2120.0], [18.3, 2120.0], [18.4, 2120.0], [18.5, 2120.0], [18.6, 2120.0], [18.7, 2120.0], [18.8, 2120.0], [18.9, 2128.0], [19.0, 2128.0], [19.1, 2128.0], [19.2, 2128.0], [19.3, 2139.0], [19.4, 2139.0], [19.5, 2139.0], [19.6, 2139.0], [19.7, 2139.0], [19.8, 2139.0], [19.9, 2139.0], [20.0, 2139.0], [20.1, 2145.0], [20.2, 2145.0], [20.3, 2145.0], [20.4, 2145.0], [20.5, 2151.0], [20.6, 2151.0], [20.7, 2151.0], [20.8, 2153.0], [20.9, 2153.0], [21.0, 2153.0], [21.1, 2153.0], [21.2, 2157.0], [21.3, 2157.0], [21.4, 2157.0], [21.5, 2157.0], [21.6, 2170.0], [21.7, 2170.0], [21.8, 2170.0], [21.9, 2170.0], [22.0, 2171.0], [22.1, 2171.0], [22.2, 2171.0], [22.3, 2171.0], [22.4, 2174.0], [22.5, 2174.0], [22.6, 2174.0], [22.7, 2174.0], [22.8, 2175.0], [22.9, 2175.0], [23.0, 2175.0], [23.1, 2175.0], [23.2, 2180.0], [23.3, 2180.0], [23.4, 2180.0], [23.5, 2180.0], [23.6, 2181.0], [23.7, 2181.0], [23.8, 2181.0], [23.9, 2181.0], [24.0, 2185.0], [24.1, 2185.0], [24.2, 2185.0], [24.3, 2185.0], [24.4, 2187.0], [24.5, 2187.0], [24.6, 2187.0], [24.7, 2187.0], [24.8, 2188.0], [24.9, 2188.0], [25.0, 2188.0], [25.1, 2188.0], [25.2, 2190.0], [25.3, 2190.0], [25.4, 2190.0], [25.5, 2190.0], [25.6, 2195.0], [25.7, 2195.0], [25.8, 2195.0], [25.9, 2195.0], [26.0, 2208.0], [26.1, 2208.0], [26.2, 2208.0], [26.3, 2208.0], [26.4, 2213.0], [26.5, 2213.0], [26.6, 2213.0], [26.7, 2213.0], [26.8, 2219.0], [26.9, 2219.0], [27.0, 2219.0], [27.1, 2219.0], [27.2, 2222.0], [27.3, 2222.0], [27.4, 2222.0], [27.5, 2222.0], [27.6, 2232.0], [27.7, 2232.0], [27.8, 2232.0], [27.9, 2232.0], [28.0, 2234.0], [28.1, 2234.0], [28.2, 2234.0], [28.3, 2234.0], [28.4, 2242.0], [28.5, 2242.0], [28.6, 2242.0], [28.7, 2242.0], [28.8, 2244.0], [28.9, 2244.0], [29.0, 2244.0], [29.1, 2244.0], [29.2, 2254.0], [29.3, 2254.0], [29.4, 2254.0], [29.5, 2254.0], [29.6, 2255.0], [29.7, 2255.0], [29.8, 2255.0], [29.9, 2255.0], [30.0, 2261.0], [30.1, 2261.0], [30.2, 2261.0], [30.3, 2261.0], [30.4, 2264.0], [30.5, 2264.0], [30.6, 2264.0], [30.7, 2264.0], [30.8, 2269.0], [30.9, 2269.0], [31.0, 2269.0], [31.1, 2269.0], [31.2, 2269.0], [31.3, 2269.0], [31.4, 2269.0], [31.5, 2269.0], [31.6, 2279.0], [31.7, 2279.0], [31.8, 2279.0], [31.9, 2279.0], [32.0, 2280.0], [32.1, 2280.0], [32.2, 2280.0], [32.3, 2280.0], [32.4, 2281.0], [32.5, 2281.0], [32.6, 2281.0], [32.7, 2281.0], [32.8, 2283.0], [32.9, 2283.0], [33.0, 2283.0], [33.1, 2283.0], [33.2, 2284.0], [33.3, 2284.0], [33.4, 2284.0], [33.5, 2284.0], [33.6, 2286.0], [33.7, 2286.0], [33.8, 2286.0], [33.9, 2286.0], [34.0, 2293.0], [34.1, 2293.0], [34.2, 2293.0], [34.3, 2293.0], [34.4, 2299.0], [34.5, 2299.0], [34.6, 2299.0], [34.7, 2299.0], [34.8, 2300.0], [34.9, 2300.0], [35.0, 2300.0], [35.1, 2300.0], [35.2, 2303.0], [35.3, 2303.0], [35.4, 2303.0], [35.5, 2303.0], [35.6, 2307.0], [35.7, 2307.0], [35.8, 2307.0], [35.9, 2307.0], [36.0, 2308.0], [36.1, 2308.0], [36.2, 2308.0], [36.3, 2308.0], [36.4, 2309.0], [36.5, 2309.0], [36.6, 2309.0], [36.7, 2309.0], [36.8, 2311.0], [36.9, 2311.0], [37.0, 2311.0], [37.1, 2311.0], [37.2, 2317.0], [37.3, 2317.0], [37.4, 2317.0], [37.5, 2317.0], [37.6, 2319.0], [37.7, 2319.0], [37.8, 2319.0], [37.9, 2319.0], [38.0, 2319.0], [38.1, 2319.0], [38.2, 2319.0], [38.3, 2319.0], [38.4, 2323.0], [38.5, 2323.0], [38.6, 2323.0], [38.7, 2323.0], [38.8, 2325.0], [38.9, 2325.0], [39.0, 2325.0], [39.1, 2325.0], [39.2, 2327.0], [39.3, 2327.0], [39.4, 2327.0], [39.5, 2327.0], [39.6, 2329.0], [39.7, 2329.0], [39.8, 2329.0], [39.9, 2329.0], [40.0, 2330.0], [40.1, 2330.0], [40.2, 2330.0], [40.3, 2330.0], [40.4, 2334.0], [40.5, 2334.0], [40.6, 2334.0], [40.7, 2334.0], [40.8, 2335.0], [40.9, 2335.0], [41.0, 2335.0], [41.1, 2335.0], [41.2, 2336.0], [41.3, 2336.0], [41.4, 2336.0], [41.5, 2336.0], [41.6, 2339.0], [41.7, 2339.0], [41.8, 2339.0], [41.9, 2339.0], [42.0, 2340.0], [42.1, 2340.0], [42.2, 2340.0], [42.3, 2340.0], [42.4, 2347.0], [42.5, 2347.0], [42.6, 2347.0], [42.7, 2347.0], [42.8, 2351.0], [42.9, 2351.0], [43.0, 2351.0], [43.1, 2351.0], [43.2, 2355.0], [43.3, 2355.0], [43.4, 2355.0], [43.5, 2355.0], [43.6, 2371.0], [43.7, 2371.0], [43.8, 2371.0], [43.9, 2371.0], [44.0, 2372.0], [44.1, 2372.0], [44.2, 2372.0], [44.3, 2372.0], [44.4, 2376.0], [44.5, 2376.0], [44.6, 2376.0], [44.7, 2376.0], [44.8, 2377.0], [44.9, 2377.0], [45.0, 2377.0], [45.1, 2377.0], [45.2, 2377.0], [45.3, 2377.0], [45.4, 2377.0], [45.5, 2377.0], [45.6, 2381.0], [45.7, 2381.0], [45.8, 2381.0], [45.9, 2381.0], [46.0, 2383.0], [46.1, 2383.0], [46.2, 2383.0], [46.3, 2383.0], [46.4, 2383.0], [46.5, 2383.0], [46.6, 2383.0], [46.7, 2383.0], [46.8, 2386.0], [46.9, 2386.0], [47.0, 2386.0], [47.1, 2386.0], [47.2, 2387.0], [47.3, 2387.0], [47.4, 2387.0], [47.5, 2387.0], [47.6, 2390.0], [47.7, 2390.0], [47.8, 2390.0], [47.9, 2390.0], [48.0, 2397.0], [48.1, 2397.0], [48.2, 2397.0], [48.3, 2397.0], [48.4, 2401.0], [48.5, 2401.0], [48.6, 2401.0], [48.7, 2401.0], [48.8, 2402.0], [48.9, 2402.0], [49.0, 2402.0], [49.1, 2402.0], [49.2, 2403.0], [49.3, 2403.0], [49.4, 2403.0], [49.5, 2403.0], [49.6, 2413.0], [49.7, 2413.0], [49.8, 2413.0], [49.9, 2413.0], [50.0, 2416.0], [50.1, 2416.0], [50.2, 2416.0], [50.3, 2416.0], [50.4, 2430.0], [50.5, 2430.0], [50.6, 2430.0], [50.7, 2430.0], [50.8, 2432.0], [50.9, 2432.0], [51.0, 2432.0], [51.1, 2432.0], [51.2, 2432.0], [51.3, 2432.0], [51.4, 2432.0], [51.5, 2432.0], [51.6, 2434.0], [51.7, 2434.0], [51.8, 2434.0], [51.9, 2434.0], [52.0, 2444.0], [52.1, 2444.0], [52.2, 2444.0], [52.3, 2444.0], [52.4, 2451.0], [52.5, 2451.0], [52.6, 2451.0], [52.7, 2451.0], [52.8, 2454.0], [52.9, 2454.0], [53.0, 2454.0], [53.1, 2454.0], [53.2, 2455.0], [53.3, 2455.0], [53.4, 2455.0], [53.5, 2455.0], [53.6, 2458.0], [53.7, 2458.0], [53.8, 2458.0], [53.9, 2458.0], [54.0, 2465.0], [54.1, 2465.0], [54.2, 2465.0], [54.3, 2465.0], [54.4, 2467.0], [54.5, 2467.0], [54.6, 2467.0], [54.7, 2467.0], [54.8, 2467.0], [54.9, 2467.0], [55.0, 2467.0], [55.1, 2467.0], [55.2, 2473.0], [55.3, 2473.0], [55.4, 2473.0], [55.5, 2473.0], [55.6, 2474.0], [55.7, 2474.0], [55.8, 2474.0], [55.9, 2474.0], [56.0, 2477.0], [56.1, 2477.0], [56.2, 2477.0], [56.3, 2477.0], [56.4, 2477.0], [56.5, 2477.0], [56.6, 2477.0], [56.7, 2477.0], [56.8, 2478.0], [56.9, 2478.0], [57.0, 2478.0], [57.1, 2478.0], [57.2, 2486.0], [57.3, 2486.0], [57.4, 2486.0], [57.5, 2486.0], [57.6, 2487.0], [57.7, 2487.0], [57.8, 2487.0], [57.9, 2487.0], [58.0, 2490.0], [58.1, 2490.0], [58.2, 2490.0], [58.3, 2490.0], [58.4, 2490.0], [58.5, 2490.0], [58.6, 2490.0], [58.7, 2490.0], [58.8, 2492.0], [58.9, 2492.0], [59.0, 2492.0], [59.1, 2492.0], [59.2, 2494.0], [59.3, 2494.0], [59.4, 2494.0], [59.5, 2494.0], [59.6, 2499.0], [59.7, 2499.0], [59.8, 2499.0], [59.9, 2499.0], [60.0, 2501.0], [60.1, 2501.0], [60.2, 2501.0], [60.3, 2501.0], [60.4, 2503.0], [60.5, 2503.0], [60.6, 2503.0], [60.7, 2503.0], [60.8, 2505.0], [60.9, 2505.0], [61.0, 2505.0], [61.1, 2505.0], [61.2, 2509.0], [61.3, 2509.0], [61.4, 2509.0], [61.5, 2509.0], [61.6, 2511.0], [61.7, 2511.0], [61.8, 2511.0], [61.9, 2511.0], [62.0, 2511.0], [62.1, 2511.0], [62.2, 2511.0], [62.3, 2511.0], [62.4, 2511.0], [62.5, 2511.0], [62.6, 2511.0], [62.7, 2511.0], [62.8, 2514.0], [62.9, 2514.0], [63.0, 2514.0], [63.1, 2514.0], [63.2, 2514.0], [63.3, 2514.0], [63.4, 2514.0], [63.5, 2514.0], [63.6, 2518.0], [63.7, 2518.0], [63.8, 2518.0], [63.9, 2518.0], [64.0, 2521.0], [64.1, 2521.0], [64.2, 2521.0], [64.3, 2521.0], [64.4, 2522.0], [64.5, 2522.0], [64.6, 2522.0], [64.7, 2522.0], [64.8, 2524.0], [64.9, 2524.0], [65.0, 2524.0], [65.1, 2524.0], [65.2, 2527.0], [65.3, 2527.0], [65.4, 2527.0], [65.5, 2527.0], [65.6, 2529.0], [65.7, 2529.0], [65.8, 2529.0], [65.9, 2529.0], [66.0, 2530.0], [66.1, 2530.0], [66.2, 2530.0], [66.3, 2530.0], [66.4, 2535.0], [66.5, 2535.0], [66.6, 2535.0], [66.7, 2535.0], [66.8, 2536.0], [66.9, 2536.0], [67.0, 2536.0], [67.1, 2536.0], [67.2, 2539.0], [67.3, 2539.0], [67.4, 2539.0], [67.5, 2539.0], [67.6, 2540.0], [67.7, 2540.0], [67.8, 2540.0], [67.9, 2540.0], [68.0, 2544.0], [68.1, 2544.0], [68.2, 2544.0], [68.3, 2544.0], [68.4, 2548.0], [68.5, 2548.0], [68.6, 2548.0], [68.7, 2548.0], [68.8, 2553.0], [68.9, 2553.0], [69.0, 2553.0], [69.1, 2553.0], [69.2, 2556.0], [69.3, 2556.0], [69.4, 2556.0], [69.5, 2556.0], [69.6, 2558.0], [69.7, 2558.0], [69.8, 2558.0], [69.9, 2558.0], [70.0, 2560.0], [70.1, 2560.0], [70.2, 2560.0], [70.3, 2560.0], [70.4, 2562.0], [70.5, 2562.0], [70.6, 2562.0], [70.7, 2562.0], [70.8, 2563.0], [70.9, 2563.0], [71.0, 2563.0], [71.1, 2563.0], [71.2, 2569.0], [71.3, 2569.0], [71.4, 2569.0], [71.5, 2569.0], [71.6, 2571.0], [71.7, 2571.0], [71.8, 2571.0], [71.9, 2571.0], [72.0, 2572.0], [72.1, 2572.0], [72.2, 2572.0], [72.3, 2572.0], [72.4, 2574.0], [72.5, 2574.0], [72.6, 2574.0], [72.7, 2574.0], [72.8, 2574.0], [72.9, 2574.0], [73.0, 2574.0], [73.1, 2574.0], [73.2, 2574.0], [73.3, 2574.0], [73.4, 2574.0], [73.5, 2574.0], [73.6, 2575.0], [73.7, 2575.0], [73.8, 2575.0], [73.9, 2575.0], [74.0, 2579.0], [74.1, 2579.0], [74.2, 2579.0], [74.3, 2579.0], [74.4, 2583.0], [74.5, 2583.0], [74.6, 2583.0], [74.7, 2583.0], [74.8, 2583.0], [74.9, 2583.0], [75.0, 2583.0], [75.1, 2583.0], [75.2, 2584.0], [75.3, 2584.0], [75.4, 2584.0], [75.5, 2584.0], [75.6, 2588.0], [75.7, 2588.0], [75.8, 2588.0], [75.9, 2588.0], [76.0, 2589.0], [76.1, 2589.0], [76.2, 2589.0], [76.3, 2589.0], [76.4, 2589.0], [76.5, 2589.0], [76.6, 2589.0], [76.7, 2589.0], [76.8, 2591.0], [76.9, 2591.0], [77.0, 2591.0], [77.1, 2591.0], [77.2, 2593.0], [77.3, 2593.0], [77.4, 2593.0], [77.5, 2593.0], [77.6, 2593.0], [77.7, 2594.0], [77.8, 2594.0], [77.9, 2594.0], [78.0, 2594.0], [78.1, 2594.0], [78.2, 2594.0], [78.3, 2594.0], [78.4, 2594.0], [78.5, 2594.0], [78.6, 2594.0], [78.7, 2594.0], [78.8, 2594.0], [78.9, 2602.0], [79.0, 2602.0], [79.1, 2602.0], [79.2, 2602.0], [79.3, 2602.0], [79.4, 2602.0], [79.5, 2602.0], [79.6, 2602.0], [79.7, 2602.0], [79.8, 2602.0], [79.9, 2602.0], [80.0, 2602.0], [80.1, 2602.0], [80.2, 2602.0], [80.3, 2602.0], [80.4, 2604.0], [80.5, 2604.0], [80.6, 2604.0], [80.7, 2604.0], [80.8, 2604.0], [80.9, 2605.0], [81.0, 2605.0], [81.1, 2605.0], [81.2, 2605.0], [81.3, 2605.0], [81.4, 2605.0], [81.5, 2605.0], [81.6, 2605.0], [81.7, 2611.0], [81.8, 2611.0], [81.9, 2611.0], [82.0, 2611.0], [82.1, 2611.0], [82.2, 2611.0], [82.3, 2611.0], [82.4, 2613.0], [82.5, 2613.0], [82.6, 2613.0], [82.7, 2613.0], [82.8, 2613.0], [82.9, 2618.0], [83.0, 2618.0], [83.1, 2618.0], [83.2, 2618.0], [83.3, 2627.0], [83.4, 2627.0], [83.5, 2627.0], [83.6, 2627.0], [83.7, 2628.0], [83.8, 2628.0], [83.9, 2628.0], [84.0, 2628.0], [84.1, 2631.0], [84.2, 2631.0], [84.3, 2631.0], [84.4, 2631.0], [84.5, 2633.0], [84.6, 2633.0], [84.7, 2633.0], [84.8, 2633.0], [84.9, 2634.0], [85.0, 2634.0], [85.1, 2634.0], [85.2, 2634.0], [85.3, 2636.0], [85.4, 2636.0], [85.5, 2636.0], [85.6, 2636.0], [85.7, 2636.0], [85.8, 2636.0], [85.9, 2636.0], [86.0, 2636.0], [86.1, 2636.0], [86.2, 2636.0], [86.3, 2636.0], [86.4, 2636.0], [86.5, 2636.0], [86.6, 2636.0], [86.7, 2636.0], [86.8, 2636.0], [86.9, 2636.0], [87.0, 2636.0], [87.1, 2636.0], [87.2, 2636.0], [87.3, 2638.0], [87.4, 2638.0], [87.5, 2638.0], [87.6, 2638.0], [87.7, 2638.0], [87.8, 2638.0], [87.9, 2638.0], [88.0, 2638.0], [88.1, 2640.0], [88.2, 2640.0], [88.3, 2640.0], [88.4, 2640.0], [88.5, 2640.0], [88.6, 2640.0], [88.7, 2640.0], [88.8, 2640.0], [88.9, 2641.0], [89.0, 2641.0], [89.1, 2641.0], [89.2, 2641.0], [89.3, 2645.0], [89.4, 2645.0], [89.5, 2645.0], [89.6, 2645.0], [89.7, 2648.0], [89.8, 2648.0], [89.9, 2648.0], [90.0, 2648.0], [90.1, 2649.0], [90.2, 2649.0], [90.3, 2649.0], [90.4, 2649.0], [90.5, 2651.0], [90.6, 2651.0], [90.7, 2651.0], [90.8, 2651.0], [90.9, 2656.0], [91.0, 2656.0], [91.1, 2656.0], [91.2, 2656.0], [91.3, 2656.0], [91.4, 2656.0], [91.5, 2656.0], [91.6, 2656.0], [91.7, 2666.0], [91.8, 2666.0], [91.9, 2666.0], [92.0, 2666.0], [92.1, 2673.0], [92.2, 2673.0], [92.3, 2673.0], [92.4, 2673.0], [92.5, 2674.0], [92.6, 2674.0], [92.7, 2674.0], [92.8, 2674.0], [92.9, 2688.0], [93.0, 2688.0], [93.1, 2688.0], [93.2, 2688.0], [93.3, 2689.0], [93.4, 2689.0], [93.5, 2689.0], [93.6, 2689.0], [93.7, 2696.0], [93.8, 2696.0], [93.9, 2696.0], [94.0, 2696.0], [94.1, 2719.0], [94.2, 2719.0], [94.3, 2719.0], [94.4, 2719.0], [94.5, 2810.0], [94.6, 2810.0], [94.7, 2810.0], [94.8, 2810.0], [94.9, 2829.0], [95.0, 2829.0], [95.1, 2829.0], [95.2, 2829.0], [95.3, 2840.0], [95.4, 2840.0], [95.5, 2840.0], [95.6, 2840.0], [95.7, 2843.0], [95.8, 2843.0], [95.9, 2843.0], [96.0, 2843.0], [96.1, 2843.0], [96.2, 2843.0], [96.3, 2843.0], [96.4, 2843.0], [96.5, 2844.0], [96.6, 2844.0], [96.7, 2844.0], [96.8, 2844.0], [96.9, 2853.0], [97.0, 2853.0], [97.1, 2853.0], [97.2, 2853.0], [97.3, 2886.0], [97.4, 2886.0], [97.5, 2886.0], [97.6, 2886.0], [97.7, 2888.0], [97.8, 2888.0], [97.9, 2888.0], [98.0, 2888.0], [98.1, 2892.0], [98.2, 2892.0], [98.3, 2892.0], [98.4, 2892.0], [98.5, 2893.0], [98.6, 2893.0], [98.7, 2893.0], [98.8, 2893.0], [98.9, 2895.0], [99.0, 2895.0], [99.1, 2895.0], [99.2, 2895.0], [99.3, 2898.0], [99.4, 2898.0], [99.5, 2898.0], [99.6, 2898.0], [99.7, 2900.0], [99.8, 2900.0], [99.9, 2900.0], [100.0, 2900.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 120.0, "series": [{"data": [[1100.0, 1.0], [300.0, 103.0], [1600.0, 4.0], [200.0, 116.0], [100.0, 1.0], [1700.0, 4.0], [1800.0, 10.0], [1900.0, 4.0], [2000.0, 6.0], [500.0, 1.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[0.0, 3.0], [2300.0, 4.0], [300.0, 17.0], [600.0, 1.0], [2400.0, 11.0], [700.0, 18.0], [1500.0, 1.0], [400.0, 45.0], [100.0, 120.0], [200.0, 17.0], [900.0, 1.0], [500.0, 12.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1500.0, 23.0], [100.0, 43.0], [400.0, 2.0], [1600.0, 39.0], [1700.0, 49.0], [1800.0, 39.0], [1900.0, 37.0], [2000.0, 18.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[2100.0, 29.0], [2200.0, 22.0], [2300.0, 34.0], [2400.0, 29.0], [2500.0, 47.0], [2600.0, 38.0], [2700.0, 1.0], [2800.0, 13.0], [2900.0, 1.0], [1900.0, 6.0], [2000.0, 30.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 34.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 467.0, "series": [{"data": [[0.0, 467.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 34.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 249.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 178.03600000000006, "minX": 1.60876266E12, "maxY": 178.03600000000006, "series": [{"data": [[1.60876266E12, 178.03600000000006]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876266E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 124.0, "minX": 2.0, "maxY": 2892.0, "series": [{"data": [[2.0, 336.0], [7.0, 326.2], [9.0, 322.5], [11.0, 287.5], [12.0, 339.0], [13.0, 309.0], [16.0, 303.0], [20.0, 292.5], [21.0, 302.0], [22.0, 304.0], [23.0, 342.0], [24.0, 300.0], [25.0, 315.0], [27.0, 293.5], [28.0, 251.0], [31.0, 325.0], [33.0, 314.75], [35.0, 264.5], [36.0, 250.0], [39.0, 315.0], [41.0, 270.0], [40.0, 325.0], [43.0, 264.0], [42.0, 333.0], [46.0, 303.0], [48.0, 315.5], [53.0, 266.0], [52.0, 296.5], [55.0, 303.0], [57.0, 273.5], [59.0, 359.0], [58.0, 359.0], [60.0, 298.0], [62.0, 331.5], [66.0, 341.0], [65.0, 338.3333333333333], [71.0, 319.0], [70.0, 306.0], [69.0, 326.0], [68.0, 339.5], [75.0, 296.0], [74.0, 297.0], [73.0, 307.0], [72.0, 314.0], [79.0, 313.0], [83.0, 314.0], [82.0, 344.0], [81.0, 309.6], [87.0, 348.0], [86.0, 300.0], [91.0, 361.5], [89.0, 356.0], [95.0, 365.75], [98.0, 360.5], [96.0, 373.0], [103.0, 363.5], [101.0, 349.0], [107.0, 203.0], [106.0, 210.0], [105.0, 197.5], [110.0, 212.0], [109.0, 224.5], [115.0, 224.6], [119.0, 223.66666666666666], [116.0, 216.0], [121.0, 227.5], [127.0, 323.5], [124.0, 266.3333333333333], [134.0, 295.25], [130.0, 283.0], [128.0, 309.0], [142.0, 254.5], [140.0, 251.0], [139.0, 242.75], [136.0, 233.0], [150.0, 333.25], [146.0, 239.5], [159.0, 303.25], [155.0, 333.0], [154.0, 334.6666666666667], [153.0, 335.0], [167.0, 300.0], [165.0, 310.5], [164.0, 309.0], [160.0, 296.0], [175.0, 308.57142857142856], [168.0, 310.5], [181.0, 211.5], [179.0, 228.33333333333334], [176.0, 231.0], [190.0, 241.5], [186.0, 234.5], [184.0, 232.66666666666666], [198.0, 271.6666666666667], [195.0, 276.0], [193.0, 252.0], [192.0, 268.5], [205.0, 266.0], [204.0, 284.0], [203.0, 256.0], [202.0, 261.0], [201.0, 290.0], [214.0, 269.0], [213.0, 269.5], [209.0, 283.5], [208.0, 265.5], [222.0, 1141.0], [221.0, 511.0], [220.0, 264.6666666666667], [217.0, 266.0], [229.0, 1960.3333333333333], [226.0, 1703.0], [225.0, 1705.3333333333333], [239.0, 1656.0], [238.0, 1666.0], [237.0, 1862.0], [236.0, 1774.0], [234.0, 1863.5], [232.0, 2025.6666666666667], [246.0, 2027.0], [244.0, 1740.0], [242.0, 1843.6666666666667], [250.0, 1995.0], [249.0, 1996.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[126.42399999999999, 472.29999999999956]], "isOverall": false, "label": "GET Home-Aggregated", "isController": false}, {"data": [[162.0, 368.0], [163.0, 372.0], [165.0, 366.0], [166.0, 373.0], [167.0, 375.0], [211.0, 573.6666666666666], [212.0, 569.5], [213.0, 572.6666666666666], [214.0, 574.0], [215.0, 569.0], [216.0, 568.0], [221.0, 2494.0], [229.0, 2476.6666666666665], [226.0, 2479.0], [225.0, 2479.5], [238.0, 134.5], [237.0, 133.58333333333331], [234.0, 125.0], [233.0, 124.0], [232.0, 218.4814814814815], [246.0, 198.84848484848482], [244.0, 127.0], [242.0, 2433.0], [250.0, 424.42957746478874], [249.0, 2391.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[241.18000000000004, 428.13200000000023]], "isOverall": false, "label": "POST Login-Aggregated", "isController": false}, {"data": [[66.0, 155.85714285714286], [67.0, 160.85714285714286], [69.0, 166.125], [70.0, 164.25], [71.0, 138.33333333333334], [72.0, 183.0], [73.0, 142.12500000000003], [169.0, 497.0], [59.0, 125.0], [62.0, 136.25], [250.0, 1788.590243902439]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[218.10800000000003, 1497.0519999999995]], "isOverall": false, "label": "GET Login-Aggregated", "isController": false}, {"data": [[2.0, 2342.0], [7.0, 2394.0], [9.0, 2183.0], [11.0, 2467.5], [12.0, 2208.0], [13.0, 2119.0], [16.0, 2514.3333333333335], [20.0, 2500.5], [21.0, 2325.0], [22.0, 2072.0], [23.0, 2286.0], [24.0, 2026.0], [25.0, 2892.0], [27.0, 2059.5], [28.0, 2888.0], [31.0, 2006.0], [33.0, 2304.25], [35.0, 2170.0], [36.0, 2886.0], [39.0, 2117.6666666666665], [41.0, 2054.0], [40.0, 2022.0], [43.0, 2153.0], [42.0, 2111.0], [46.0, 2405.6666666666665], [48.0, 2471.5], [53.0, 2377.0], [52.0, 2373.25], [55.0, 2122.0], [57.0, 2164.5], [59.0, 2544.0], [58.0, 2594.0], [60.0, 2139.0], [62.0, 2333.0], [66.0, 2430.0], [65.0, 2403.0], [71.0, 2300.0], [70.0, 2451.0], [69.0, 1997.0], [68.0, 2307.0], [75.0, 2151.0], [74.0, 2016.0], [73.0, 2104.0], [72.0, 2075.0], [79.0, 2005.0], [83.0, 2174.0], [82.0, 2264.0], [81.0, 2432.4], [87.0, 2372.0], [86.0, 2280.3333333333335], [91.0, 2269.0], [89.0, 2416.5], [95.0, 2508.75], [98.0, 2562.5], [96.0, 2244.0], [103.0, 2633.5], [101.0, 2440.0], [107.0, 2840.0], [106.0, 2023.0], [105.0, 2843.0], [110.0, 2829.0], [109.0, 2224.0], [115.0, 2157.4], [119.0, 2195.6666666666665], [116.0, 2082.0], [121.0, 2310.0], [127.0, 2457.0], [124.0, 2356.3333333333335], [134.0, 2304.5], [130.0, 2580.5], [128.0, 2252.0], [142.0, 2021.0], [140.0, 2014.0], [139.0, 2067.5], [136.0, 2157.0], [150.0, 2622.75], [146.0, 2102.75], [159.0, 2508.25], [155.0, 2583.0], [154.0, 2584.6666666666665], [153.0, 2656.0], [167.0, 2584.0], [165.0, 2537.0], [164.0, 2591.0], [160.0, 2477.0], [175.0, 2543.285714285714], [168.0, 2555.5], [181.0, 2215.0], [179.0, 2293.3333333333335], [176.0, 2279.0], [190.0, 2338.0], [186.0, 2240.5], [184.0, 2427.0], [198.0, 2535.3333333333335], [195.0, 2547.0], [193.0, 2413.0], [192.0, 2507.0], [205.0, 2096.0], [204.0, 2524.0], [203.0, 2308.0], [202.0, 2575.0], [201.0, 2439.3333333333335], [214.0, 2594.0], [213.0, 2588.5], [209.0, 2480.0], [208.0, 2605.5], [222.0, 2579.0], [221.0, 2593.0], [220.0, 2470.0], [217.0, 2462.6666666666665], [229.0, 2616.0], [226.0, 2636.0], [225.0, 2621.6666666666665], [239.0, 2574.0], [238.0, 2591.0], [237.0, 2602.0], [236.0, 2603.5], [234.0, 2603.5], [232.0, 2626.6666666666665], [246.0, 2537.5], [244.0, 2533.5], [242.0, 2578.0], [250.0, 2511.0], [249.0, 2511.3333333333335]], "isOverall": false, "label": "Login", "isController": true}, {"data": [[126.42399999999999, 2397.484000000001]], "isOverall": false, "label": "Login-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 250.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7479.166666666667, "minX": 1.60876266E12, "maxY": 68693.16666666667, "series": [{"data": [[1.60876266E12, 68693.16666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60876266E12, 7479.166666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876266E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 428.13200000000023, "minX": 1.60876266E12, "maxY": 2397.484000000001, "series": [{"data": [[1.60876266E12, 472.29999999999956]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60876266E12, 428.13200000000023]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60876266E12, 1497.0519999999995]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60876266E12, 2397.484000000001]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876266E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 428.11599999999993, "minX": 1.60876266E12, "maxY": 2397.1520000000005, "series": [{"data": [[1.60876266E12, 472.04400000000004]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60876266E12, 428.11599999999993]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60876266E12, 1496.992]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60876266E12, 2397.1520000000005]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876266E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.60876266E12, "maxY": 35.16800000000003, "series": [{"data": [[1.60876266E12, 0.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60876266E12, 0.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60876266E12, 35.16799999999999]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60876266E12, 35.16800000000003]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876266E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 95.0, "minX": 1.60876266E12, "maxY": 2494.0, "series": [{"data": [[1.60876266E12, 2494.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60876266E12, 103.5179996418953]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60876266E12, 104.43490007162094]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60876266E12, 104.13449991047382]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.60876266E12, 95.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60876266E12, 341.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876266E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 160.5, "minX": 20.0, "maxY": 1595.0, "series": [{"data": [[20.0, 575.0], [54.0, 160.5], [223.0, 297.0], [453.0, 1595.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 453.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 160.5, "minX": 20.0, "maxY": 1595.0, "series": [{"data": [[20.0, 575.0], [54.0, 160.5], [223.0, 296.0], [453.0, 1595.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 453.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 12.5, "minX": 1.60876266E12, "maxY": 12.5, "series": [{"data": [[1.60876266E12, 12.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876266E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 12.5, "minX": 1.60876266E12, "maxY": 12.5, "series": [{"data": [[1.60876266E12, 12.5]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876266E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 4.166666666666667, "minX": 1.60876266E12, "maxY": 4.166666666666667, "series": [{"data": [[1.60876266E12, 4.166666666666667]], "isOverall": false, "label": "GET Home-success", "isController": false}, {"data": [[1.60876266E12, 4.166666666666667]], "isOverall": false, "label": "GET Login-success", "isController": false}, {"data": [[1.60876266E12, 4.166666666666667]], "isOverall": false, "label": "POST Login-success", "isController": false}, {"data": [[1.60876266E12, 4.166666666666667]], "isOverall": false, "label": "Login-success", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876266E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.60876266E12, "maxY": 16.666666666666668, "series": [{"data": [[1.60876266E12, 16.666666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876266E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

