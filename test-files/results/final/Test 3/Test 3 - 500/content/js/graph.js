/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 122.0, "minX": 0.0, "maxY": 3475.0, "series": [{"data": [[0.0, 316.0], [0.1, 316.0], [0.2, 335.0], [0.3, 335.0], [0.4, 367.0], [0.5, 367.0], [0.6, 367.0], [0.7, 368.0], [0.8, 419.0], [0.9, 419.0], [1.0, 421.0], [1.1, 421.0], [1.2, 425.0], [1.3, 425.0], [1.4, 425.0], [1.5, 425.0], [1.6, 428.0], [1.7, 428.0], [1.8, 429.0], [1.9, 429.0], [2.0, 430.0], [2.1, 430.0], [2.2, 431.0], [2.3, 431.0], [2.4, 431.0], [2.5, 432.0], [2.6, 432.0], [2.7, 432.0], [2.8, 432.0], [2.9, 433.0], [3.0, 433.0], [3.1, 434.0], [3.2, 434.0], [3.3, 435.0], [3.4, 435.0], [3.5, 440.0], [3.6, 440.0], [3.7, 440.0], [3.8, 440.0], [3.9, 441.0], [4.0, 441.0], [4.1, 441.0], [4.2, 441.0], [4.3, 441.0], [4.4, 441.0], [4.5, 441.0], [4.6, 441.0], [4.7, 443.0], [4.8, 443.0], [4.9, 444.0], [5.0, 444.0], [5.1, 444.0], [5.2, 444.0], [5.3, 445.0], [5.4, 445.0], [5.5, 445.0], [5.6, 445.0], [5.7, 448.0], [5.8, 448.0], [5.9, 448.0], [6.0, 448.0], [6.1, 448.0], [6.2, 448.0], [6.3, 450.0], [6.4, 450.0], [6.5, 450.0], [6.6, 450.0], [6.7, 451.0], [6.8, 451.0], [6.9, 452.0], [7.0, 452.0], [7.1, 452.0], [7.2, 452.0], [7.3, 454.0], [7.4, 454.0], [7.5, 455.0], [7.6, 455.0], [7.7, 456.0], [7.8, 456.0], [7.9, 457.0], [8.0, 457.0], [8.1, 457.0], [8.2, 457.0], [8.3, 457.0], [8.4, 457.0], [8.5, 458.0], [8.6, 458.0], [8.7, 458.0], [8.8, 458.0], [8.9, 458.0], [9.0, 458.0], [9.1, 458.0], [9.2, 458.0], [9.3, 459.0], [9.4, 459.0], [9.5, 460.0], [9.6, 460.0], [9.7, 460.0], [9.8, 460.0], [9.9, 462.0], [10.0, 462.0], [10.1, 462.0], [10.2, 462.0], [10.3, 462.0], [10.4, 462.0], [10.5, 462.0], [10.6, 462.0], [10.7, 463.0], [10.8, 463.0], [10.9, 463.0], [11.0, 463.0], [11.1, 465.0], [11.2, 465.0], [11.3, 467.0], [11.4, 467.0], [11.5, 467.0], [11.6, 467.0], [11.7, 468.0], [11.8, 468.0], [11.9, 468.0], [12.0, 468.0], [12.1, 470.0], [12.2, 470.0], [12.3, 470.0], [12.4, 470.0], [12.5, 470.0], [12.6, 470.0], [12.7, 471.0], [12.8, 471.0], [12.9, 472.0], [13.0, 472.0], [13.1, 473.0], [13.2, 473.0], [13.3, 473.0], [13.4, 473.0], [13.5, 473.0], [13.6, 473.0], [13.7, 473.0], [13.8, 473.0], [13.9, 473.0], [14.0, 473.0], [14.1, 474.0], [14.2, 474.0], [14.3, 474.0], [14.4, 474.0], [14.5, 474.0], [14.6, 474.0], [14.7, 475.0], [14.8, 475.0], [14.9, 475.0], [15.0, 475.0], [15.1, 476.0], [15.2, 476.0], [15.3, 476.0], [15.4, 476.0], [15.5, 476.0], [15.6, 476.0], [15.7, 476.0], [15.8, 476.0], [15.9, 477.0], [16.0, 477.0], [16.1, 479.0], [16.2, 479.0], [16.3, 479.0], [16.4, 479.0], [16.5, 479.0], [16.6, 479.0], [16.7, 479.0], [16.8, 479.0], [16.9, 480.0], [17.0, 480.0], [17.1, 480.0], [17.2, 480.0], [17.3, 481.0], [17.4, 481.0], [17.5, 481.0], [17.6, 481.0], [17.7, 481.0], [17.8, 481.0], [17.9, 482.0], [18.0, 482.0], [18.1, 483.0], [18.2, 483.0], [18.3, 483.0], [18.4, 483.0], [18.5, 483.0], [18.6, 483.0], [18.7, 484.0], [18.8, 484.0], [18.9, 484.0], [19.0, 484.0], [19.1, 486.0], [19.2, 486.0], [19.3, 486.0], [19.4, 486.0], [19.5, 487.0], [19.6, 487.0], [19.7, 487.0], [19.8, 488.0], [19.9, 488.0], [20.0, 488.0], [20.1, 488.0], [20.2, 488.0], [20.3, 488.0], [20.4, 488.0], [20.5, 488.0], [20.6, 488.0], [20.7, 488.0], [20.8, 489.0], [20.9, 489.0], [21.0, 489.0], [21.1, 489.0], [21.2, 490.0], [21.3, 490.0], [21.4, 490.0], [21.5, 490.0], [21.6, 491.0], [21.7, 491.0], [21.8, 491.0], [21.9, 491.0], [22.0, 492.0], [22.1, 492.0], [22.2, 492.0], [22.3, 492.0], [22.4, 492.0], [22.5, 492.0], [22.6, 492.0], [22.7, 492.0], [22.8, 493.0], [22.9, 493.0], [23.0, 494.0], [23.1, 494.0], [23.2, 494.0], [23.3, 494.0], [23.4, 494.0], [23.5, 494.0], [23.6, 495.0], [23.7, 495.0], [23.8, 495.0], [23.9, 495.0], [24.0, 496.0], [24.1, 496.0], [24.2, 496.0], [24.3, 496.0], [24.4, 496.0], [24.5, 496.0], [24.6, 497.0], [24.7, 497.0], [24.8, 497.0], [24.9, 497.0], [25.0, 498.0], [25.1, 498.0], [25.2, 498.0], [25.3, 498.0], [25.4, 499.0], [25.5, 499.0], [25.6, 499.0], [25.7, 499.0], [25.8, 500.0], [25.9, 500.0], [26.0, 500.0], [26.1, 500.0], [26.2, 500.0], [26.3, 500.0], [26.4, 500.0], [26.5, 500.0], [26.6, 500.0], [26.7, 500.0], [26.8, 501.0], [26.9, 501.0], [27.0, 501.0], [27.1, 501.0], [27.2, 501.0], [27.3, 501.0], [27.4, 501.0], [27.5, 501.0], [27.6, 502.0], [27.7, 502.0], [27.8, 502.0], [27.9, 502.0], [28.0, 503.0], [28.1, 503.0], [28.2, 503.0], [28.3, 503.0], [28.4, 504.0], [28.5, 504.0], [28.6, 504.0], [28.7, 504.0], [28.8, 504.0], [28.9, 504.0], [29.0, 505.0], [29.1, 505.0], [29.2, 505.0], [29.3, 505.0], [29.4, 506.0], [29.5, 506.0], [29.6, 506.0], [29.7, 506.0], [29.8, 507.0], [29.9, 507.0], [30.0, 508.0], [30.1, 508.0], [30.2, 508.0], [30.3, 508.0], [30.4, 509.0], [30.5, 509.0], [30.6, 509.0], [30.7, 509.0], [30.8, 509.0], [30.9, 509.0], [31.0, 509.0], [31.1, 509.0], [31.2, 509.0], [31.3, 509.0], [31.4, 510.0], [31.5, 510.0], [31.6, 510.0], [31.7, 510.0], [31.8, 510.0], [31.9, 510.0], [32.0, 511.0], [32.1, 511.0], [32.2, 511.0], [32.3, 511.0], [32.4, 512.0], [32.5, 512.0], [32.6, 513.0], [32.7, 513.0], [32.8, 513.0], [32.9, 513.0], [33.0, 513.0], [33.1, 513.0], [33.2, 513.0], [33.3, 513.0], [33.4, 513.0], [33.5, 513.0], [33.6, 514.0], [33.7, 514.0], [33.8, 514.0], [33.9, 514.0], [34.0, 515.0], [34.1, 515.0], [34.2, 515.0], [34.3, 515.0], [34.4, 515.0], [34.5, 515.0], [34.6, 515.0], [34.7, 515.0], [34.8, 516.0], [34.9, 516.0], [35.0, 516.0], [35.1, 516.0], [35.2, 517.0], [35.3, 517.0], [35.4, 517.0], [35.5, 517.0], [35.6, 517.0], [35.7, 517.0], [35.8, 518.0], [35.9, 518.0], [36.0, 518.0], [36.1, 518.0], [36.2, 518.0], [36.3, 518.0], [36.4, 519.0], [36.5, 519.0], [36.6, 519.0], [36.7, 519.0], [36.8, 520.0], [36.9, 520.0], [37.0, 520.0], [37.1, 520.0], [37.2, 521.0], [37.3, 521.0], [37.4, 521.0], [37.5, 521.0], [37.6, 521.0], [37.7, 521.0], [37.8, 522.0], [37.9, 522.0], [38.0, 523.0], [38.1, 523.0], [38.2, 523.0], [38.3, 523.0], [38.4, 523.0], [38.5, 523.0], [38.6, 524.0], [38.7, 524.0], [38.8, 524.0], [38.9, 524.0], [39.0, 525.0], [39.1, 525.0], [39.2, 525.0], [39.3, 525.0], [39.4, 525.0], [39.5, 525.0], [39.6, 526.0], [39.7, 526.0], [39.8, 526.0], [39.9, 526.0], [40.0, 527.0], [40.1, 527.0], [40.2, 528.0], [40.3, 528.0], [40.4, 528.0], [40.5, 528.0], [40.6, 529.0], [40.7, 529.0], [40.8, 531.0], [40.9, 531.0], [41.0, 531.0], [41.1, 531.0], [41.2, 531.0], [41.3, 531.0], [41.4, 531.0], [41.5, 531.0], [41.6, 532.0], [41.7, 532.0], [41.8, 533.0], [41.9, 533.0], [42.0, 534.0], [42.1, 534.0], [42.2, 534.0], [42.3, 534.0], [42.4, 538.0], [42.5, 538.0], [42.6, 539.0], [42.7, 539.0], [42.8, 539.0], [42.9, 539.0], [43.0, 539.0], [43.1, 539.0], [43.2, 540.0], [43.3, 540.0], [43.4, 540.0], [43.5, 542.0], [43.6, 542.0], [43.7, 542.0], [43.8, 542.0], [43.9, 543.0], [44.0, 543.0], [44.1, 544.0], [44.2, 544.0], [44.3, 545.0], [44.4, 545.0], [44.5, 546.0], [44.6, 546.0], [44.7, 546.0], [44.8, 546.0], [44.9, 548.0], [45.0, 548.0], [45.1, 549.0], [45.2, 549.0], [45.3, 550.0], [45.4, 550.0], [45.5, 552.0], [45.6, 552.0], [45.7, 552.0], [45.8, 552.0], [45.9, 552.0], [46.0, 552.0], [46.1, 553.0], [46.2, 553.0], [46.3, 554.0], [46.4, 554.0], [46.5, 554.0], [46.6, 554.0], [46.7, 555.0], [46.8, 555.0], [46.9, 555.0], [47.0, 555.0], [47.1, 556.0], [47.2, 556.0], [47.3, 557.0], [47.4, 557.0], [47.5, 557.0], [47.6, 557.0], [47.7, 558.0], [47.8, 558.0], [47.9, 558.0], [48.0, 558.0], [48.1, 559.0], [48.2, 559.0], [48.3, 559.0], [48.4, 559.0], [48.5, 560.0], [48.6, 560.0], [48.7, 560.0], [48.8, 560.0], [48.9, 561.0], [49.0, 561.0], [49.1, 561.0], [49.2, 561.0], [49.3, 561.0], [49.4, 561.0], [49.5, 563.0], [49.6, 563.0], [49.7, 565.0], [49.8, 565.0], [49.9, 565.0], [50.0, 565.0], [50.1, 566.0], [50.2, 566.0], [50.3, 567.0], [50.4, 567.0], [50.5, 567.0], [50.6, 567.0], [50.7, 567.0], [50.8, 567.0], [50.9, 567.0], [51.0, 567.0], [51.1, 567.0], [51.2, 567.0], [51.3, 568.0], [51.4, 568.0], [51.5, 569.0], [51.6, 569.0], [51.7, 569.0], [51.8, 569.0], [51.9, 569.0], [52.0, 569.0], [52.1, 569.0], [52.2, 569.0], [52.3, 569.0], [52.4, 569.0], [52.5, 570.0], [52.6, 570.0], [52.7, 570.0], [52.8, 570.0], [52.9, 571.0], [53.0, 571.0], [53.1, 572.0], [53.2, 572.0], [53.3, 572.0], [53.4, 572.0], [53.5, 572.0], [53.6, 572.0], [53.7, 573.0], [53.8, 573.0], [53.9, 575.0], [54.0, 575.0], [54.1, 576.0], [54.2, 576.0], [54.3, 577.0], [54.4, 577.0], [54.5, 577.0], [54.6, 577.0], [54.7, 577.0], [54.8, 577.0], [54.9, 577.0], [55.0, 577.0], [55.1, 579.0], [55.2, 579.0], [55.3, 580.0], [55.4, 580.0], [55.5, 580.0], [55.6, 580.0], [55.7, 581.0], [55.8, 581.0], [55.9, 581.0], [56.0, 581.0], [56.1, 581.0], [56.2, 581.0], [56.3, 581.0], [56.4, 581.0], [56.5, 582.0], [56.6, 582.0], [56.7, 582.0], [56.8, 582.0], [56.9, 583.0], [57.0, 583.0], [57.1, 583.0], [57.2, 583.0], [57.3, 583.0], [57.4, 583.0], [57.5, 583.0], [57.6, 583.0], [57.7, 584.0], [57.8, 584.0], [57.9, 584.0], [58.0, 584.0], [58.1, 584.0], [58.2, 584.0], [58.3, 585.0], [58.4, 585.0], [58.5, 585.0], [58.6, 585.0], [58.7, 585.0], [58.8, 585.0], [58.9, 585.0], [59.0, 585.0], [59.1, 585.0], [59.2, 585.0], [59.3, 586.0], [59.4, 586.0], [59.5, 586.0], [59.6, 586.0], [59.7, 586.0], [59.8, 586.0], [59.9, 586.0], [60.0, 586.0], [60.1, 587.0], [60.2, 587.0], [60.3, 587.0], [60.4, 587.0], [60.5, 587.0], [60.6, 587.0], [60.7, 587.0], [60.8, 587.0], [60.9, 588.0], [61.0, 588.0], [61.1, 588.0], [61.2, 588.0], [61.3, 588.0], [61.4, 588.0], [61.5, 589.0], [61.6, 589.0], [61.7, 590.0], [61.8, 590.0], [61.9, 591.0], [62.0, 591.0], [62.1, 591.0], [62.2, 591.0], [62.3, 591.0], [62.4, 591.0], [62.5, 592.0], [62.6, 592.0], [62.7, 592.0], [62.8, 592.0], [62.9, 592.0], [63.0, 592.0], [63.1, 593.0], [63.2, 593.0], [63.3, 593.0], [63.4, 593.0], [63.5, 594.0], [63.6, 594.0], [63.7, 594.0], [63.8, 594.0], [63.9, 594.0], [64.0, 594.0], [64.1, 595.0], [64.2, 595.0], [64.3, 595.0], [64.4, 595.0], [64.5, 595.0], [64.6, 595.0], [64.7, 595.0], [64.8, 595.0], [64.9, 595.0], [65.0, 595.0], [65.1, 595.0], [65.2, 595.0], [65.3, 596.0], [65.4, 596.0], [65.5, 596.0], [65.6, 596.0], [65.7, 596.0], [65.8, 596.0], [65.9, 597.0], [66.0, 597.0], [66.1, 597.0], [66.2, 597.0], [66.3, 597.0], [66.4, 597.0], [66.5, 597.0], [66.6, 597.0], [66.7, 598.0], [66.8, 598.0], [66.9, 598.0], [67.0, 598.0], [67.1, 599.0], [67.2, 599.0], [67.3, 599.0], [67.4, 599.0], [67.5, 599.0], [67.6, 599.0], [67.7, 599.0], [67.8, 599.0], [67.9, 599.0], [68.0, 599.0], [68.1, 601.0], [68.2, 601.0], [68.3, 602.0], [68.4, 602.0], [68.5, 602.0], [68.6, 602.0], [68.7, 602.0], [68.8, 602.0], [68.9, 604.0], [69.0, 604.0], [69.1, 604.0], [69.2, 604.0], [69.3, 604.0], [69.4, 604.0], [69.5, 605.0], [69.6, 605.0], [69.7, 606.0], [69.8, 606.0], [69.9, 607.0], [70.0, 607.0], [70.1, 607.0], [70.2, 607.0], [70.3, 608.0], [70.4, 608.0], [70.5, 608.0], [70.6, 608.0], [70.7, 608.0], [70.8, 608.0], [70.9, 608.0], [71.0, 608.0], [71.1, 609.0], [71.2, 609.0], [71.3, 609.0], [71.4, 609.0], [71.5, 611.0], [71.6, 611.0], [71.7, 611.0], [71.8, 611.0], [71.9, 611.0], [72.0, 611.0], [72.1, 611.0], [72.2, 611.0], [72.3, 611.0], [72.4, 611.0], [72.5, 612.0], [72.6, 612.0], [72.7, 612.0], [72.8, 612.0], [72.9, 612.0], [73.0, 612.0], [73.1, 612.0], [73.2, 612.0], [73.3, 612.0], [73.4, 612.0], [73.5, 613.0], [73.6, 613.0], [73.7, 613.0], [73.8, 613.0], [73.9, 613.0], [74.0, 613.0], [74.1, 613.0], [74.2, 613.0], [74.3, 614.0], [74.4, 614.0], [74.5, 614.0], [74.6, 614.0], [74.7, 615.0], [74.8, 615.0], [74.9, 616.0], [75.0, 616.0], [75.1, 616.0], [75.2, 616.0], [75.3, 616.0], [75.4, 616.0], [75.5, 617.0], [75.6, 617.0], [75.7, 618.0], [75.8, 618.0], [75.9, 618.0], [76.0, 618.0], [76.1, 618.0], [76.2, 618.0], [76.3, 618.0], [76.4, 618.0], [76.5, 619.0], [76.6, 619.0], [76.7, 619.0], [76.8, 619.0], [76.9, 620.0], [77.0, 620.0], [77.1, 621.0], [77.2, 621.0], [77.3, 623.0], [77.4, 623.0], [77.5, 623.0], [77.6, 623.0], [77.7, 624.0], [77.8, 624.0], [77.9, 625.0], [78.0, 625.0], [78.1, 625.0], [78.2, 625.0], [78.3, 625.0], [78.4, 625.0], [78.5, 625.0], [78.6, 625.0], [78.7, 627.0], [78.8, 627.0], [78.9, 627.0], [79.0, 627.0], [79.1, 627.0], [79.2, 627.0], [79.3, 627.0], [79.4, 627.0], [79.5, 628.0], [79.6, 628.0], [79.7, 629.0], [79.8, 629.0], [79.9, 630.0], [80.0, 630.0], [80.1, 631.0], [80.2, 631.0], [80.3, 632.0], [80.4, 632.0], [80.5, 632.0], [80.6, 632.0], [80.7, 633.0], [80.8, 633.0], [80.9, 633.0], [81.0, 633.0], [81.1, 635.0], [81.2, 635.0], [81.3, 635.0], [81.4, 635.0], [81.5, 643.0], [81.6, 643.0], [81.7, 647.0], [81.8, 647.0], [81.9, 648.0], [82.0, 648.0], [82.1, 649.0], [82.2, 649.0], [82.3, 686.0], [82.4, 686.0], [82.5, 716.0], [82.6, 716.0], [82.7, 717.0], [82.8, 717.0], [82.9, 733.0], [83.0, 733.0], [83.1, 735.0], [83.2, 735.0], [83.3, 788.0], [83.4, 788.0], [83.5, 793.0], [83.6, 793.0], [83.7, 804.0], [83.8, 804.0], [83.9, 837.0], [84.0, 837.0], [84.1, 848.0], [84.2, 848.0], [84.3, 916.0], [84.4, 916.0], [84.5, 917.0], [84.6, 917.0], [84.7, 934.0], [84.8, 934.0], [84.9, 1481.0], [85.0, 1481.0], [85.1, 1482.0], [85.2, 1482.0], [85.3, 1486.0], [85.4, 1486.0], [85.5, 1545.0], [85.6, 1545.0], [85.7, 1558.0], [85.8, 1558.0], [85.9, 1560.0], [86.0, 1560.0], [86.1, 1562.0], [86.2, 1562.0], [86.3, 1565.0], [86.4, 1565.0], [86.5, 1570.0], [86.6, 1570.0], [86.7, 1572.0], [86.8, 1572.0], [86.9, 1572.0], [87.0, 1572.0], [87.1, 1572.0], [87.2, 1572.0], [87.3, 1577.0], [87.4, 1577.0], [87.5, 1577.0], [87.6, 1577.0], [87.7, 1585.0], [87.8, 1585.0], [87.9, 1588.0], [88.0, 1588.0], [88.1, 1592.0], [88.2, 1592.0], [88.3, 1594.0], [88.4, 1594.0], [88.5, 1597.0], [88.6, 1597.0], [88.7, 1599.0], [88.8, 1599.0], [88.9, 1600.0], [89.0, 1600.0], [89.1, 1603.0], [89.2, 1603.0], [89.3, 1606.0], [89.4, 1606.0], [89.5, 1608.0], [89.6, 1608.0], [89.7, 1611.0], [89.8, 1611.0], [89.9, 1612.0], [90.0, 1612.0], [90.1, 1620.0], [90.2, 1620.0], [90.3, 1624.0], [90.4, 1624.0], [90.5, 1627.0], [90.6, 1627.0], [90.7, 1628.0], [90.8, 1628.0], [90.9, 1629.0], [91.0, 1629.0], [91.1, 1629.0], [91.2, 1629.0], [91.3, 1630.0], [91.4, 1630.0], [91.5, 1634.0], [91.6, 1634.0], [91.7, 1634.0], [91.8, 1634.0], [91.9, 1635.0], [92.0, 1635.0], [92.1, 1640.0], [92.2, 1640.0], [92.3, 1643.0], [92.4, 1643.0], [92.5, 1644.0], [92.6, 1644.0], [92.7, 1646.0], [92.8, 1646.0], [92.9, 1646.0], [93.0, 1646.0], [93.1, 1647.0], [93.2, 1647.0], [93.3, 1651.0], [93.4, 1651.0], [93.5, 1652.0], [93.6, 1652.0], [93.7, 1653.0], [93.8, 1653.0], [93.9, 1653.0], [94.0, 1653.0], [94.1, 1664.0], [94.2, 1664.0], [94.3, 1715.0], [94.4, 1715.0], [94.5, 1730.0], [94.6, 1730.0], [94.7, 1779.0], [94.8, 1779.0], [94.9, 1824.0], [95.0, 1824.0], [95.1, 1831.0], [95.2, 1831.0], [95.3, 1860.0], [95.4, 1860.0], [95.5, 1863.0], [95.6, 1863.0], [95.7, 1864.0], [95.8, 1864.0], [95.9, 1866.0], [96.0, 1866.0], [96.1, 1868.0], [96.2, 1868.0], [96.3, 1874.0], [96.4, 1874.0], [96.5, 1875.0], [96.6, 1875.0], [96.7, 1878.0], [96.8, 1878.0], [96.9, 1880.0], [97.0, 1880.0], [97.1, 1882.0], [97.2, 1882.0], [97.3, 1887.0], [97.4, 1887.0], [97.5, 1889.0], [97.6, 1889.0], [97.7, 1890.0], [97.8, 1890.0], [97.9, 1891.0], [98.0, 1891.0], [98.1, 1892.0], [98.2, 1892.0], [98.3, 1893.0], [98.4, 1893.0], [98.5, 1894.0], [98.6, 1894.0], [98.7, 1894.0], [98.8, 1894.0], [98.9, 1895.0], [99.0, 1895.0], [99.1, 1897.0], [99.2, 1897.0], [99.3, 1898.0], [99.4, 1898.0], [99.5, 1900.0], [99.6, 1900.0], [99.7, 1900.0], [99.8, 1900.0], [99.9, 1902.0], [100.0, 1902.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[0.0, 122.0], [0.1, 122.0], [0.2, 127.0], [0.3, 127.0], [0.4, 128.0], [0.5, 128.0], [0.6, 128.0], [0.7, 142.0], [0.8, 143.0], [0.9, 143.0], [1.0, 143.0], [1.1, 143.0], [1.2, 143.0], [1.3, 143.0], [1.4, 144.0], [1.5, 144.0], [1.6, 144.0], [1.7, 144.0], [1.8, 144.0], [1.9, 144.0], [2.0, 144.0], [2.1, 144.0], [2.2, 145.0], [2.3, 145.0], [2.4, 145.0], [2.5, 145.0], [2.6, 145.0], [2.7, 145.0], [2.8, 145.0], [2.9, 146.0], [3.0, 146.0], [3.1, 146.0], [3.2, 147.0], [3.3, 147.0], [3.4, 147.0], [3.5, 147.0], [3.6, 148.0], [3.7, 148.0], [3.8, 148.0], [3.9, 148.0], [4.0, 149.0], [4.1, 149.0], [4.2, 149.0], [4.3, 149.0], [4.4, 152.0], [4.5, 152.0], [4.6, 152.0], [4.7, 152.0], [4.8, 152.0], [4.9, 154.0], [5.0, 154.0], [5.1, 154.0], [5.2, 154.0], [5.3, 155.0], [5.4, 155.0], [5.5, 155.0], [5.6, 155.0], [5.7, 157.0], [5.8, 157.0], [5.9, 159.0], [6.0, 159.0], [6.1, 160.0], [6.2, 160.0], [6.3, 163.0], [6.4, 163.0], [6.5, 165.0], [6.6, 165.0], [6.7, 166.0], [6.8, 166.0], [6.9, 167.0], [7.0, 167.0], [7.1, 169.0], [7.2, 169.0], [7.3, 170.0], [7.4, 170.0], [7.5, 170.0], [7.6, 170.0], [7.7, 170.0], [7.8, 170.0], [7.9, 171.0], [8.0, 171.0], [8.1, 172.0], [8.2, 172.0], [8.3, 173.0], [8.4, 173.0], [8.5, 173.0], [8.6, 173.0], [8.7, 173.0], [8.8, 173.0], [8.9, 173.0], [9.0, 173.0], [9.1, 173.0], [9.2, 173.0], [9.3, 174.0], [9.4, 174.0], [9.5, 174.0], [9.6, 174.0], [9.7, 174.0], [9.8, 174.0], [9.9, 174.0], [10.0, 174.0], [10.1, 175.0], [10.2, 175.0], [10.3, 175.0], [10.4, 175.0], [10.5, 176.0], [10.6, 176.0], [10.7, 176.0], [10.8, 176.0], [10.9, 177.0], [11.0, 177.0], [11.1, 177.0], [11.2, 177.0], [11.3, 178.0], [11.4, 178.0], [11.5, 178.0], [11.6, 178.0], [11.7, 180.0], [11.8, 180.0], [11.9, 181.0], [12.0, 181.0], [12.1, 181.0], [12.2, 181.0], [12.3, 198.0], [12.4, 198.0], [12.5, 199.0], [12.6, 199.0], [12.7, 200.0], [12.8, 200.0], [12.9, 200.0], [13.0, 200.0], [13.1, 201.0], [13.2, 201.0], [13.3, 202.0], [13.4, 203.0], [13.5, 203.0], [13.6, 205.0], [13.7, 205.0], [13.8, 205.0], [13.9, 205.0], [14.0, 205.0], [14.1, 205.0], [14.2, 206.0], [14.3, 206.0], [14.4, 206.0], [14.5, 206.0], [14.6, 206.0], [14.7, 206.0], [14.8, 206.0], [14.9, 206.0], [15.0, 207.0], [15.1, 207.0], [15.2, 208.0], [15.3, 208.0], [15.4, 209.0], [15.5, 209.0], [15.6, 209.0], [15.7, 209.0], [15.8, 209.0], [15.9, 209.0], [16.0, 210.0], [16.1, 210.0], [16.2, 218.0], [16.3, 218.0], [16.4, 219.0], [16.5, 219.0], [16.6, 220.0], [16.7, 220.0], [16.8, 229.0], [16.9, 229.0], [17.0, 230.0], [17.1, 230.0], [17.2, 231.0], [17.3, 231.0], [17.4, 231.0], [17.5, 231.0], [17.6, 232.0], [17.7, 232.0], [17.8, 234.0], [17.9, 234.0], [18.0, 234.0], [18.1, 234.0], [18.2, 235.0], [18.3, 235.0], [18.4, 238.0], [18.5, 238.0], [18.6, 239.0], [18.7, 239.0], [18.8, 242.0], [18.9, 242.0], [19.0, 245.0], [19.1, 245.0], [19.2, 245.0], [19.3, 245.0], [19.4, 246.0], [19.5, 246.0], [19.6, 248.0], [19.7, 248.0], [19.8, 248.0], [19.9, 248.0], [20.0, 248.0], [20.1, 248.0], [20.2, 248.0], [20.3, 248.0], [20.4, 250.0], [20.5, 250.0], [20.6, 254.0], [20.7, 254.0], [20.8, 254.0], [20.9, 254.0], [21.0, 254.0], [21.1, 254.0], [21.2, 254.0], [21.3, 254.0], [21.4, 254.0], [21.5, 254.0], [21.6, 254.0], [21.7, 254.0], [21.8, 255.0], [21.9, 255.0], [22.0, 255.0], [22.1, 255.0], [22.2, 256.0], [22.3, 256.0], [22.4, 257.0], [22.5, 257.0], [22.6, 257.0], [22.7, 257.0], [22.8, 258.0], [22.9, 258.0], [23.0, 259.0], [23.1, 259.0], [23.2, 259.0], [23.3, 259.0], [23.4, 261.0], [23.5, 261.0], [23.6, 262.0], [23.7, 262.0], [23.8, 263.0], [23.9, 263.0], [24.0, 263.0], [24.1, 263.0], [24.2, 263.0], [24.3, 263.0], [24.4, 266.0], [24.5, 266.0], [24.6, 266.0], [24.7, 266.0], [24.8, 267.0], [24.9, 267.0], [25.0, 267.0], [25.1, 267.0], [25.2, 268.0], [25.3, 268.0], [25.4, 269.0], [25.5, 269.0], [25.6, 269.0], [25.7, 269.0], [25.8, 270.0], [25.9, 270.0], [26.0, 271.0], [26.1, 271.0], [26.2, 271.0], [26.3, 271.0], [26.4, 271.0], [26.5, 271.0], [26.6, 271.0], [26.7, 271.0], [26.8, 271.0], [26.9, 271.0], [27.0, 272.0], [27.1, 272.0], [27.2, 272.0], [27.3, 272.0], [27.4, 273.0], [27.5, 273.0], [27.6, 273.0], [27.7, 273.0], [27.8, 274.0], [27.9, 274.0], [28.0, 274.0], [28.1, 274.0], [28.2, 275.0], [28.3, 275.0], [28.4, 275.0], [28.5, 275.0], [28.6, 276.0], [28.7, 276.0], [28.8, 276.0], [28.9, 276.0], [29.0, 276.0], [29.1, 276.0], [29.2, 277.0], [29.3, 277.0], [29.4, 277.0], [29.5, 277.0], [29.6, 277.0], [29.7, 277.0], [29.8, 277.0], [29.9, 277.0], [30.0, 277.0], [30.1, 277.0], [30.2, 277.0], [30.3, 277.0], [30.4, 278.0], [30.5, 278.0], [30.6, 278.0], [30.7, 278.0], [30.8, 279.0], [30.9, 279.0], [31.0, 279.0], [31.1, 279.0], [31.2, 279.0], [31.3, 279.0], [31.4, 279.0], [31.5, 279.0], [31.6, 279.0], [31.7, 279.0], [31.8, 280.0], [31.9, 280.0], [32.0, 280.0], [32.1, 280.0], [32.2, 280.0], [32.3, 280.0], [32.4, 280.0], [32.5, 280.0], [32.6, 281.0], [32.7, 281.0], [32.8, 281.0], [32.9, 281.0], [33.0, 281.0], [33.1, 281.0], [33.2, 282.0], [33.3, 282.0], [33.4, 282.0], [33.5, 282.0], [33.6, 282.0], [33.7, 282.0], [33.8, 282.0], [33.9, 282.0], [34.0, 282.0], [34.1, 282.0], [34.2, 282.0], [34.3, 282.0], [34.4, 282.0], [34.5, 282.0], [34.6, 282.0], [34.7, 282.0], [34.8, 283.0], [34.9, 283.0], [35.0, 283.0], [35.1, 283.0], [35.2, 283.0], [35.3, 283.0], [35.4, 283.0], [35.5, 283.0], [35.6, 284.0], [35.7, 284.0], [35.8, 284.0], [35.9, 284.0], [36.0, 284.0], [36.1, 284.0], [36.2, 284.0], [36.3, 284.0], [36.4, 284.0], [36.5, 284.0], [36.6, 284.0], [36.7, 284.0], [36.8, 284.0], [36.9, 284.0], [37.0, 285.0], [37.1, 285.0], [37.2, 285.0], [37.3, 285.0], [37.4, 285.0], [37.5, 285.0], [37.6, 285.0], [37.7, 285.0], [37.8, 285.0], [37.9, 285.0], [38.0, 285.0], [38.1, 285.0], [38.2, 285.0], [38.3, 285.0], [38.4, 286.0], [38.5, 286.0], [38.6, 286.0], [38.7, 286.0], [38.8, 286.0], [38.9, 286.0], [39.0, 286.0], [39.1, 286.0], [39.2, 287.0], [39.3, 287.0], [39.4, 287.0], [39.5, 287.0], [39.6, 288.0], [39.7, 288.0], [39.8, 288.0], [39.9, 288.0], [40.0, 288.0], [40.1, 288.0], [40.2, 288.0], [40.3, 288.0], [40.4, 288.0], [40.5, 288.0], [40.6, 289.0], [40.7, 289.0], [40.8, 289.0], [40.9, 289.0], [41.0, 289.0], [41.1, 289.0], [41.2, 289.0], [41.3, 289.0], [41.4, 289.0], [41.5, 289.0], [41.6, 289.0], [41.7, 289.0], [41.8, 289.0], [41.9, 289.0], [42.0, 289.0], [42.1, 289.0], [42.2, 289.0], [42.3, 289.0], [42.4, 289.0], [42.5, 289.0], [42.6, 290.0], [42.7, 290.0], [42.8, 290.0], [42.9, 290.0], [43.0, 290.0], [43.1, 290.0], [43.2, 290.0], [43.3, 290.0], [43.4, 290.0], [43.5, 290.0], [43.6, 290.0], [43.7, 290.0], [43.8, 290.0], [43.9, 290.0], [44.0, 290.0], [44.1, 290.0], [44.2, 291.0], [44.3, 291.0], [44.4, 291.0], [44.5, 291.0], [44.6, 291.0], [44.7, 291.0], [44.8, 291.0], [44.9, 291.0], [45.0, 291.0], [45.1, 291.0], [45.2, 291.0], [45.3, 291.0], [45.4, 292.0], [45.5, 292.0], [45.6, 292.0], [45.7, 292.0], [45.8, 292.0], [45.9, 292.0], [46.0, 292.0], [46.1, 292.0], [46.2, 293.0], [46.3, 293.0], [46.4, 293.0], [46.5, 293.0], [46.6, 294.0], [46.7, 294.0], [46.8, 294.0], [46.9, 294.0], [47.0, 294.0], [47.1, 294.0], [47.2, 294.0], [47.3, 294.0], [47.4, 295.0], [47.5, 295.0], [47.6, 295.0], [47.7, 295.0], [47.8, 295.0], [47.9, 295.0], [48.0, 295.0], [48.1, 295.0], [48.2, 296.0], [48.3, 296.0], [48.4, 296.0], [48.5, 296.0], [48.6, 296.0], [48.7, 296.0], [48.8, 297.0], [48.9, 297.0], [49.0, 298.0], [49.1, 298.0], [49.2, 298.0], [49.3, 298.0], [49.4, 298.0], [49.5, 298.0], [49.6, 298.0], [49.7, 298.0], [49.8, 298.0], [49.9, 298.0], [50.0, 299.0], [50.1, 299.0], [50.2, 299.0], [50.3, 299.0], [50.4, 300.0], [50.5, 300.0], [50.6, 300.0], [50.7, 300.0], [50.8, 300.0], [50.9, 300.0], [51.0, 300.0], [51.1, 300.0], [51.2, 301.0], [51.3, 301.0], [51.4, 301.0], [51.5, 301.0], [51.6, 301.0], [51.7, 301.0], [51.8, 301.0], [51.9, 301.0], [52.0, 302.0], [52.1, 302.0], [52.2, 302.0], [52.3, 302.0], [52.4, 302.0], [52.5, 302.0], [52.6, 302.0], [52.7, 302.0], [52.8, 302.0], [52.9, 302.0], [53.0, 302.0], [53.1, 302.0], [53.2, 302.0], [53.3, 302.0], [53.4, 302.0], [53.5, 302.0], [53.6, 302.0], [53.7, 302.0], [53.8, 302.0], [53.9, 302.0], [54.0, 302.0], [54.1, 302.0], [54.2, 303.0], [54.3, 303.0], [54.4, 303.0], [54.5, 303.0], [54.6, 303.0], [54.7, 303.0], [54.8, 303.0], [54.9, 303.0], [55.0, 303.0], [55.1, 303.0], [55.2, 303.0], [55.3, 303.0], [55.4, 303.0], [55.5, 303.0], [55.6, 304.0], [55.7, 304.0], [55.8, 304.0], [55.9, 304.0], [56.0, 304.0], [56.1, 304.0], [56.2, 304.0], [56.3, 304.0], [56.4, 304.0], [56.5, 304.0], [56.6, 304.0], [56.7, 304.0], [56.8, 304.0], [56.9, 304.0], [57.0, 305.0], [57.1, 305.0], [57.2, 305.0], [57.3, 305.0], [57.4, 305.0], [57.5, 305.0], [57.6, 305.0], [57.7, 305.0], [57.8, 306.0], [57.9, 306.0], [58.0, 306.0], [58.1, 306.0], [58.2, 306.0], [58.3, 306.0], [58.4, 306.0], [58.5, 306.0], [58.6, 306.0], [58.7, 306.0], [58.8, 306.0], [58.9, 306.0], [59.0, 307.0], [59.1, 307.0], [59.2, 307.0], [59.3, 307.0], [59.4, 307.0], [59.5, 307.0], [59.6, 307.0], [59.7, 307.0], [59.8, 308.0], [59.9, 308.0], [60.0, 308.0], [60.1, 308.0], [60.2, 309.0], [60.3, 309.0], [60.4, 309.0], [60.5, 309.0], [60.6, 309.0], [60.7, 309.0], [60.8, 309.0], [60.9, 309.0], [61.0, 309.0], [61.1, 309.0], [61.2, 310.0], [61.3, 310.0], [61.4, 310.0], [61.5, 310.0], [61.6, 310.0], [61.7, 310.0], [61.8, 310.0], [61.9, 310.0], [62.0, 311.0], [62.1, 311.0], [62.2, 311.0], [62.3, 311.0], [62.4, 311.0], [62.5, 311.0], [62.6, 312.0], [62.7, 312.0], [62.8, 312.0], [62.9, 312.0], [63.0, 312.0], [63.1, 312.0], [63.2, 313.0], [63.3, 313.0], [63.4, 313.0], [63.5, 313.0], [63.6, 314.0], [63.7, 314.0], [63.8, 314.0], [63.9, 314.0], [64.0, 314.0], [64.1, 314.0], [64.2, 314.0], [64.3, 314.0], [64.4, 315.0], [64.5, 315.0], [64.6, 315.0], [64.7, 315.0], [64.8, 316.0], [64.9, 316.0], [65.0, 316.0], [65.1, 316.0], [65.2, 316.0], [65.3, 316.0], [65.4, 317.0], [65.5, 317.0], [65.6, 317.0], [65.7, 317.0], [65.8, 318.0], [65.9, 318.0], [66.0, 319.0], [66.1, 319.0], [66.2, 320.0], [66.3, 320.0], [66.4, 320.0], [66.5, 320.0], [66.6, 320.0], [66.7, 320.0], [66.8, 320.0], [66.9, 320.0], [67.0, 320.0], [67.1, 320.0], [67.2, 320.0], [67.3, 320.0], [67.4, 320.0], [67.5, 320.0], [67.6, 320.0], [67.7, 320.0], [67.8, 321.0], [67.9, 321.0], [68.0, 321.0], [68.1, 321.0], [68.2, 321.0], [68.3, 321.0], [68.4, 322.0], [68.5, 322.0], [68.6, 322.0], [68.7, 322.0], [68.8, 322.0], [68.9, 322.0], [69.0, 322.0], [69.1, 322.0], [69.2, 323.0], [69.3, 323.0], [69.4, 324.0], [69.5, 324.0], [69.6, 324.0], [69.7, 324.0], [69.8, 325.0], [69.9, 325.0], [70.0, 325.0], [70.1, 325.0], [70.2, 326.0], [70.3, 326.0], [70.4, 326.0], [70.5, 326.0], [70.6, 326.0], [70.7, 326.0], [70.8, 326.0], [70.9, 326.0], [71.0, 327.0], [71.1, 327.0], [71.2, 327.0], [71.3, 327.0], [71.4, 329.0], [71.5, 329.0], [71.6, 330.0], [71.7, 330.0], [71.8, 331.0], [71.9, 331.0], [72.0, 332.0], [72.1, 332.0], [72.2, 332.0], [72.3, 332.0], [72.4, 333.0], [72.5, 333.0], [72.6, 333.0], [72.7, 333.0], [72.8, 333.0], [72.9, 333.0], [73.0, 334.0], [73.1, 334.0], [73.2, 334.0], [73.3, 334.0], [73.4, 334.0], [73.5, 334.0], [73.6, 336.0], [73.7, 336.0], [73.8, 338.0], [73.9, 338.0], [74.0, 338.0], [74.1, 338.0], [74.2, 338.0], [74.3, 338.0], [74.4, 353.0], [74.5, 353.0], [74.6, 361.0], [74.7, 361.0], [74.8, 369.0], [74.9, 369.0], [75.0, 370.0], [75.1, 370.0], [75.2, 372.0], [75.3, 372.0], [75.4, 373.0], [75.5, 373.0], [75.6, 373.0], [75.7, 373.0], [75.8, 374.0], [75.9, 374.0], [76.0, 375.0], [76.1, 375.0], [76.2, 375.0], [76.3, 375.0], [76.4, 376.0], [76.5, 376.0], [76.6, 376.0], [76.7, 376.0], [76.8, 376.0], [76.9, 376.0], [77.0, 376.0], [77.1, 376.0], [77.2, 376.0], [77.3, 376.0], [77.4, 376.0], [77.5, 376.0], [77.6, 377.0], [77.7, 377.0], [77.8, 378.0], [77.9, 378.0], [78.0, 378.0], [78.1, 378.0], [78.2, 380.0], [78.3, 380.0], [78.4, 382.0], [78.5, 382.0], [78.6, 382.0], [78.7, 382.0], [78.8, 382.0], [78.9, 382.0], [79.0, 383.0], [79.1, 383.0], [79.2, 383.0], [79.3, 383.0], [79.4, 385.0], [79.5, 385.0], [79.6, 385.0], [79.7, 390.0], [79.8, 390.0], [79.9, 394.0], [80.0, 394.0], [80.1, 406.0], [80.2, 406.0], [80.3, 878.0], [80.4, 878.0], [80.5, 879.0], [80.6, 879.0], [80.7, 895.0], [80.8, 895.0], [80.9, 955.0], [81.0, 955.0], [81.1, 957.0], [81.2, 957.0], [81.3, 959.0], [81.4, 959.0], [81.5, 959.0], [81.6, 959.0], [81.7, 960.0], [81.8, 960.0], [81.9, 960.0], [82.0, 960.0], [82.1, 961.0], [82.2, 961.0], [82.3, 961.0], [82.4, 961.0], [82.5, 963.0], [82.6, 963.0], [82.7, 963.0], [82.8, 963.0], [82.9, 964.0], [83.0, 964.0], [83.1, 964.0], [83.2, 964.0], [83.3, 974.0], [83.4, 974.0], [83.5, 975.0], [83.6, 975.0], [83.7, 977.0], [83.8, 977.0], [83.9, 978.0], [84.0, 978.0], [84.1, 978.0], [84.2, 978.0], [84.3, 978.0], [84.4, 978.0], [84.5, 978.0], [84.6, 978.0], [84.7, 978.0], [84.8, 978.0], [84.9, 979.0], [85.0, 979.0], [85.1, 981.0], [85.2, 981.0], [85.3, 982.0], [85.4, 982.0], [85.5, 982.0], [85.6, 982.0], [85.7, 986.0], [85.8, 986.0], [85.9, 1062.0], [86.0, 1062.0], [86.1, 1063.0], [86.2, 1063.0], [86.3, 1064.0], [86.4, 1064.0], [86.5, 1065.0], [86.6, 1065.0], [86.7, 1066.0], [86.8, 1066.0], [86.9, 1066.0], [87.0, 1066.0], [87.1, 1067.0], [87.2, 1067.0], [87.3, 1068.0], [87.4, 1068.0], [87.5, 1068.0], [87.6, 1068.0], [87.7, 1068.0], [87.8, 1068.0], [87.9, 1068.0], [88.0, 1068.0], [88.1, 1069.0], [88.2, 1069.0], [88.3, 1069.0], [88.4, 1069.0], [88.5, 1070.0], [88.6, 1070.0], [88.7, 1071.0], [88.8, 1071.0], [88.9, 1073.0], [89.0, 1073.0], [89.1, 1073.0], [89.2, 1073.0], [89.3, 1076.0], [89.4, 1076.0], [89.5, 1078.0], [89.6, 1078.0], [89.7, 1078.0], [89.8, 1078.0], [89.9, 1079.0], [90.0, 1079.0], [90.1, 1079.0], [90.2, 1079.0], [90.3, 1080.0], [90.4, 1080.0], [90.5, 1080.0], [90.6, 1080.0], [90.7, 1081.0], [90.8, 1081.0], [90.9, 1081.0], [91.0, 1081.0], [91.1, 1083.0], [91.2, 1083.0], [91.3, 1090.0], [91.4, 1090.0], [91.5, 1221.0], [91.6, 1221.0], [91.7, 1284.0], [91.8, 1284.0], [91.9, 1285.0], [92.0, 1285.0], [92.1, 1286.0], [92.2, 1286.0], [92.3, 1286.0], [92.4, 1286.0], [92.5, 1287.0], [92.6, 1287.0], [92.7, 1289.0], [92.8, 1289.0], [92.9, 1290.0], [93.0, 1290.0], [93.1, 1290.0], [93.2, 1290.0], [93.3, 1291.0], [93.4, 1291.0], [93.5, 1291.0], [93.6, 1291.0], [93.7, 1293.0], [93.8, 1293.0], [93.9, 1294.0], [94.0, 1294.0], [94.1, 1299.0], [94.2, 1299.0], [94.3, 1302.0], [94.4, 1302.0], [94.5, 1303.0], [94.6, 1303.0], [94.7, 1303.0], [94.8, 1303.0], [94.9, 1304.0], [95.0, 1304.0], [95.1, 1305.0], [95.2, 1305.0], [95.3, 1306.0], [95.4, 1306.0], [95.5, 1307.0], [95.6, 1307.0], [95.7, 1307.0], [95.8, 1307.0], [95.9, 1308.0], [96.0, 1308.0], [96.1, 1312.0], [96.2, 1312.0], [96.3, 1453.0], [96.4, 1453.0], [96.5, 1458.0], [96.6, 1458.0], [96.7, 1678.0], [96.8, 1678.0], [96.9, 1681.0], [97.0, 1681.0], [97.1, 2556.0], [97.2, 2556.0], [97.3, 2599.0], [97.4, 2599.0], [97.5, 2599.0], [97.6, 2599.0], [97.7, 2602.0], [97.8, 2602.0], [97.9, 2615.0], [98.0, 2615.0], [98.1, 2704.0], [98.2, 2704.0], [98.3, 2764.0], [98.4, 2764.0], [98.5, 2767.0], [98.6, 2767.0], [98.7, 2779.0], [98.8, 2779.0], [98.9, 2780.0], [99.0, 2780.0], [99.1, 2853.0], [99.2, 2853.0], [99.3, 2890.0], [99.4, 2890.0], [99.5, 2917.0], [99.6, 2917.0], [99.7, 2924.0], [99.8, 2924.0], [99.9, 2978.0], [100.0, 2978.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[0.0, 150.0], [0.1, 150.0], [0.2, 163.0], [0.3, 163.0], [0.4, 167.0], [0.5, 167.0], [0.6, 167.0], [0.7, 169.0], [0.8, 172.0], [0.9, 172.0], [1.0, 173.0], [1.1, 173.0], [1.2, 173.0], [1.3, 173.0], [1.4, 174.0], [1.5, 174.0], [1.6, 176.0], [1.7, 176.0], [1.8, 178.0], [1.9, 178.0], [2.0, 180.0], [2.1, 180.0], [2.2, 181.0], [2.3, 181.0], [2.4, 182.0], [2.5, 182.0], [2.6, 192.0], [2.7, 192.0], [2.8, 192.0], [2.9, 193.0], [3.0, 193.0], [3.1, 196.0], [3.2, 196.0], [3.3, 196.0], [3.4, 196.0], [3.5, 199.0], [3.6, 199.0], [3.7, 200.0], [3.8, 200.0], [3.9, 201.0], [4.0, 201.0], [4.1, 201.0], [4.2, 201.0], [4.3, 203.0], [4.4, 203.0], [4.5, 205.0], [4.6, 205.0], [4.7, 206.0], [4.8, 206.0], [4.9, 207.0], [5.0, 207.0], [5.1, 207.0], [5.2, 207.0], [5.3, 208.0], [5.4, 208.0], [5.5, 208.0], [5.6, 208.0], [5.7, 210.0], [5.8, 210.0], [5.9, 210.0], [6.0, 210.0], [6.1, 211.0], [6.2, 211.0], [6.3, 211.0], [6.4, 211.0], [6.5, 211.0], [6.6, 211.0], [6.7, 212.0], [6.8, 212.0], [6.9, 213.0], [7.0, 213.0], [7.1, 213.0], [7.2, 213.0], [7.3, 214.0], [7.4, 214.0], [7.5, 214.0], [7.6, 214.0], [7.7, 214.0], [7.8, 214.0], [7.9, 214.0], [8.0, 214.0], [8.1, 215.0], [8.2, 215.0], [8.3, 215.0], [8.4, 215.0], [8.5, 217.0], [8.6, 217.0], [8.7, 217.0], [8.8, 217.0], [8.9, 217.0], [9.0, 217.0], [9.1, 218.0], [9.2, 218.0], [9.3, 218.0], [9.4, 218.0], [9.5, 219.0], [9.6, 219.0], [9.7, 219.0], [9.8, 219.0], [9.9, 219.0], [10.0, 219.0], [10.1, 219.0], [10.2, 219.0], [10.3, 220.0], [10.4, 220.0], [10.5, 220.0], [10.6, 220.0], [10.7, 220.0], [10.8, 220.0], [10.9, 221.0], [11.0, 221.0], [11.1, 221.0], [11.2, 221.0], [11.3, 221.0], [11.4, 221.0], [11.5, 221.0], [11.6, 221.0], [11.7, 221.0], [11.8, 221.0], [11.9, 221.0], [12.0, 221.0], [12.1, 222.0], [12.2, 222.0], [12.3, 224.0], [12.4, 224.0], [12.5, 225.0], [12.6, 225.0], [12.7, 225.0], [12.8, 225.0], [12.9, 226.0], [13.0, 226.0], [13.1, 227.0], [13.2, 227.0], [13.3, 235.0], [13.4, 247.0], [13.5, 247.0], [13.6, 248.0], [13.7, 248.0], [13.8, 249.0], [13.9, 249.0], [14.0, 250.0], [14.1, 250.0], [14.2, 250.0], [14.3, 250.0], [14.4, 250.0], [14.5, 250.0], [14.6, 252.0], [14.7, 252.0], [14.8, 253.0], [14.9, 253.0], [15.0, 253.0], [15.1, 253.0], [15.2, 253.0], [15.3, 253.0], [15.4, 254.0], [15.5, 254.0], [15.6, 254.0], [15.7, 254.0], [15.8, 255.0], [15.9, 255.0], [16.0, 256.0], [16.1, 256.0], [16.2, 256.0], [16.3, 256.0], [16.4, 256.0], [16.5, 256.0], [16.6, 259.0], [16.7, 259.0], [16.8, 260.0], [16.9, 260.0], [17.0, 261.0], [17.1, 261.0], [17.2, 264.0], [17.3, 264.0], [17.4, 264.0], [17.5, 264.0], [17.6, 264.0], [17.7, 264.0], [17.8, 272.0], [17.9, 272.0], [18.0, 274.0], [18.1, 274.0], [18.2, 680.0], [18.3, 680.0], [18.4, 690.0], [18.5, 690.0], [18.6, 693.0], [18.7, 693.0], [18.8, 707.0], [18.9, 707.0], [19.0, 1272.0], [19.1, 1272.0], [19.2, 1556.0], [19.3, 1556.0], [19.4, 1558.0], [19.5, 1558.0], [19.6, 1564.0], [19.7, 1564.0], [19.8, 1755.0], [19.9, 1755.0], [20.0, 1771.0], [20.1, 1771.0], [20.2, 1772.0], [20.3, 1772.0], [20.4, 1773.0], [20.5, 1773.0], [20.6, 1774.0], [20.7, 1774.0], [20.8, 1776.0], [20.9, 1776.0], [21.0, 1779.0], [21.1, 1779.0], [21.2, 1780.0], [21.3, 1780.0], [21.4, 1784.0], [21.5, 1784.0], [21.6, 1788.0], [21.7, 1788.0], [21.8, 1795.0], [21.9, 1795.0], [22.0, 1798.0], [22.1, 1798.0], [22.2, 1799.0], [22.3, 1799.0], [22.4, 1803.0], [22.5, 1803.0], [22.6, 1805.0], [22.7, 1805.0], [22.8, 1806.0], [22.9, 1806.0], [23.0, 1812.0], [23.1, 1812.0], [23.2, 1813.0], [23.3, 1813.0], [23.4, 1818.0], [23.5, 1818.0], [23.6, 1819.0], [23.7, 1819.0], [23.8, 1821.0], [23.9, 1821.0], [24.0, 1823.0], [24.1, 1823.0], [24.2, 1825.0], [24.3, 1825.0], [24.4, 1825.0], [24.5, 1825.0], [24.6, 1825.0], [24.7, 1825.0], [24.8, 1827.0], [24.9, 1827.0], [25.0, 1829.0], [25.1, 1829.0], [25.2, 1830.0], [25.3, 1830.0], [25.4, 1832.0], [25.5, 1832.0], [25.6, 1834.0], [25.7, 1834.0], [25.8, 1834.0], [25.9, 1834.0], [26.0, 1836.0], [26.1, 1836.0], [26.2, 1837.0], [26.3, 1837.0], [26.4, 1840.0], [26.5, 1840.0], [26.6, 1843.0], [26.7, 1843.0], [26.8, 1845.0], [26.9, 1845.0], [27.0, 1848.0], [27.1, 1848.0], [27.2, 1852.0], [27.3, 1852.0], [27.4, 1852.0], [27.5, 1852.0], [27.6, 1853.0], [27.7, 1853.0], [27.8, 1857.0], [27.9, 1857.0], [28.0, 1857.0], [28.1, 1857.0], [28.2, 1859.0], [28.3, 1859.0], [28.4, 1859.0], [28.5, 1859.0], [28.6, 1867.0], [28.7, 1867.0], [28.8, 1868.0], [28.9, 1868.0], [29.0, 1872.0], [29.1, 1872.0], [29.2, 1873.0], [29.3, 1873.0], [29.4, 1873.0], [29.5, 1873.0], [29.6, 1873.0], [29.7, 1873.0], [29.8, 1875.0], [29.9, 1875.0], [30.0, 1878.0], [30.1, 1878.0], [30.2, 1881.0], [30.3, 1881.0], [30.4, 1883.0], [30.5, 1883.0], [30.6, 1883.0], [30.7, 1883.0], [30.8, 1884.0], [30.9, 1884.0], [31.0, 1884.0], [31.1, 1884.0], [31.2, 1885.0], [31.3, 1885.0], [31.4, 1886.0], [31.5, 1886.0], [31.6, 1886.0], [31.7, 1886.0], [31.8, 1891.0], [31.9, 1891.0], [32.0, 1893.0], [32.1, 1893.0], [32.2, 1901.0], [32.3, 1901.0], [32.4, 1907.0], [32.5, 1907.0], [32.6, 1907.0], [32.7, 1907.0], [32.8, 1908.0], [32.9, 1908.0], [33.0, 1910.0], [33.1, 1910.0], [33.2, 1911.0], [33.3, 1911.0], [33.4, 1912.0], [33.5, 1912.0], [33.6, 1912.0], [33.7, 1912.0], [33.8, 1912.0], [33.9, 1912.0], [34.0, 1913.0], [34.1, 1913.0], [34.2, 1915.0], [34.3, 1915.0], [34.4, 1918.0], [34.5, 1918.0], [34.6, 1922.0], [34.7, 1922.0], [34.8, 1924.0], [34.9, 1924.0], [35.0, 1924.0], [35.1, 1924.0], [35.2, 1932.0], [35.3, 1932.0], [35.4, 1933.0], [35.5, 1933.0], [35.6, 1935.0], [35.7, 1935.0], [35.8, 1936.0], [35.9, 1936.0], [36.0, 1942.0], [36.1, 1942.0], [36.2, 1942.0], [36.3, 1942.0], [36.4, 1946.0], [36.5, 1946.0], [36.6, 1946.0], [36.7, 1946.0], [36.8, 1947.0], [36.9, 1947.0], [37.0, 1949.0], [37.1, 1949.0], [37.2, 1949.0], [37.3, 1949.0], [37.4, 1952.0], [37.5, 1952.0], [37.6, 1952.0], [37.7, 1952.0], [37.8, 1953.0], [37.9, 1953.0], [38.0, 1953.0], [38.1, 1953.0], [38.2, 1954.0], [38.3, 1954.0], [38.4, 1958.0], [38.5, 1958.0], [38.6, 1964.0], [38.7, 1964.0], [38.8, 1966.0], [38.9, 1966.0], [39.0, 1967.0], [39.1, 1967.0], [39.2, 1969.0], [39.3, 1969.0], [39.4, 1970.0], [39.5, 1970.0], [39.6, 1972.0], [39.7, 1972.0], [39.8, 1972.0], [39.9, 1973.0], [40.0, 1973.0], [40.1, 1975.0], [40.2, 1975.0], [40.3, 1976.0], [40.4, 1976.0], [40.5, 1976.0], [40.6, 1976.0], [40.7, 1976.0], [40.8, 1976.0], [40.9, 1976.0], [41.0, 1976.0], [41.1, 1978.0], [41.2, 1978.0], [41.3, 1982.0], [41.4, 1982.0], [41.5, 1983.0], [41.6, 1983.0], [41.7, 1987.0], [41.8, 1987.0], [41.9, 1988.0], [42.0, 1988.0], [42.1, 1990.0], [42.2, 1990.0], [42.3, 1990.0], [42.4, 1990.0], [42.5, 1992.0], [42.6, 1992.0], [42.7, 1994.0], [42.8, 1994.0], [42.9, 1994.0], [43.0, 1994.0], [43.1, 1994.0], [43.2, 1994.0], [43.3, 1994.0], [43.4, 1994.0], [43.5, 1995.0], [43.6, 1995.0], [43.7, 1996.0], [43.8, 1996.0], [43.9, 1997.0], [44.0, 1997.0], [44.1, 1999.0], [44.2, 1999.0], [44.3, 1999.0], [44.4, 1999.0], [44.5, 1999.0], [44.6, 1999.0], [44.7, 2000.0], [44.8, 2000.0], [44.9, 2001.0], [45.0, 2001.0], [45.1, 2003.0], [45.2, 2003.0], [45.3, 2003.0], [45.4, 2003.0], [45.5, 2003.0], [45.6, 2003.0], [45.7, 2004.0], [45.8, 2004.0], [45.9, 2006.0], [46.0, 2006.0], [46.1, 2006.0], [46.2, 2006.0], [46.3, 2010.0], [46.4, 2010.0], [46.5, 2010.0], [46.6, 2010.0], [46.7, 2011.0], [46.8, 2011.0], [46.9, 2013.0], [47.0, 2013.0], [47.1, 2018.0], [47.2, 2018.0], [47.3, 2020.0], [47.4, 2020.0], [47.5, 2020.0], [47.6, 2020.0], [47.7, 2023.0], [47.8, 2023.0], [47.9, 2024.0], [48.0, 2024.0], [48.1, 2024.0], [48.2, 2024.0], [48.3, 2025.0], [48.4, 2025.0], [48.5, 2026.0], [48.6, 2026.0], [48.7, 2027.0], [48.8, 2027.0], [48.9, 2029.0], [49.0, 2029.0], [49.1, 2031.0], [49.2, 2031.0], [49.3, 2033.0], [49.4, 2033.0], [49.5, 2034.0], [49.6, 2034.0], [49.7, 2035.0], [49.8, 2035.0], [49.9, 2036.0], [50.0, 2036.0], [50.1, 2041.0], [50.2, 2041.0], [50.3, 2043.0], [50.4, 2043.0], [50.5, 2045.0], [50.6, 2045.0], [50.7, 2046.0], [50.8, 2046.0], [50.9, 2046.0], [51.0, 2046.0], [51.1, 2047.0], [51.2, 2047.0], [51.3, 2050.0], [51.4, 2050.0], [51.5, 2050.0], [51.6, 2050.0], [51.7, 2051.0], [51.8, 2051.0], [51.9, 2052.0], [52.0, 2052.0], [52.1, 2053.0], [52.2, 2053.0], [52.3, 2055.0], [52.4, 2055.0], [52.5, 2057.0], [52.6, 2057.0], [52.7, 2058.0], [52.8, 2058.0], [52.9, 2059.0], [53.0, 2059.0], [53.1, 2061.0], [53.2, 2061.0], [53.3, 2062.0], [53.4, 2062.0], [53.5, 2062.0], [53.6, 2062.0], [53.7, 2064.0], [53.8, 2064.0], [53.9, 2067.0], [54.0, 2067.0], [54.1, 2067.0], [54.2, 2067.0], [54.3, 2069.0], [54.4, 2069.0], [54.5, 2070.0], [54.6, 2070.0], [54.7, 2070.0], [54.8, 2070.0], [54.9, 2071.0], [55.0, 2071.0], [55.1, 2071.0], [55.2, 2071.0], [55.3, 2071.0], [55.4, 2071.0], [55.5, 2073.0], [55.6, 2073.0], [55.7, 2080.0], [55.8, 2080.0], [55.9, 2081.0], [56.0, 2081.0], [56.1, 2083.0], [56.2, 2083.0], [56.3, 2083.0], [56.4, 2083.0], [56.5, 2086.0], [56.6, 2086.0], [56.7, 2087.0], [56.8, 2087.0], [56.9, 2089.0], [57.0, 2089.0], [57.1, 2089.0], [57.2, 2089.0], [57.3, 2091.0], [57.4, 2091.0], [57.5, 2091.0], [57.6, 2091.0], [57.7, 2091.0], [57.8, 2091.0], [57.9, 2092.0], [58.0, 2092.0], [58.1, 2094.0], [58.2, 2094.0], [58.3, 2098.0], [58.4, 2098.0], [58.5, 2098.0], [58.6, 2098.0], [58.7, 2099.0], [58.8, 2099.0], [58.9, 2101.0], [59.0, 2101.0], [59.1, 2101.0], [59.2, 2101.0], [59.3, 2102.0], [59.4, 2102.0], [59.5, 2102.0], [59.6, 2102.0], [59.7, 2103.0], [59.8, 2103.0], [59.9, 2111.0], [60.0, 2111.0], [60.1, 2111.0], [60.2, 2111.0], [60.3, 2111.0], [60.4, 2111.0], [60.5, 2113.0], [60.6, 2113.0], [60.7, 2114.0], [60.8, 2114.0], [60.9, 2114.0], [61.0, 2114.0], [61.1, 2115.0], [61.2, 2115.0], [61.3, 2116.0], [61.4, 2116.0], [61.5, 2117.0], [61.6, 2117.0], [61.7, 2118.0], [61.8, 2118.0], [61.9, 2119.0], [62.0, 2119.0], [62.1, 2119.0], [62.2, 2119.0], [62.3, 2119.0], [62.4, 2119.0], [62.5, 2120.0], [62.6, 2120.0], [62.7, 2121.0], [62.8, 2121.0], [62.9, 2121.0], [63.0, 2121.0], [63.1, 2123.0], [63.2, 2123.0], [63.3, 2123.0], [63.4, 2123.0], [63.5, 2124.0], [63.6, 2124.0], [63.7, 2125.0], [63.8, 2125.0], [63.9, 2126.0], [64.0, 2126.0], [64.1, 2126.0], [64.2, 2126.0], [64.3, 2129.0], [64.4, 2129.0], [64.5, 2132.0], [64.6, 2132.0], [64.7, 2132.0], [64.8, 2132.0], [64.9, 2133.0], [65.0, 2133.0], [65.1, 2135.0], [65.2, 2135.0], [65.3, 2135.0], [65.4, 2135.0], [65.5, 2139.0], [65.6, 2139.0], [65.7, 2139.0], [65.8, 2139.0], [65.9, 2141.0], [66.0, 2141.0], [66.1, 2141.0], [66.2, 2141.0], [66.3, 2142.0], [66.4, 2142.0], [66.5, 2142.0], [66.6, 2142.0], [66.7, 2145.0], [66.8, 2145.0], [66.9, 2148.0], [67.0, 2148.0], [67.1, 2150.0], [67.2, 2150.0], [67.3, 2151.0], [67.4, 2151.0], [67.5, 2153.0], [67.6, 2153.0], [67.7, 2153.0], [67.8, 2153.0], [67.9, 2154.0], [68.0, 2154.0], [68.1, 2155.0], [68.2, 2155.0], [68.3, 2158.0], [68.4, 2158.0], [68.5, 2159.0], [68.6, 2159.0], [68.7, 2160.0], [68.8, 2160.0], [68.9, 2161.0], [69.0, 2161.0], [69.1, 2162.0], [69.2, 2162.0], [69.3, 2165.0], [69.4, 2165.0], [69.5, 2166.0], [69.6, 2166.0], [69.7, 2166.0], [69.8, 2166.0], [69.9, 2167.0], [70.0, 2167.0], [70.1, 2167.0], [70.2, 2167.0], [70.3, 2167.0], [70.4, 2167.0], [70.5, 2168.0], [70.6, 2168.0], [70.7, 2169.0], [70.8, 2169.0], [70.9, 2170.0], [71.0, 2170.0], [71.1, 2171.0], [71.2, 2171.0], [71.3, 2171.0], [71.4, 2171.0], [71.5, 2172.0], [71.6, 2172.0], [71.7, 2172.0], [71.8, 2172.0], [71.9, 2173.0], [72.0, 2173.0], [72.1, 2175.0], [72.2, 2175.0], [72.3, 2177.0], [72.4, 2177.0], [72.5, 2177.0], [72.6, 2177.0], [72.7, 2181.0], [72.8, 2181.0], [72.9, 2182.0], [73.0, 2182.0], [73.1, 2184.0], [73.2, 2184.0], [73.3, 2185.0], [73.4, 2185.0], [73.5, 2186.0], [73.6, 2186.0], [73.7, 2189.0], [73.8, 2189.0], [73.9, 2190.0], [74.0, 2190.0], [74.1, 2191.0], [74.2, 2191.0], [74.3, 2191.0], [74.4, 2191.0], [74.5, 2191.0], [74.6, 2191.0], [74.7, 2195.0], [74.8, 2195.0], [74.9, 2195.0], [75.0, 2195.0], [75.1, 2196.0], [75.2, 2196.0], [75.3, 2196.0], [75.4, 2196.0], [75.5, 2196.0], [75.6, 2196.0], [75.7, 2196.0], [75.8, 2196.0], [75.9, 2196.0], [76.0, 2196.0], [76.1, 2197.0], [76.2, 2197.0], [76.3, 2201.0], [76.4, 2201.0], [76.5, 2203.0], [76.6, 2203.0], [76.7, 2207.0], [76.8, 2207.0], [76.9, 2208.0], [77.0, 2208.0], [77.1, 2209.0], [77.2, 2209.0], [77.3, 2211.0], [77.4, 2211.0], [77.5, 2212.0], [77.6, 2212.0], [77.7, 2213.0], [77.8, 2213.0], [77.9, 2213.0], [78.0, 2213.0], [78.1, 2214.0], [78.2, 2214.0], [78.3, 2214.0], [78.4, 2214.0], [78.5, 2215.0], [78.6, 2215.0], [78.7, 2215.0], [78.8, 2215.0], [78.9, 2216.0], [79.0, 2216.0], [79.1, 2217.0], [79.2, 2217.0], [79.3, 2219.0], [79.4, 2219.0], [79.5, 2219.0], [79.6, 2219.0], [79.7, 2220.0], [79.8, 2220.0], [79.9, 2222.0], [80.0, 2222.0], [80.1, 2225.0], [80.2, 2225.0], [80.3, 2225.0], [80.4, 2225.0], [80.5, 2226.0], [80.6, 2226.0], [80.7, 2230.0], [80.8, 2230.0], [80.9, 2230.0], [81.0, 2230.0], [81.1, 2231.0], [81.2, 2231.0], [81.3, 2233.0], [81.4, 2233.0], [81.5, 2234.0], [81.6, 2234.0], [81.7, 2235.0], [81.8, 2235.0], [81.9, 2236.0], [82.0, 2236.0], [82.1, 2236.0], [82.2, 2236.0], [82.3, 2238.0], [82.4, 2238.0], [82.5, 2242.0], [82.6, 2242.0], [82.7, 2242.0], [82.8, 2242.0], [82.9, 2242.0], [83.0, 2242.0], [83.1, 2244.0], [83.2, 2244.0], [83.3, 2245.0], [83.4, 2245.0], [83.5, 2247.0], [83.6, 2247.0], [83.7, 2247.0], [83.8, 2247.0], [83.9, 2249.0], [84.0, 2249.0], [84.1, 2251.0], [84.2, 2251.0], [84.3, 2252.0], [84.4, 2252.0], [84.5, 2252.0], [84.6, 2252.0], [84.7, 2254.0], [84.8, 2254.0], [84.9, 2256.0], [85.0, 2256.0], [85.1, 2260.0], [85.2, 2260.0], [85.3, 2262.0], [85.4, 2262.0], [85.5, 2268.0], [85.6, 2268.0], [85.7, 2273.0], [85.8, 2273.0], [85.9, 2273.0], [86.0, 2273.0], [86.1, 2276.0], [86.2, 2276.0], [86.3, 2277.0], [86.4, 2277.0], [86.5, 2277.0], [86.6, 2277.0], [86.7, 2286.0], [86.8, 2286.0], [86.9, 2287.0], [87.0, 2287.0], [87.1, 2292.0], [87.2, 2292.0], [87.3, 2298.0], [87.4, 2298.0], [87.5, 2298.0], [87.6, 2298.0], [87.7, 2303.0], [87.8, 2303.0], [87.9, 2304.0], [88.0, 2304.0], [88.1, 2308.0], [88.2, 2308.0], [88.3, 2309.0], [88.4, 2309.0], [88.5, 2309.0], [88.6, 2309.0], [88.7, 2317.0], [88.8, 2317.0], [88.9, 2317.0], [89.0, 2317.0], [89.1, 2320.0], [89.2, 2320.0], [89.3, 2321.0], [89.4, 2321.0], [89.5, 2321.0], [89.6, 2321.0], [89.7, 2324.0], [89.8, 2324.0], [89.9, 2325.0], [90.0, 2325.0], [90.1, 2325.0], [90.2, 2325.0], [90.3, 2327.0], [90.4, 2327.0], [90.5, 2329.0], [90.6, 2329.0], [90.7, 2329.0], [90.8, 2329.0], [90.9, 2330.0], [91.0, 2330.0], [91.1, 2333.0], [91.2, 2333.0], [91.3, 2338.0], [91.4, 2338.0], [91.5, 2344.0], [91.6, 2344.0], [91.7, 2346.0], [91.8, 2346.0], [91.9, 2346.0], [92.0, 2346.0], [92.1, 2352.0], [92.2, 2352.0], [92.3, 2352.0], [92.4, 2352.0], [92.5, 2352.0], [92.6, 2352.0], [92.7, 2355.0], [92.8, 2355.0], [92.9, 2356.0], [93.0, 2356.0], [93.1, 2359.0], [93.2, 2359.0], [93.3, 2362.0], [93.4, 2362.0], [93.5, 2363.0], [93.6, 2363.0], [93.7, 2365.0], [93.8, 2365.0], [93.9, 2365.0], [94.0, 2365.0], [94.1, 2367.0], [94.2, 2367.0], [94.3, 2370.0], [94.4, 2370.0], [94.5, 2370.0], [94.6, 2370.0], [94.7, 2371.0], [94.8, 2371.0], [94.9, 2372.0], [95.0, 2372.0], [95.1, 2373.0], [95.2, 2373.0], [95.3, 2374.0], [95.4, 2374.0], [95.5, 2376.0], [95.6, 2376.0], [95.7, 2378.0], [95.8, 2378.0], [95.9, 2379.0], [96.0, 2379.0], [96.1, 2380.0], [96.2, 2380.0], [96.3, 2382.0], [96.4, 2382.0], [96.5, 2383.0], [96.6, 2383.0], [96.7, 2386.0], [96.8, 2386.0], [96.9, 2386.0], [97.0, 2386.0], [97.1, 2390.0], [97.2, 2390.0], [97.3, 2391.0], [97.4, 2391.0], [97.5, 2393.0], [97.6, 2393.0], [97.7, 2393.0], [97.8, 2393.0], [97.9, 2396.0], [98.0, 2396.0], [98.1, 2412.0], [98.2, 2412.0], [98.3, 2412.0], [98.4, 2412.0], [98.5, 2418.0], [98.6, 2418.0], [98.7, 2418.0], [98.8, 2418.0], [98.9, 2423.0], [99.0, 2423.0], [99.1, 2425.0], [99.2, 2425.0], [99.3, 2427.0], [99.4, 2427.0], [99.5, 2430.0], [99.6, 2430.0], [99.7, 2434.0], [99.8, 2434.0], [99.9, 2442.0], [100.0, 2442.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[0.0, 2549.0], [0.1, 2549.0], [0.2, 2553.0], [0.3, 2553.0], [0.4, 2554.0], [0.5, 2554.0], [0.6, 2554.0], [0.7, 2560.0], [0.8, 2561.0], [0.9, 2561.0], [1.0, 2561.0], [1.1, 2561.0], [1.2, 2561.0], [1.3, 2561.0], [1.4, 2562.0], [1.5, 2562.0], [1.6, 2566.0], [1.7, 2566.0], [1.8, 2569.0], [1.9, 2569.0], [2.0, 2569.0], [2.1, 2569.0], [2.2, 2574.0], [2.3, 2574.0], [2.4, 2578.0], [2.5, 2578.0], [2.6, 2578.0], [2.7, 2578.0], [2.8, 2586.0], [2.9, 2586.0], [3.0, 2594.0], [3.1, 2594.0], [3.2, 2595.0], [3.3, 2595.0], [3.4, 2595.0], [3.5, 2598.0], [3.6, 2598.0], [3.7, 2606.0], [3.8, 2606.0], [3.9, 2607.0], [4.0, 2607.0], [4.1, 2607.0], [4.2, 2607.0], [4.3, 2613.0], [4.4, 2613.0], [4.5, 2615.0], [4.6, 2615.0], [4.7, 2615.0], [4.8, 2615.0], [4.9, 2616.0], [5.0, 2616.0], [5.1, 2616.0], [5.2, 2616.0], [5.3, 2620.0], [5.4, 2620.0], [5.5, 2622.0], [5.6, 2622.0], [5.7, 2626.0], [5.8, 2626.0], [5.9, 2627.0], [6.0, 2627.0], [6.1, 2629.0], [6.2, 2629.0], [6.3, 2629.0], [6.4, 2629.0], [6.5, 2633.0], [6.6, 2633.0], [6.7, 2634.0], [6.8, 2634.0], [6.9, 2637.0], [7.0, 2637.0], [7.1, 2643.0], [7.2, 2643.0], [7.3, 2643.0], [7.4, 2643.0], [7.5, 2645.0], [7.6, 2645.0], [7.7, 2647.0], [7.8, 2647.0], [7.9, 2648.0], [8.0, 2648.0], [8.1, 2649.0], [8.2, 2649.0], [8.3, 2649.0], [8.4, 2649.0], [8.5, 2652.0], [8.6, 2652.0], [8.7, 2655.0], [8.8, 2655.0], [8.9, 2658.0], [9.0, 2658.0], [9.1, 2661.0], [9.2, 2661.0], [9.3, 2673.0], [9.4, 2674.0], [9.5, 2674.0], [9.6, 2679.0], [9.7, 2679.0], [9.8, 2681.0], [9.9, 2681.0], [10.0, 2681.0], [10.1, 2681.0], [10.2, 2682.0], [10.3, 2682.0], [10.4, 2683.0], [10.5, 2683.0], [10.6, 2684.0], [10.7, 2684.0], [10.8, 2684.0], [10.9, 2684.0], [11.0, 2684.0], [11.1, 2684.0], [11.2, 2684.0], [11.3, 2684.0], [11.4, 2687.0], [11.5, 2687.0], [11.6, 2688.0], [11.7, 2688.0], [11.8, 2690.0], [11.9, 2690.0], [12.0, 2690.0], [12.1, 2690.0], [12.2, 2692.0], [12.3, 2692.0], [12.4, 2695.0], [12.5, 2695.0], [12.6, 2696.0], [12.7, 2696.0], [12.8, 2699.0], [12.9, 2699.0], [13.0, 2701.0], [13.1, 2701.0], [13.2, 2701.0], [13.3, 2701.0], [13.4, 2702.0], [13.5, 2702.0], [13.6, 2703.0], [13.7, 2703.0], [13.8, 2704.0], [13.9, 2704.0], [14.0, 2705.0], [14.1, 2705.0], [14.2, 2706.0], [14.3, 2706.0], [14.4, 2713.0], [14.5, 2713.0], [14.6, 2713.0], [14.7, 2713.0], [14.8, 2715.0], [14.9, 2715.0], [15.0, 2715.0], [15.1, 2715.0], [15.2, 2717.0], [15.3, 2717.0], [15.4, 2719.0], [15.5, 2719.0], [15.6, 2722.0], [15.7, 2722.0], [15.8, 2724.0], [15.9, 2724.0], [16.0, 2724.0], [16.1, 2724.0], [16.2, 2724.0], [16.3, 2724.0], [16.4, 2725.0], [16.5, 2725.0], [16.6, 2726.0], [16.7, 2726.0], [16.8, 2727.0], [16.9, 2727.0], [17.0, 2729.0], [17.1, 2729.0], [17.2, 2729.0], [17.3, 2729.0], [17.4, 2734.0], [17.5, 2734.0], [17.6, 2734.0], [17.7, 2734.0], [17.8, 2734.0], [17.9, 2734.0], [18.0, 2736.0], [18.1, 2736.0], [18.2, 2738.0], [18.3, 2738.0], [18.4, 2739.0], [18.5, 2739.0], [18.6, 2740.0], [18.7, 2740.0], [18.8, 2740.0], [18.9, 2740.0], [19.0, 2744.0], [19.1, 2744.0], [19.2, 2745.0], [19.3, 2745.0], [19.4, 2745.0], [19.5, 2745.0], [19.6, 2746.0], [19.7, 2746.0], [19.8, 2747.0], [19.9, 2747.0], [20.0, 2752.0], [20.1, 2752.0], [20.2, 2754.0], [20.3, 2754.0], [20.4, 2754.0], [20.5, 2754.0], [20.6, 2757.0], [20.7, 2757.0], [20.8, 2760.0], [20.9, 2760.0], [21.0, 2760.0], [21.1, 2760.0], [21.2, 2761.0], [21.3, 2761.0], [21.4, 2761.0], [21.5, 2761.0], [21.6, 2762.0], [21.7, 2762.0], [21.8, 2763.0], [21.9, 2763.0], [22.0, 2772.0], [22.1, 2772.0], [22.2, 2773.0], [22.3, 2773.0], [22.4, 2774.0], [22.5, 2774.0], [22.6, 2775.0], [22.7, 2775.0], [22.8, 2776.0], [22.9, 2776.0], [23.0, 2779.0], [23.1, 2779.0], [23.2, 2779.0], [23.3, 2779.0], [23.4, 2780.0], [23.5, 2780.0], [23.6, 2781.0], [23.7, 2781.0], [23.8, 2783.0], [23.9, 2783.0], [24.0, 2784.0], [24.1, 2784.0], [24.2, 2784.0], [24.3, 2784.0], [24.4, 2785.0], [24.5, 2785.0], [24.6, 2787.0], [24.7, 2787.0], [24.8, 2787.0], [24.9, 2787.0], [25.0, 2790.0], [25.1, 2790.0], [25.2, 2793.0], [25.3, 2793.0], [25.4, 2795.0], [25.5, 2795.0], [25.6, 2796.0], [25.7, 2796.0], [25.8, 2801.0], [25.9, 2801.0], [26.0, 2803.0], [26.1, 2803.0], [26.2, 2803.0], [26.3, 2803.0], [26.4, 2804.0], [26.5, 2804.0], [26.6, 2806.0], [26.7, 2806.0], [26.8, 2806.0], [26.9, 2806.0], [27.0, 2807.0], [27.1, 2807.0], [27.2, 2808.0], [27.3, 2808.0], [27.4, 2809.0], [27.5, 2809.0], [27.6, 2811.0], [27.7, 2811.0], [27.8, 2812.0], [27.9, 2812.0], [28.0, 2812.0], [28.1, 2812.0], [28.2, 2813.0], [28.3, 2813.0], [28.4, 2817.0], [28.5, 2817.0], [28.6, 2818.0], [28.7, 2818.0], [28.8, 2819.0], [28.9, 2819.0], [29.0, 2819.0], [29.1, 2819.0], [29.2, 2822.0], [29.3, 2822.0], [29.4, 2822.0], [29.5, 2822.0], [29.6, 2822.0], [29.7, 2822.0], [29.8, 2822.0], [29.9, 2822.0], [30.0, 2825.0], [30.1, 2825.0], [30.2, 2826.0], [30.3, 2826.0], [30.4, 2827.0], [30.5, 2827.0], [30.6, 2828.0], [30.7, 2828.0], [30.8, 2831.0], [30.9, 2831.0], [31.0, 2839.0], [31.1, 2839.0], [31.2, 2841.0], [31.3, 2841.0], [31.4, 2843.0], [31.5, 2843.0], [31.6, 2843.0], [31.7, 2843.0], [31.8, 2844.0], [31.9, 2844.0], [32.0, 2845.0], [32.1, 2845.0], [32.2, 2847.0], [32.3, 2847.0], [32.4, 2849.0], [32.5, 2849.0], [32.6, 2854.0], [32.7, 2854.0], [32.8, 2855.0], [32.9, 2855.0], [33.0, 2855.0], [33.1, 2855.0], [33.2, 2859.0], [33.3, 2859.0], [33.4, 2860.0], [33.5, 2860.0], [33.6, 2863.0], [33.7, 2863.0], [33.8, 2867.0], [33.9, 2867.0], [34.0, 2868.0], [34.1, 2868.0], [34.2, 2870.0], [34.3, 2870.0], [34.4, 2870.0], [34.5, 2870.0], [34.6, 2872.0], [34.7, 2872.0], [34.8, 2872.0], [34.9, 2872.0], [35.0, 2872.0], [35.1, 2872.0], [35.2, 2873.0], [35.3, 2873.0], [35.4, 2874.0], [35.5, 2874.0], [35.6, 2875.0], [35.7, 2875.0], [35.8, 2877.0], [35.9, 2877.0], [36.0, 2878.0], [36.1, 2878.0], [36.2, 2880.0], [36.3, 2880.0], [36.4, 2881.0], [36.5, 2881.0], [36.6, 2882.0], [36.7, 2882.0], [36.8, 2885.0], [36.9, 2885.0], [37.0, 2886.0], [37.1, 2886.0], [37.2, 2890.0], [37.3, 2890.0], [37.4, 2891.0], [37.5, 2891.0], [37.6, 2892.0], [37.7, 2892.0], [37.8, 2892.0], [37.9, 2893.0], [38.0, 2893.0], [38.1, 2897.0], [38.2, 2897.0], [38.3, 2899.0], [38.4, 2899.0], [38.5, 2899.0], [38.6, 2899.0], [38.7, 2902.0], [38.8, 2902.0], [38.9, 2902.0], [39.0, 2902.0], [39.1, 2909.0], [39.2, 2909.0], [39.3, 2910.0], [39.4, 2910.0], [39.5, 2910.0], [39.6, 2910.0], [39.7, 2912.0], [39.8, 2912.0], [39.9, 2914.0], [40.0, 2914.0], [40.1, 2914.0], [40.2, 2914.0], [40.3, 2916.0], [40.4, 2916.0], [40.5, 2916.0], [40.6, 2916.0], [40.7, 2918.0], [40.8, 2918.0], [40.9, 2919.0], [41.0, 2919.0], [41.1, 2919.0], [41.2, 2919.0], [41.3, 2919.0], [41.4, 2919.0], [41.5, 2920.0], [41.6, 2920.0], [41.7, 2922.0], [41.8, 2922.0], [41.9, 2925.0], [42.0, 2925.0], [42.1, 2931.0], [42.2, 2931.0], [42.3, 2931.0], [42.4, 2931.0], [42.5, 2932.0], [42.6, 2932.0], [42.7, 2936.0], [42.8, 2936.0], [42.9, 2937.0], [43.0, 2937.0], [43.1, 2938.0], [43.2, 2938.0], [43.3, 2938.0], [43.4, 2938.0], [43.5, 2940.0], [43.6, 2940.0], [43.7, 2941.0], [43.8, 2941.0], [43.9, 2943.0], [44.0, 2943.0], [44.1, 2944.0], [44.2, 2944.0], [44.3, 2944.0], [44.4, 2944.0], [44.5, 2944.0], [44.6, 2944.0], [44.7, 2945.0], [44.8, 2945.0], [44.9, 2945.0], [45.0, 2945.0], [45.1, 2945.0], [45.2, 2945.0], [45.3, 2946.0], [45.4, 2946.0], [45.5, 2946.0], [45.6, 2946.0], [45.7, 2947.0], [45.8, 2947.0], [45.9, 2947.0], [46.0, 2947.0], [46.1, 2947.0], [46.2, 2947.0], [46.3, 2948.0], [46.4, 2948.0], [46.5, 2948.0], [46.6, 2948.0], [46.7, 2949.0], [46.8, 2949.0], [46.9, 2949.0], [47.0, 2949.0], [47.1, 2950.0], [47.2, 2950.0], [47.3, 2952.0], [47.4, 2952.0], [47.5, 2953.0], [47.6, 2953.0], [47.7, 2953.0], [47.8, 2953.0], [47.9, 2955.0], [48.0, 2955.0], [48.1, 2955.0], [48.2, 2955.0], [48.3, 2956.0], [48.4, 2956.0], [48.5, 2956.0], [48.6, 2956.0], [48.7, 2957.0], [48.8, 2957.0], [48.9, 2957.0], [49.0, 2957.0], [49.1, 2958.0], [49.2, 2958.0], [49.3, 2959.0], [49.4, 2959.0], [49.5, 2960.0], [49.6, 2960.0], [49.7, 2960.0], [49.8, 2960.0], [49.9, 2962.0], [50.0, 2962.0], [50.1, 2962.0], [50.2, 2962.0], [50.3, 2962.0], [50.4, 2962.0], [50.5, 2964.0], [50.6, 2964.0], [50.7, 2965.0], [50.8, 2965.0], [50.9, 2965.0], [51.0, 2965.0], [51.1, 2966.0], [51.2, 2966.0], [51.3, 2966.0], [51.4, 2966.0], [51.5, 2967.0], [51.6, 2967.0], [51.7, 2967.0], [51.8, 2967.0], [51.9, 2968.0], [52.0, 2968.0], [52.1, 2969.0], [52.2, 2969.0], [52.3, 2970.0], [52.4, 2970.0], [52.5, 2972.0], [52.6, 2972.0], [52.7, 2974.0], [52.8, 2974.0], [52.9, 2975.0], [53.0, 2975.0], [53.1, 2975.0], [53.2, 2975.0], [53.3, 2975.0], [53.4, 2975.0], [53.5, 2977.0], [53.6, 2977.0], [53.7, 2979.0], [53.8, 2979.0], [53.9, 2979.0], [54.0, 2979.0], [54.1, 2983.0], [54.2, 2983.0], [54.3, 2983.0], [54.4, 2983.0], [54.5, 2985.0], [54.6, 2985.0], [54.7, 2986.0], [54.8, 2986.0], [54.9, 2986.0], [55.0, 2986.0], [55.1, 2989.0], [55.2, 2989.0], [55.3, 2990.0], [55.4, 2990.0], [55.5, 2990.0], [55.6, 2990.0], [55.7, 2992.0], [55.8, 2992.0], [55.9, 2993.0], [56.0, 2993.0], [56.1, 2993.0], [56.2, 2993.0], [56.3, 2996.0], [56.4, 2996.0], [56.5, 2996.0], [56.6, 2996.0], [56.7, 2996.0], [56.8, 2996.0], [56.9, 2997.0], [57.0, 2997.0], [57.1, 2998.0], [57.2, 2998.0], [57.3, 2998.0], [57.4, 2998.0], [57.5, 2998.0], [57.6, 2998.0], [57.7, 2999.0], [57.8, 2999.0], [57.9, 3002.0], [58.0, 3002.0], [58.1, 3003.0], [58.2, 3003.0], [58.3, 3004.0], [58.4, 3004.0], [58.5, 3004.0], [58.6, 3004.0], [58.7, 3004.0], [58.8, 3004.0], [58.9, 3006.0], [59.0, 3006.0], [59.1, 3007.0], [59.2, 3007.0], [59.3, 3010.0], [59.4, 3010.0], [59.5, 3012.0], [59.6, 3012.0], [59.7, 3014.0], [59.8, 3014.0], [59.9, 3014.0], [60.0, 3014.0], [60.1, 3017.0], [60.2, 3017.0], [60.3, 3022.0], [60.4, 3022.0], [60.5, 3025.0], [60.6, 3025.0], [60.7, 3028.0], [60.8, 3028.0], [60.9, 3029.0], [61.0, 3029.0], [61.1, 3031.0], [61.2, 3031.0], [61.3, 3035.0], [61.4, 3035.0], [61.5, 3035.0], [61.6, 3035.0], [61.7, 3036.0], [61.8, 3036.0], [61.9, 3038.0], [62.0, 3038.0], [62.1, 3039.0], [62.2, 3039.0], [62.3, 3040.0], [62.4, 3040.0], [62.5, 3041.0], [62.6, 3041.0], [62.7, 3041.0], [62.8, 3041.0], [62.9, 3042.0], [63.0, 3042.0], [63.1, 3043.0], [63.2, 3043.0], [63.3, 3043.0], [63.4, 3043.0], [63.5, 3044.0], [63.6, 3044.0], [63.7, 3044.0], [63.8, 3044.0], [63.9, 3044.0], [64.0, 3044.0], [64.1, 3045.0], [64.2, 3045.0], [64.3, 3045.0], [64.4, 3045.0], [64.5, 3048.0], [64.6, 3048.0], [64.7, 3049.0], [64.8, 3049.0], [64.9, 3052.0], [65.0, 3052.0], [65.1, 3054.0], [65.2, 3054.0], [65.3, 3055.0], [65.4, 3055.0], [65.5, 3056.0], [65.6, 3056.0], [65.7, 3057.0], [65.8, 3057.0], [65.9, 3058.0], [66.0, 3058.0], [66.1, 3058.0], [66.2, 3058.0], [66.3, 3058.0], [66.4, 3058.0], [66.5, 3060.0], [66.6, 3060.0], [66.7, 3062.0], [66.8, 3062.0], [66.9, 3062.0], [67.0, 3062.0], [67.1, 3063.0], [67.2, 3063.0], [67.3, 3063.0], [67.4, 3063.0], [67.5, 3063.0], [67.6, 3063.0], [67.7, 3063.0], [67.8, 3063.0], [67.9, 3064.0], [68.0, 3064.0], [68.1, 3066.0], [68.2, 3066.0], [68.3, 3066.0], [68.4, 3066.0], [68.5, 3072.0], [68.6, 3072.0], [68.7, 3072.0], [68.8, 3072.0], [68.9, 3073.0], [69.0, 3073.0], [69.1, 3073.0], [69.2, 3073.0], [69.3, 3074.0], [69.4, 3074.0], [69.5, 3074.0], [69.6, 3074.0], [69.7, 3076.0], [69.8, 3076.0], [69.9, 3080.0], [70.0, 3080.0], [70.1, 3081.0], [70.2, 3081.0], [70.3, 3083.0], [70.4, 3083.0], [70.5, 3086.0], [70.6, 3086.0], [70.7, 3086.0], [70.8, 3086.0], [70.9, 3087.0], [71.0, 3087.0], [71.1, 3087.0], [71.2, 3087.0], [71.3, 3087.0], [71.4, 3087.0], [71.5, 3088.0], [71.6, 3088.0], [71.7, 3088.0], [71.8, 3088.0], [71.9, 3088.0], [72.0, 3088.0], [72.1, 3089.0], [72.2, 3089.0], [72.3, 3090.0], [72.4, 3090.0], [72.5, 3090.0], [72.6, 3090.0], [72.7, 3090.0], [72.8, 3090.0], [72.9, 3091.0], [73.0, 3091.0], [73.1, 3091.0], [73.2, 3091.0], [73.3, 3093.0], [73.4, 3093.0], [73.5, 3094.0], [73.6, 3094.0], [73.7, 3095.0], [73.8, 3095.0], [73.9, 3098.0], [74.0, 3098.0], [74.1, 3098.0], [74.2, 3098.0], [74.3, 3099.0], [74.4, 3099.0], [74.5, 3099.0], [74.6, 3099.0], [74.7, 3100.0], [74.8, 3100.0], [74.9, 3101.0], [75.0, 3101.0], [75.1, 3101.0], [75.2, 3101.0], [75.3, 3101.0], [75.4, 3101.0], [75.5, 3101.0], [75.6, 3101.0], [75.7, 3102.0], [75.8, 3102.0], [75.9, 3102.0], [76.0, 3102.0], [76.1, 3104.0], [76.2, 3104.0], [76.3, 3105.0], [76.4, 3105.0], [76.5, 3105.0], [76.6, 3105.0], [76.7, 3106.0], [76.8, 3106.0], [76.9, 3106.0], [77.0, 3106.0], [77.1, 3107.0], [77.2, 3107.0], [77.3, 3107.0], [77.4, 3107.0], [77.5, 3109.0], [77.6, 3109.0], [77.7, 3110.0], [77.8, 3110.0], [77.9, 3110.0], [78.0, 3110.0], [78.1, 3110.0], [78.2, 3110.0], [78.3, 3110.0], [78.4, 3110.0], [78.5, 3111.0], [78.6, 3111.0], [78.7, 3113.0], [78.8, 3113.0], [78.9, 3114.0], [79.0, 3114.0], [79.1, 3115.0], [79.2, 3115.0], [79.3, 3115.0], [79.4, 3115.0], [79.5, 3117.0], [79.6, 3117.0], [79.7, 3119.0], [79.8, 3119.0], [79.9, 3121.0], [80.0, 3121.0], [80.1, 3121.0], [80.2, 3121.0], [80.3, 3121.0], [80.4, 3121.0], [80.5, 3123.0], [80.6, 3123.0], [80.7, 3123.0], [80.8, 3123.0], [80.9, 3124.0], [81.0, 3124.0], [81.1, 3124.0], [81.2, 3124.0], [81.3, 3125.0], [81.4, 3125.0], [81.5, 3127.0], [81.6, 3127.0], [81.7, 3128.0], [81.8, 3128.0], [81.9, 3131.0], [82.0, 3131.0], [82.1, 3131.0], [82.2, 3131.0], [82.3, 3135.0], [82.4, 3135.0], [82.5, 3135.0], [82.6, 3135.0], [82.7, 3136.0], [82.8, 3136.0], [82.9, 3142.0], [83.0, 3142.0], [83.1, 3143.0], [83.2, 3143.0], [83.3, 3148.0], [83.4, 3148.0], [83.5, 3148.0], [83.6, 3148.0], [83.7, 3148.0], [83.8, 3148.0], [83.9, 3148.0], [84.0, 3148.0], [84.1, 3148.0], [84.2, 3148.0], [84.3, 3149.0], [84.4, 3149.0], [84.5, 3149.0], [84.6, 3149.0], [84.7, 3151.0], [84.8, 3151.0], [84.9, 3151.0], [85.0, 3151.0], [85.1, 3151.0], [85.2, 3151.0], [85.3, 3152.0], [85.4, 3152.0], [85.5, 3153.0], [85.6, 3153.0], [85.7, 3153.0], [85.8, 3153.0], [85.9, 3153.0], [86.0, 3153.0], [86.1, 3154.0], [86.2, 3154.0], [86.3, 3154.0], [86.4, 3154.0], [86.5, 3155.0], [86.6, 3155.0], [86.7, 3155.0], [86.8, 3155.0], [86.9, 3156.0], [87.0, 3156.0], [87.1, 3160.0], [87.2, 3160.0], [87.3, 3160.0], [87.4, 3160.0], [87.5, 3163.0], [87.6, 3163.0], [87.7, 3164.0], [87.8, 3164.0], [87.9, 3168.0], [88.0, 3168.0], [88.1, 3170.0], [88.2, 3170.0], [88.3, 3170.0], [88.4, 3170.0], [88.5, 3170.0], [88.6, 3170.0], [88.7, 3176.0], [88.8, 3176.0], [88.9, 3177.0], [89.0, 3177.0], [89.1, 3178.0], [89.2, 3178.0], [89.3, 3179.0], [89.4, 3179.0], [89.5, 3182.0], [89.6, 3182.0], [89.7, 3184.0], [89.8, 3184.0], [89.9, 3187.0], [90.0, 3187.0], [90.1, 3191.0], [90.2, 3191.0], [90.3, 3197.0], [90.4, 3197.0], [90.5, 3206.0], [90.6, 3206.0], [90.7, 3206.0], [90.8, 3206.0], [90.9, 3207.0], [91.0, 3207.0], [91.1, 3208.0], [91.2, 3208.0], [91.3, 3209.0], [91.4, 3209.0], [91.5, 3209.0], [91.6, 3209.0], [91.7, 3209.0], [91.8, 3209.0], [91.9, 3209.0], [92.0, 3209.0], [92.1, 3211.0], [92.2, 3211.0], [92.3, 3216.0], [92.4, 3216.0], [92.5, 3218.0], [92.6, 3218.0], [92.7, 3225.0], [92.8, 3225.0], [92.9, 3226.0], [93.0, 3226.0], [93.1, 3229.0], [93.2, 3229.0], [93.3, 3234.0], [93.4, 3234.0], [93.5, 3237.0], [93.6, 3237.0], [93.7, 3238.0], [93.8, 3238.0], [93.9, 3245.0], [94.0, 3245.0], [94.1, 3246.0], [94.2, 3246.0], [94.3, 3252.0], [94.4, 3252.0], [94.5, 3257.0], [94.6, 3257.0], [94.7, 3258.0], [94.8, 3258.0], [94.9, 3259.0], [95.0, 3259.0], [95.1, 3260.0], [95.2, 3260.0], [95.3, 3261.0], [95.4, 3261.0], [95.5, 3263.0], [95.6, 3263.0], [95.7, 3265.0], [95.8, 3265.0], [95.9, 3277.0], [96.0, 3277.0], [96.1, 3281.0], [96.2, 3281.0], [96.3, 3296.0], [96.4, 3296.0], [96.5, 3303.0], [96.6, 3303.0], [96.7, 3308.0], [96.8, 3308.0], [96.9, 3314.0], [97.0, 3314.0], [97.1, 3322.0], [97.2, 3322.0], [97.3, 3336.0], [97.4, 3336.0], [97.5, 3342.0], [97.6, 3342.0], [97.7, 3386.0], [97.8, 3386.0], [97.9, 3387.0], [98.0, 3387.0], [98.1, 3404.0], [98.2, 3404.0], [98.3, 3430.0], [98.4, 3430.0], [98.5, 3444.0], [98.6, 3444.0], [98.7, 3449.0], [98.8, 3449.0], [98.9, 3453.0], [99.0, 3453.0], [99.1, 3453.0], [99.2, 3453.0], [99.3, 3458.0], [99.4, 3458.0], [99.5, 3459.0], [99.6, 3459.0], [99.7, 3466.0], [99.8, 3466.0], [99.9, 3475.0], [100.0, 3475.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 211.0, "series": [{"data": [[600.0, 72.0], [700.0, 6.0], [800.0, 3.0], [900.0, 3.0], [300.0, 4.0], [1400.0, 3.0], [1500.0, 17.0], [1600.0, 27.0], [400.0, 125.0], [1700.0, 3.0], [1800.0, 23.0], [1900.0, 3.0], [500.0, 211.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[2500.0, 3.0], [2600.0, 2.0], [2700.0, 5.0], [2800.0, 2.0], [2900.0, 3.0], [800.0, 3.0], [200.0, 189.0], [900.0, 25.0], [1000.0, 28.0], [1200.0, 14.0], [300.0, 148.0], [1300.0, 10.0], [1400.0, 2.0], [1600.0, 2.0], [100.0, 63.0], [400.0, 1.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[2100.0, 87.0], [2200.0, 57.0], [2300.0, 52.0], [600.0, 3.0], [2400.0, 10.0], [700.0, 1.0], [200.0, 73.0], [1200.0, 1.0], [1500.0, 3.0], [100.0, 18.0], [1700.0, 13.0], [1800.0, 49.0], [1900.0, 62.0], [2000.0, 71.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[2500.0, 18.0], [2600.0, 47.0], [2800.0, 64.0], [2700.0, 64.0], [2900.0, 96.0], [3000.0, 84.0], [3100.0, 79.0], [3200.0, 30.0], [3300.0, 8.0], [3400.0, 10.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 380.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 626.0, "series": [{"data": [[0.0, 626.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 380.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 494.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 359.29299999999995, "minX": 1.60876278E12, "maxY": 359.29299999999995, "series": [{"data": [[1.60876278E12, 359.29299999999995]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876278E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 172.15384615384616, "minX": 1.0, "maxY": 3475.0, "series": [{"data": [[2.0, 848.0], [3.0, 804.0], [4.0, 837.0], [6.0, 790.5], [7.0, 686.0], [8.0, 577.0], [9.0, 552.0], [10.0, 531.0], [12.0, 531.5], [14.0, 539.0], [15.0, 533.5], [18.0, 464.0], [20.0, 475.0], [21.0, 316.0], [22.0, 528.0], [25.0, 453.3333333333333], [26.0, 444.0], [29.0, 475.6666666666667], [31.0, 538.0], [32.0, 511.5], [35.0, 541.3333333333334], [37.0, 571.0], [36.0, 445.0], [39.0, 565.0], [38.0, 509.0], [43.0, 462.0], [42.0, 463.3333333333333], [45.0, 506.0], [44.0, 539.0], [46.0, 526.0], [49.0, 454.0], [48.0, 527.0], [53.0, 428.5], [54.0, 501.0], [57.0, 506.0], [60.0, 481.6666666666667], [63.0, 475.6666666666667], [67.0, 481.5], [65.0, 459.0], [70.0, 496.0], [69.0, 453.5], [75.0, 463.5], [74.0, 470.0], [72.0, 484.5], [79.0, 439.5], [77.0, 429.0], [76.0, 443.0], [82.0, 511.0], [81.0, 486.0], [80.0, 462.0], [84.0, 456.5], [90.0, 463.6666666666667], [95.0, 457.0], [94.0, 458.0], [98.0, 502.0], [96.0, 450.0], [103.0, 463.0], [101.0, 497.0], [107.0, 425.0], [106.0, 459.0], [105.0, 440.0], [104.0, 510.0], [111.0, 455.0], [110.0, 452.0], [108.0, 432.0], [114.0, 474.0], [112.0, 441.0], [119.0, 448.0], [118.0, 498.0], [116.0, 463.0], [123.0, 474.0], [122.0, 473.0], [121.0, 484.5], [127.0, 484.0], [126.0, 473.0], [125.0, 496.5], [135.0, 490.0], [134.0, 490.2], [129.0, 476.0], [143.0, 467.5], [139.0, 445.0], [138.0, 489.0], [137.0, 510.5], [151.0, 494.0], [150.0, 492.0], [149.0, 533.0], [148.0, 495.0], [147.0, 468.5], [146.0, 492.0], [144.0, 515.0], [157.0, 633.0], [155.0, 455.6666666666667], [154.0, 452.0], [167.0, 488.0], [166.0, 490.0], [165.0, 486.0], [164.0, 498.0], [162.0, 490.3333333333333], [175.0, 553.0], [173.0, 532.0], [171.0, 505.0], [170.0, 499.0], [183.0, 519.0], [181.0, 500.3333333333333], [180.0, 484.0], [177.0, 491.3333333333333], [191.0, 521.0], [189.0, 475.0], [188.0, 534.0], [187.0, 481.0], [186.0, 508.0], [185.0, 514.0], [184.0, 581.0], [198.0, 576.0], [197.0, 526.5], [196.0, 476.0], [194.0, 517.5], [192.0, 586.0], [207.0, 511.0], [205.0, 546.0], [204.0, 527.5], [202.0, 557.5], [200.0, 495.0], [215.0, 559.5], [213.0, 509.0], [212.0, 565.5], [211.0, 614.0], [210.0, 521.0], [209.0, 496.0], [222.0, 508.5], [221.0, 543.5], [220.0, 525.0], [218.0, 635.0], [216.0, 618.0], [231.0, 559.0], [227.0, 521.3333333333334], [224.0, 506.0], [239.0, 557.0], [238.0, 502.0], [236.0, 511.0], [235.0, 488.0], [234.0, 498.0], [233.0, 547.0], [247.0, 611.0], [246.0, 614.6666666666666], [243.0, 517.6666666666666], [242.0, 619.0], [255.0, 591.0], [254.0, 524.0], [252.0, 562.75], [248.0, 619.0], [271.0, 560.0], [270.0, 525.0], [269.0, 607.0], [264.0, 549.0], [263.0, 585.0], [261.0, 527.0], [259.0, 588.0], [258.0, 552.3333333333334], [286.0, 589.75], [285.0, 587.0], [281.0, 588.5], [279.0, 607.5], [278.0, 546.0], [275.0, 524.0], [274.0, 526.0], [301.0, 555.0], [300.0, 567.0], [299.0, 593.0], [298.0, 559.5], [297.0, 581.0], [295.0, 585.5], [293.0, 572.0], [292.0, 509.0], [291.0, 585.5], [289.0, 594.3333333333334], [317.0, 569.0], [316.0, 577.0], [315.0, 623.0], [314.0, 568.0], [313.0, 624.0], [312.0, 596.0], [310.0, 630.0], [309.0, 569.5], [307.0, 606.6666666666666], [305.0, 598.6666666666666], [333.0, 597.0], [332.0, 617.0], [331.0, 613.0], [329.0, 580.0], [328.0, 603.6666666666666], [325.0, 620.3333333333334], [322.0, 582.0], [321.0, 612.0], [320.0, 581.0], [349.0, 596.5], [347.0, 598.0], [346.0, 608.0], [345.0, 596.0], [341.0, 597.0], [339.0, 595.0], [338.0, 616.5], [336.0, 612.0], [365.0, 597.0], [364.0, 593.5], [362.0, 594.3333333333334], [359.0, 587.0], [358.0, 592.3333333333334], [355.0, 600.3333333333334], [352.0, 603.0], [382.0, 542.0], [381.0, 571.5], [379.0, 588.0], [378.0, 570.5], [376.0, 553.0], [374.0, 560.0], [373.0, 570.0], [370.0, 587.6], [387.0, 583.5], [399.0, 643.0], [398.0, 613.0], [394.0, 585.0], [392.0, 580.0], [390.0, 577.5], [389.0, 583.0], [385.0, 572.0], [384.0, 558.5], [411.0, 597.0], [410.0, 601.0], [409.0, 609.0], [408.0, 611.0], [407.0, 606.5], [405.0, 567.0], [402.0, 577.5], [401.0, 565.0], [424.0, 1715.0], [429.0, 916.5], [427.0, 1860.0], [426.0, 1831.0], [425.0, 1600.0], [422.0, 735.0], [421.0, 690.5], [419.0, 608.0], [418.0, 716.5], [416.0, 594.4], [446.0, 1558.0], [445.0, 1572.0], [444.0, 1556.6666666666667], [443.0, 1594.0], [442.0, 1889.0], [439.0, 1588.0], [438.0, 1591.3333333333333], [435.0, 1616.6666666666667], [460.0, 1889.5], [456.0, 1874.0], [455.0, 1878.0], [454.0, 1890.0], [453.0, 1887.0], [449.0, 1570.3333333333333], [479.0, 1633.0], [476.0, 1624.0], [475.0, 1634.0], [474.0, 1482.0], [473.0, 1481.0], [472.0, 1486.0], [471.0, 1886.3333333333333], [468.0, 1878.5], [464.0, 1890.5], [494.0, 1609.5], [492.0, 1634.5], [490.0, 1641.6666666666667], [487.0, 1641.0], [485.0, 1674.6666666666667], [482.0, 1628.0], [481.0, 1633.0], [500.0, 1655.8333333333335], [1.0, 934.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[251.43599999999975, 719.9319999999996]], "isOverall": false, "label": "GET Home-Aggregated", "isController": false}, {"data": [[429.0, 2917.0], [427.0, 2978.0], [444.0, 2924.0], [460.0, 2890.0], [479.0, 326.0], [478.0, 320.0], [474.0, 381.6565656565656], [494.0, 2764.0], [492.0, 1540.0], [487.0, 319.0], [485.0, 317.0], [481.0, 320.5], [500.0, 484.0541237113396]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[494.1099999999998, 490.1459999999996]], "isOverall": false, "label": "POST Login-Aggregated", "isController": false}, {"data": [[148.0, 172.15384615384616], [162.0, 196.0], [165.0, 207.63636363636365], [166.0, 204.66666666666666], [167.0, 215.0], [168.0, 218.66666666666666], [169.0, 219.0], [170.0, 212.71428571428572], [171.0, 219.5], [173.0, 226.0], [174.0, 216.66666666666666], [184.0, 249.4], [186.0, 255.2], [187.0, 240.66666666666669], [188.0, 258.75], [189.0, 217.79999999999998], [190.0, 241.0], [192.0, 254.5], [194.0, 215.0], [439.0, 680.0], [440.0, 696.6666666666666], [500.0, 2093.5802469135792]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[440.18200000000013, 1741.1880000000012]], "isOverall": false, "label": "GET Login-Aggregated", "isController": false}, {"data": [[2.0, 3022.0], [3.0, 3014.0], [4.0, 2956.0], [6.0, 3046.5], [7.0, 3246.0], [8.0, 2790.0], [9.0, 2679.0], [10.0, 3029.0], [12.0, 2780.0], [14.0, 2633.0], [15.0, 2658.5], [18.0, 2899.0], [20.0, 2716.5], [21.0, 3466.0], [22.0, 3475.0], [25.0, 2963.6666666666665], [26.0, 2629.0], [29.0, 2882.6666666666665], [31.0, 2757.0], [32.0, 2728.5], [35.0, 2874.3333333333335], [37.0, 3063.0], [36.0, 2996.0], [39.0, 2986.0], [38.0, 2773.0], [43.0, 2962.0], [42.0, 2743.3333333333335], [45.0, 2627.0], [44.0, 2847.0], [46.0, 2681.0], [49.0, 2643.0], [48.0, 2751.0], [53.0, 3123.0], [54.0, 3449.0], [57.0, 2951.0], [60.0, 2797.3333333333335], [63.0, 2815.6666666666665], [67.0, 2826.0], [65.0, 2734.0], [70.0, 2779.0], [69.0, 2795.0], [75.0, 2655.0], [74.0, 2688.0], [72.0, 2790.0], [79.0, 3096.0], [77.0, 2914.0], [76.0, 3004.0], [82.0, 2616.0], [81.0, 2818.0], [80.0, 3010.0], [84.0, 2786.0], [90.0, 2761.3333333333335], [95.0, 2607.0], [94.0, 2786.25], [98.0, 2738.5], [96.0, 2690.0], [103.0, 2791.5], [101.0, 2703.5], [107.0, 2993.0], [106.0, 2881.0], [105.0, 2569.0], [104.0, 2806.0], [111.0, 2802.0], [110.0, 2765.5], [108.0, 2890.0], [114.0, 2700.5], [112.0, 2819.0], [119.0, 2561.0], [118.0, 2971.0], [116.0, 2598.5], [123.0, 2687.0], [122.0, 2725.0], [121.0, 2637.5], [127.0, 3430.0], [126.0, 2554.0], [125.0, 2656.0], [135.0, 2549.0], [134.0, 2815.8], [129.0, 2661.5], [143.0, 2886.25], [139.0, 2566.0], [138.0, 2574.0], [137.0, 2830.0], [151.0, 2761.0], [150.0, 2734.0], [149.0, 3151.0], [148.0, 2615.0], [147.0, 3042.0], [146.0, 2762.0], [144.0, 2746.0], [157.0, 2990.0], [155.0, 2675.3333333333335], [154.0, 2607.0], [167.0, 2649.0], [166.0, 2629.0], [165.0, 2561.0], [164.0, 2754.0], [162.0, 2669.0], [175.0, 2904.0], [173.0, 3024.6666666666665], [171.0, 2615.0], [170.0, 2611.3333333333335], [183.0, 2873.0], [181.0, 2826.3333333333335], [180.0, 3119.0], [177.0, 2765.6666666666665], [191.0, 3136.0], [189.0, 2761.0], [188.0, 3099.0], [187.0, 2578.0], [186.0, 3073.0], [185.0, 3155.0], [184.0, 3262.0], [198.0, 3277.0], [197.0, 2840.5], [196.0, 2806.0], [194.0, 2937.0], [192.0, 2997.0], [207.0, 2831.0], [205.0, 2775.0], [204.0, 2785.0], [202.0, 3120.5], [200.0, 2904.0], [215.0, 3210.0], [213.0, 2983.0], [212.0, 3022.0], [211.0, 3322.0], [210.0, 3004.0], [209.0, 2919.0], [222.0, 2958.5], [221.0, 2959.0], [220.0, 2831.0], [218.0, 3209.0], [216.0, 2979.0], [231.0, 3081.5], [227.0, 3062.0], [224.0, 2808.5], [239.0, 2877.5], [238.0, 2717.0], [236.0, 2760.0], [235.0, 2877.0], [234.0, 3056.0], [233.0, 3114.5], [247.0, 3261.0], [246.0, 3102.0], [243.0, 2849.3333333333335], [242.0, 2828.0], [255.0, 3226.0], [254.0, 2876.5], [252.0, 3044.25], [248.0, 3216.0], [271.0, 3149.0], [270.0, 2922.0], [269.0, 3007.6666666666665], [264.0, 2972.0], [263.0, 3131.5], [261.0, 2888.5], [259.0, 3003.0], [258.0, 3104.3333333333335], [286.0, 2933.75], [285.0, 3028.0], [281.0, 3203.0], [279.0, 3155.5], [278.0, 2990.0], [275.0, 2825.0], [274.0, 2871.5], [301.0, 3121.0], [300.0, 3218.0], [299.0, 3245.0], [298.0, 2815.5], [297.0, 3168.0], [295.0, 3021.0], [293.0, 3143.0], [292.0, 3039.0], [291.0, 3298.0], [289.0, 2918.6666666666665], [317.0, 2993.0], [316.0, 2967.0], [315.0, 3149.0], [314.0, 2953.0], [313.0, 2740.0], [312.0, 3055.5], [310.0, 3131.0], [309.0, 3231.5], [307.0, 3104.3333333333335], [305.0, 3108.6666666666665], [333.0, 3002.0], [332.0, 2965.5], [331.0, 3148.0], [329.0, 3225.0], [328.0, 3087.6666666666665], [325.0, 3155.3333333333335], [322.0, 3238.0], [321.0, 3062.0], [320.0, 2969.3333333333335], [349.0, 3082.0], [347.0, 2948.0], [346.0, 2931.0], [345.0, 2901.25], [341.0, 3104.5], [339.0, 3044.0], [338.0, 2977.0], [336.0, 2864.6666666666665], [365.0, 2776.0], [364.0, 3149.0], [362.0, 2937.3333333333335], [359.0, 3127.0], [358.0, 3049.3333333333335], [355.0, 2948.6666666666665], [352.0, 3171.0], [382.0, 3063.0], [381.0, 2988.5], [379.0, 2998.0], [378.0, 2893.5], [376.0, 2967.5], [374.0, 2964.0], [373.0, 2869.3333333333335], [370.0, 2973.6], [387.0, 2864.5], [399.0, 3038.0], [398.0, 3118.0], [394.0, 3045.0], [392.0, 3030.5], [390.0, 2963.0], [389.0, 3066.0], [385.0, 3164.0], [384.0, 2837.0], [411.0, 3160.0], [410.0, 3124.0], [409.0, 3100.0], [408.0, 3187.0], [407.0, 3087.75], [405.0, 2983.0], [402.0, 3027.5], [401.0, 2882.0], [424.0, 3132.5], [429.0, 3057.0], [427.0, 3160.0], [426.0, 3154.0], [425.0, 3123.0], [422.0, 3106.0], [421.0, 3114.0], [419.0, 3101.0], [418.0, 3152.0], [416.0, 3059.6], [446.0, 3101.0], [445.0, 3105.0], [444.0, 3084.6666666666665], [443.0, 3098.0], [442.0, 3109.0], [439.0, 3114.0], [438.0, 3112.6666666666665], [435.0, 3099.0], [460.0, 3075.0], [456.0, 3057.0], [455.0, 3058.0], [454.0, 3095.0], [453.0, 3085.25], [449.0, 3098.0], [479.0, 2953.6666666666665], [476.0, 2947.0], [475.0, 2960.0], [474.0, 2992.0], [473.0, 2996.0], [472.0, 3041.0], [471.0, 3089.3333333333335], [468.0, 3064.0], [464.0, 3083.5], [494.0, 2904.0], [492.0, 2945.5], [490.0, 2941.6666666666665], [487.0, 2933.0], [485.0, 2940.0], [482.0, 2949.0], [481.0, 2926.0], [500.0, 2930.1666666666665], [1.0, 3252.0]], "isOverall": false, "label": "Login", "isController": true}, {"data": [[251.43599999999975, 2951.266000000003]], "isOverall": false, "label": "Login-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14958.333333333334, "minX": 1.60876278E12, "maxY": 137197.33333333334, "series": [{"data": [[1.60876278E12, 137197.33333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60876278E12, 14958.333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876278E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 490.1459999999996, "minX": 1.60876278E12, "maxY": 2951.266000000003, "series": [{"data": [[1.60876278E12, 719.9319999999996]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60876278E12, 490.1459999999996]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60876278E12, 1741.1880000000012]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60876278E12, 2951.266000000003]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876278E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 490.10800000000046, "minX": 1.60876278E12, "maxY": 2950.294, "series": [{"data": [[1.60876278E12, 719.1200000000001]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60876278E12, 490.10800000000046]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60876278E12, 1741.065999999999]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60876278E12, 2950.294]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876278E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.60876278E12, "maxY": 76.86999999999999, "series": [{"data": [[1.60876278E12, 0.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60876278E12, 0.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60876278E12, 76.86999999999992]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60876278E12, 76.86999999999999]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876278E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 122.0, "minX": 1.60876278E12, "maxY": 2978.0, "series": [{"data": [[1.60876278E12, 2978.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60876278E12, 145.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60876278E12, 145.85990014314652]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60876278E12, 145.25949982106687]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.60876278E12, 122.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60876278E12, 569.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876278E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 218.0, "minX": 32.0, "maxY": 1628.0, "series": [{"data": [[32.0, 969.0], [91.0, 218.0], [394.0, 525.0], [54.0, 1284.5], [929.0, 1628.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 929.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 218.0, "minX": 32.0, "maxY": 1628.0, "series": [{"data": [[32.0, 969.0], [91.0, 218.0], [394.0, 524.5], [54.0, 1284.5], [929.0, 1628.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 929.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.60876278E12, "maxY": 25.0, "series": [{"data": [[1.60876278E12, 25.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876278E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.60876278E12, "maxY": 25.0, "series": [{"data": [[1.60876278E12, 25.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60876278E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.60876278E12, "maxY": 8.333333333333334, "series": [{"data": [[1.60876278E12, 8.333333333333334]], "isOverall": false, "label": "GET Home-success", "isController": false}, {"data": [[1.60876278E12, 8.333333333333334]], "isOverall": false, "label": "GET Login-success", "isController": false}, {"data": [[1.60876278E12, 8.333333333333334]], "isOverall": false, "label": "POST Login-success", "isController": false}, {"data": [[1.60876278E12, 8.333333333333334]], "isOverall": false, "label": "Login-success", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876278E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.60876278E12, "maxY": 33.333333333333336, "series": [{"data": [[1.60876278E12, 33.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60876278E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

