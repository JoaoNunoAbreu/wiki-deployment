/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 561.0, "minX": 0.0, "maxY": 49957.0, "series": [{"data": [[0.0, 561.0], [0.1, 842.0], [0.2, 1009.0], [0.3, 1167.0], [0.4, 1371.0], [0.5, 1451.0], [0.6, 1585.0], [0.7, 1913.0], [0.8, 2110.0], [0.9, 2501.0], [1.0, 2644.0], [1.1, 2814.0], [1.2, 2913.0], [1.3, 3071.0], [1.4, 3178.0], [1.5, 3258.0], [1.6, 3369.0], [1.7, 3444.0], [1.8, 3528.0], [1.9, 3687.0], [2.0, 3746.0], [2.1, 3792.0], [2.2, 3898.0], [2.3, 3994.0], [2.4, 4106.0], [2.5, 4186.0], [2.6, 4284.0], [2.7, 4406.0], [2.8, 4515.0], [2.9, 4641.0], [3.0, 4728.0], [3.1, 4763.0], [3.2, 4834.0], [3.3, 4904.0], [3.4, 4965.0], [3.5, 5048.0], [3.6, 5125.0], [3.7, 5195.0], [3.8, 5284.0], [3.9, 5364.0], [4.0, 5444.0], [4.1, 5536.0], [4.2, 5605.0], [4.3, 5727.0], [4.4, 5797.0], [4.5, 5861.0], [4.6, 5955.0], [4.7, 6034.0], [4.8, 6300.0], [4.9, 6398.0], [5.0, 6590.0], [5.1, 6683.0], [5.2, 6758.0], [5.3, 6823.0], [5.4, 6911.0], [5.5, 7233.0], [5.6, 7430.0], [5.7, 7560.0], [5.8, 7624.0], [5.9, 7686.0], [6.0, 7743.0], [6.1, 7788.0], [6.2, 7808.0], [6.3, 7839.0], [6.4, 7877.0], [6.5, 7935.0], [6.6, 7978.0], [6.7, 8054.0], [6.8, 8136.0], [6.9, 8206.0], [7.0, 8248.0], [7.1, 8285.0], [7.2, 8334.0], [7.3, 8581.0], [7.4, 8661.0], [7.5, 8747.0], [7.6, 8969.0], [7.7, 9001.0], [7.8, 9050.0], [7.9, 9074.0], [8.0, 9116.0], [8.1, 9168.0], [8.2, 9220.0], [8.3, 9266.0], [8.4, 9302.0], [8.5, 9350.0], [8.6, 9397.0], [8.7, 9444.0], [8.8, 9512.0], [8.9, 9550.0], [9.0, 9626.0], [9.1, 9726.0], [9.2, 9822.0], [9.3, 10229.0], [9.4, 10407.0], [9.5, 10468.0], [9.6, 10503.0], [9.7, 10591.0], [9.8, 10715.0], [9.9, 10772.0], [10.0, 10854.0], [10.1, 11013.0], [10.2, 11109.0], [10.3, 11248.0], [10.4, 11377.0], [10.5, 11411.0], [10.6, 11476.0], [10.7, 11545.0], [10.8, 11675.0], [10.9, 11683.0], [11.0, 11722.0], [11.1, 11770.0], [11.2, 11810.0], [11.3, 11855.0], [11.4, 11918.0], [11.5, 11986.0], [11.6, 12075.0], [11.7, 12110.0], [11.8, 12186.0], [11.9, 12248.0], [12.0, 12290.0], [12.1, 12352.0], [12.2, 12420.0], [12.3, 12456.0], [12.4, 12677.0], [12.5, 12988.0], [12.6, 13211.0], [12.7, 13343.0], [12.8, 13358.0], [12.9, 13405.0], [13.0, 13468.0], [13.1, 13546.0], [13.2, 13595.0], [13.3, 13648.0], [13.4, 13736.0], [13.5, 13766.0], [13.6, 13838.0], [13.7, 13846.0], [13.8, 13854.0], [13.9, 14083.0], [14.0, 14150.0], [14.1, 14196.0], [14.2, 14255.0], [14.3, 14283.0], [14.4, 14320.0], [14.5, 14343.0], [14.6, 14379.0], [14.7, 14401.0], [14.8, 14438.0], [14.9, 14472.0], [15.0, 14530.0], [15.1, 14568.0], [15.2, 14604.0], [15.3, 14640.0], [15.4, 14683.0], [15.5, 14799.0], [15.6, 14835.0], [15.7, 14976.0], [15.8, 15064.0], [15.9, 15137.0], [16.0, 15292.0], [16.1, 15436.0], [16.2, 15689.0], [16.3, 15994.0], [16.4, 16072.0], [16.5, 16178.0], [16.6, 16233.0], [16.7, 16323.0], [16.8, 16412.0], [16.9, 16780.0], [17.0, 16899.0], [17.1, 16928.0], [17.2, 16990.0], [17.3, 17042.0], [17.4, 17072.0], [17.5, 17253.0], [17.6, 17309.0], [17.7, 17350.0], [17.8, 17407.0], [17.9, 17459.0], [18.0, 17499.0], [18.1, 17551.0], [18.2, 17610.0], [18.3, 17697.0], [18.4, 17737.0], [18.5, 17760.0], [18.6, 17800.0], [18.7, 17860.0], [18.8, 17952.0], [18.9, 18125.0], [19.0, 18266.0], [19.1, 18353.0], [19.2, 18389.0], [19.3, 18446.0], [19.4, 18516.0], [19.5, 18561.0], [19.6, 18610.0], [19.7, 18632.0], [19.8, 18714.0], [19.9, 18828.0], [20.0, 18867.0], [20.1, 19190.0], [20.2, 19256.0], [20.3, 19307.0], [20.4, 19368.0], [20.5, 19455.0], [20.6, 19514.0], [20.7, 19604.0], [20.8, 19814.0], [20.9, 19993.0], [21.0, 20037.0], [21.1, 20095.0], [21.2, 20182.0], [21.3, 20274.0], [21.4, 20296.0], [21.5, 20341.0], [21.6, 20371.0], [21.7, 20417.0], [21.8, 20476.0], [21.9, 20524.0], [22.0, 20574.0], [22.1, 20722.0], [22.2, 20794.0], [22.3, 20843.0], [22.4, 21014.0], [22.5, 21016.0], [22.6, 21019.0], [22.7, 21020.0], [22.8, 21021.0], [22.9, 21021.0], [23.0, 21022.0], [23.1, 21022.0], [23.2, 21023.0], [23.3, 21023.0], [23.4, 21023.0], [23.5, 21023.0], [23.6, 21024.0], [23.7, 21024.0], [23.8, 21024.0], [23.9, 21024.0], [24.0, 21024.0], [24.1, 21024.0], [24.2, 21025.0], [24.3, 21025.0], [24.4, 21025.0], [24.5, 21025.0], [24.6, 21025.0], [24.7, 21025.0], [24.8, 21025.0], [24.9, 21026.0], [25.0, 21026.0], [25.1, 21026.0], [25.2, 21026.0], [25.3, 21026.0], [25.4, 21026.0], [25.5, 21026.0], [25.6, 21026.0], [25.7, 21026.0], [25.8, 21026.0], [25.9, 21026.0], [26.0, 21026.0], [26.1, 21027.0], [26.2, 21027.0], [26.3, 21027.0], [26.4, 21027.0], [26.5, 21027.0], [26.6, 21027.0], [26.7, 21027.0], [26.8, 21027.0], [26.9, 21027.0], [27.0, 21027.0], [27.1, 21027.0], [27.2, 21027.0], [27.3, 21027.0], [27.4, 21028.0], [27.5, 21028.0], [27.6, 21028.0], [27.7, 21028.0], [27.8, 21028.0], [27.9, 21028.0], [28.0, 21028.0], [28.1, 21028.0], [28.2, 21028.0], [28.3, 21028.0], [28.4, 21028.0], [28.5, 21029.0], [28.6, 21029.0], [28.7, 21029.0], [28.8, 21029.0], [28.9, 21029.0], [29.0, 21029.0], [29.1, 21029.0], [29.2, 21029.0], [29.3, 21029.0], [29.4, 21029.0], [29.5, 21029.0], [29.6, 21029.0], [29.7, 21029.0], [29.8, 21030.0], [29.9, 21030.0], [30.0, 21030.0], [30.1, 21030.0], [30.2, 21030.0], [30.3, 21030.0], [30.4, 21030.0], [30.5, 21030.0], [30.6, 21030.0], [30.7, 21030.0], [30.8, 21030.0], [30.9, 21030.0], [31.0, 21030.0], [31.1, 21030.0], [31.2, 21030.0], [31.3, 21030.0], [31.4, 21030.0], [31.5, 21030.0], [31.6, 21030.0], [31.7, 21031.0], [31.8, 21031.0], [31.9, 21031.0], [32.0, 21031.0], [32.1, 21031.0], [32.2, 21031.0], [32.3, 21031.0], [32.4, 21031.0], [32.5, 21031.0], [32.6, 21031.0], [32.7, 21031.0], [32.8, 21031.0], [32.9, 21031.0], [33.0, 21031.0], [33.1, 21031.0], [33.2, 21031.0], [33.3, 21031.0], [33.4, 21031.0], [33.5, 21031.0], [33.6, 21032.0], [33.7, 21032.0], [33.8, 21032.0], [33.9, 21032.0], [34.0, 21032.0], [34.1, 21032.0], [34.2, 21032.0], [34.3, 21032.0], [34.4, 21032.0], [34.5, 21032.0], [34.6, 21032.0], [34.7, 21032.0], [34.8, 21032.0], [34.9, 21032.0], [35.0, 21032.0], [35.1, 21032.0], [35.2, 21032.0], [35.3, 21032.0], [35.4, 21032.0], [35.5, 21033.0], [35.6, 21033.0], [35.7, 21033.0], [35.8, 21033.0], [35.9, 21033.0], [36.0, 21033.0], [36.1, 21033.0], [36.2, 21033.0], [36.3, 21033.0], [36.4, 21033.0], [36.5, 21033.0], [36.6, 21033.0], [36.7, 21033.0], [36.8, 21033.0], [36.9, 21033.0], [37.0, 21033.0], [37.1, 21033.0], [37.2, 21034.0], [37.3, 21034.0], [37.4, 21034.0], [37.5, 21034.0], [37.6, 21034.0], [37.7, 21034.0], [37.8, 21034.0], [37.9, 21034.0], [38.0, 21034.0], [38.1, 21034.0], [38.2, 21034.0], [38.3, 21034.0], [38.4, 21034.0], [38.5, 21034.0], [38.6, 21034.0], [38.7, 21034.0], [38.8, 21034.0], [38.9, 21034.0], [39.0, 21034.0], [39.1, 21034.0], [39.2, 21034.0], [39.3, 21035.0], [39.4, 21035.0], [39.5, 21035.0], [39.6, 21035.0], [39.7, 21035.0], [39.8, 21035.0], [39.9, 21035.0], [40.0, 21035.0], [40.1, 21035.0], [40.2, 21035.0], [40.3, 21035.0], [40.4, 21035.0], [40.5, 21035.0], [40.6, 21035.0], [40.7, 21035.0], [40.8, 21035.0], [40.9, 21035.0], [41.0, 21036.0], [41.1, 21036.0], [41.2, 21036.0], [41.3, 21036.0], [41.4, 21036.0], [41.5, 21036.0], [41.6, 21036.0], [41.7, 21036.0], [41.8, 21036.0], [41.9, 21036.0], [42.0, 21036.0], [42.1, 21036.0], [42.2, 21036.0], [42.3, 21036.0], [42.4, 21036.0], [42.5, 21036.0], [42.6, 21037.0], [42.7, 21037.0], [42.8, 21037.0], [42.9, 21037.0], [43.0, 21037.0], [43.1, 21037.0], [43.2, 21037.0], [43.3, 21037.0], [43.4, 21037.0], [43.5, 21037.0], [43.6, 21037.0], [43.7, 21037.0], [43.8, 21037.0], [43.9, 21038.0], [44.0, 21038.0], [44.1, 21038.0], [44.2, 21038.0], [44.3, 21038.0], [44.4, 21038.0], [44.5, 21038.0], [44.6, 21038.0], [44.7, 21038.0], [44.8, 21038.0], [44.9, 21038.0], [45.0, 21038.0], [45.1, 21038.0], [45.2, 21038.0], [45.3, 21039.0], [45.4, 21039.0], [45.5, 21039.0], [45.6, 21039.0], [45.7, 21039.0], [45.8, 21039.0], [45.9, 21039.0], [46.0, 21039.0], [46.1, 21039.0], [46.2, 21039.0], [46.3, 21039.0], [46.4, 21039.0], [46.5, 21040.0], [46.6, 21040.0], [46.7, 21040.0], [46.8, 21040.0], [46.9, 21040.0], [47.0, 21040.0], [47.1, 21041.0], [47.2, 21041.0], [47.3, 21041.0], [47.4, 21041.0], [47.5, 21041.0], [47.6, 21041.0], [47.7, 21041.0], [47.8, 21041.0], [47.9, 21041.0], [48.0, 21041.0], [48.1, 21041.0], [48.2, 21041.0], [48.3, 21042.0], [48.4, 21042.0], [48.5, 21042.0], [48.6, 21042.0], [48.7, 21042.0], [48.8, 21042.0], [48.9, 21042.0], [49.0, 21042.0], [49.1, 21043.0], [49.2, 21043.0], [49.3, 21043.0], [49.4, 21043.0], [49.5, 21043.0], [49.6, 21043.0], [49.7, 21043.0], [49.8, 21044.0], [49.9, 21044.0], [50.0, 21044.0], [50.1, 21044.0], [50.2, 21044.0], [50.3, 21044.0], [50.4, 21044.0], [50.5, 21044.0], [50.6, 21044.0], [50.7, 21044.0], [50.8, 21045.0], [50.9, 21045.0], [51.0, 21045.0], [51.1, 21045.0], [51.2, 21045.0], [51.3, 21045.0], [51.4, 21045.0], [51.5, 21046.0], [51.6, 21046.0], [51.7, 21046.0], [51.8, 21046.0], [51.9, 21046.0], [52.0, 21046.0], [52.1, 21046.0], [52.2, 21046.0], [52.3, 21047.0], [52.4, 21047.0], [52.5, 21047.0], [52.6, 21047.0], [52.7, 21047.0], [52.8, 21047.0], [52.9, 21047.0], [53.0, 21048.0], [53.1, 21048.0], [53.2, 21048.0], [53.3, 21048.0], [53.4, 21048.0], [53.5, 21048.0], [53.6, 21048.0], [53.7, 21048.0], [53.8, 21048.0], [53.9, 21049.0], [54.0, 21049.0], [54.1, 21049.0], [54.2, 21049.0], [54.3, 21049.0], [54.4, 21049.0], [54.5, 21049.0], [54.6, 21049.0], [54.7, 21049.0], [54.8, 21050.0], [54.9, 21050.0], [55.0, 21050.0], [55.1, 21050.0], [55.2, 21050.0], [55.3, 21050.0], [55.4, 21051.0], [55.5, 21051.0], [55.6, 21051.0], [55.7, 21051.0], [55.8, 21051.0], [55.9, 21051.0], [56.0, 21051.0], [56.1, 21051.0], [56.2, 21052.0], [56.3, 21052.0], [56.4, 21052.0], [56.5, 21052.0], [56.6, 21052.0], [56.7, 21052.0], [56.8, 21052.0], [56.9, 21052.0], [57.0, 21053.0], [57.1, 21053.0], [57.2, 21053.0], [57.3, 21053.0], [57.4, 21053.0], [57.5, 21053.0], [57.6, 21054.0], [57.7, 21054.0], [57.8, 21054.0], [57.9, 21054.0], [58.0, 21054.0], [58.1, 21054.0], [58.2, 21055.0], [58.3, 21055.0], [58.4, 21055.0], [58.5, 21055.0], [58.6, 21055.0], [58.7, 21055.0], [58.8, 21055.0], [58.9, 21056.0], [59.0, 21056.0], [59.1, 21056.0], [59.2, 21056.0], [59.3, 21056.0], [59.4, 21057.0], [59.5, 21057.0], [59.6, 21057.0], [59.7, 21057.0], [59.8, 21058.0], [59.9, 21058.0], [60.0, 21058.0], [60.1, 21058.0], [60.2, 21059.0], [60.3, 21059.0], [60.4, 21060.0], [60.5, 21060.0], [60.6, 21060.0], [60.7, 21061.0], [60.8, 21061.0], [60.9, 21062.0], [61.0, 21063.0], [61.1, 21063.0], [61.2, 21064.0], [61.3, 21064.0], [61.4, 21066.0], [61.5, 21067.0], [61.6, 21069.0], [61.7, 21069.0], [61.8, 21070.0], [61.9, 21070.0], [62.0, 21071.0], [62.1, 21072.0], [62.2, 21073.0], [62.3, 21073.0], [62.4, 21074.0], [62.5, 21075.0], [62.6, 21076.0], [62.7, 21076.0], [62.8, 21077.0], [62.9, 21078.0], [63.0, 21079.0], [63.1, 21080.0], [63.2, 21081.0], [63.3, 21082.0], [63.4, 21083.0], [63.5, 21085.0], [63.6, 21086.0], [63.7, 21088.0], [63.8, 21089.0], [63.9, 21090.0], [64.0, 21092.0], [64.1, 21093.0], [64.2, 21096.0], [64.3, 21098.0], [64.4, 21102.0], [64.5, 21121.0], [64.6, 21135.0], [64.7, 21139.0], [64.8, 21142.0], [64.9, 21144.0], [65.0, 21146.0], [65.1, 21148.0], [65.2, 21149.0], [65.3, 21151.0], [65.4, 21153.0], [65.5, 21155.0], [65.6, 21156.0], [65.7, 21158.0], [65.8, 21159.0], [65.9, 21160.0], [66.0, 21161.0], [66.1, 21165.0], [66.2, 21166.0], [66.3, 21168.0], [66.4, 21168.0], [66.5, 21170.0], [66.6, 21170.0], [66.7, 21175.0], [66.8, 21177.0], [66.9, 21178.0], [67.0, 21179.0], [67.1, 21183.0], [67.2, 21185.0], [67.3, 21185.0], [67.4, 21186.0], [67.5, 21187.0], [67.6, 21189.0], [67.7, 21190.0], [67.8, 21191.0], [67.9, 21192.0], [68.0, 21193.0], [68.1, 21195.0], [68.2, 21200.0], [68.3, 21206.0], [68.4, 21215.0], [68.5, 21267.0], [68.6, 21291.0], [68.7, 21294.0], [68.8, 21340.0], [68.9, 21406.0], [69.0, 21768.0], [69.1, 21890.0], [69.2, 21958.0], [69.3, 21994.0], [69.4, 22059.0], [69.5, 22108.0], [69.6, 22129.0], [69.7, 22195.0], [69.8, 22322.0], [69.9, 22591.0], [70.0, 22651.0], [70.1, 22903.0], [70.2, 22948.0], [70.3, 23618.0], [70.4, 23743.0], [70.5, 23874.0], [70.6, 23956.0], [70.7, 24021.0], [70.8, 24071.0], [70.9, 24105.0], [71.0, 24155.0], [71.1, 24283.0], [71.2, 24340.0], [71.3, 24372.0], [71.4, 24416.0], [71.5, 24460.0], [71.6, 24501.0], [71.7, 24521.0], [71.8, 24579.0], [71.9, 24658.0], [72.0, 24710.0], [72.1, 24771.0], [72.2, 24841.0], [72.3, 25011.0], [72.4, 25090.0], [72.5, 25156.0], [72.6, 25182.0], [72.7, 25242.0], [72.8, 25276.0], [72.9, 25320.0], [73.0, 25345.0], [73.1, 25377.0], [73.2, 25401.0], [73.3, 25439.0], [73.4, 25476.0], [73.5, 25557.0], [73.6, 25609.0], [73.7, 25626.0], [73.8, 25649.0], [73.9, 25685.0], [74.0, 25715.0], [74.1, 25829.0], [74.2, 26093.0], [74.3, 26151.0], [74.4, 26263.0], [74.5, 26328.0], [74.6, 26394.0], [74.7, 26467.0], [74.8, 26525.0], [74.9, 26666.0], [75.0, 26701.0], [75.1, 26798.0], [75.2, 26881.0], [75.3, 26924.0], [75.4, 27045.0], [75.5, 27072.0], [75.6, 27147.0], [75.7, 27199.0], [75.8, 27358.0], [75.9, 27974.0], [76.0, 28256.0], [76.1, 28351.0], [76.2, 28378.0], [76.3, 28443.0], [76.4, 28520.0], [76.5, 28547.0], [76.6, 28601.0], [76.7, 28635.0], [76.8, 28664.0], [76.9, 28715.0], [77.0, 28752.0], [77.1, 28782.0], [77.2, 28822.0], [77.3, 28873.0], [77.4, 28903.0], [77.5, 28990.0], [77.6, 29157.0], [77.7, 29419.0], [77.8, 29479.0], [77.9, 29567.0], [78.0, 29657.0], [78.1, 29767.0], [78.2, 29853.0], [78.3, 30002.0], [78.4, 30098.0], [78.5, 30209.0], [78.6, 30346.0], [78.7, 30555.0], [78.8, 30844.0], [78.9, 30962.0], [79.0, 31027.0], [79.1, 31126.0], [79.2, 31338.0], [79.3, 31429.0], [79.4, 31540.0], [79.5, 31614.0], [79.6, 31759.0], [79.7, 31841.0], [79.8, 31923.0], [79.9, 31961.0], [80.0, 32025.0], [80.1, 32437.0], [80.2, 32705.0], [80.3, 32859.0], [80.4, 32969.0], [80.5, 33244.0], [80.6, 33362.0], [80.7, 33464.0], [80.8, 33514.0], [80.9, 33550.0], [81.0, 33586.0], [81.1, 33622.0], [81.2, 33639.0], [81.3, 33654.0], [81.4, 33708.0], [81.5, 33720.0], [81.6, 33738.0], [81.7, 33749.0], [81.8, 33771.0], [81.9, 33784.0], [82.0, 33793.0], [82.1, 33821.0], [82.2, 33833.0], [82.3, 33850.0], [82.4, 33881.0], [82.5, 33913.0], [82.6, 33930.0], [82.7, 33963.0], [82.8, 33994.0], [82.9, 34014.0], [83.0, 34040.0], [83.1, 34103.0], [83.2, 34151.0], [83.3, 34213.0], [83.4, 34254.0], [83.5, 34363.0], [83.6, 35756.0], [83.7, 35827.0], [83.8, 36096.0], [83.9, 36138.0], [84.0, 36172.0], [84.1, 36191.0], [84.2, 36221.0], [84.3, 36244.0], [84.4, 36263.0], [84.5, 36292.0], [84.6, 36308.0], [84.7, 36335.0], [84.8, 36383.0], [84.9, 36423.0], [85.0, 36461.0], [85.1, 36525.0], [85.2, 36556.0], [85.3, 36606.0], [85.4, 36638.0], [85.5, 36681.0], [85.6, 36712.0], [85.7, 36736.0], [85.8, 36826.0], [85.9, 36866.0], [86.0, 36908.0], [86.1, 36960.0], [86.2, 37040.0], [86.3, 37338.0], [86.4, 37698.0], [86.5, 37738.0], [86.6, 37790.0], [86.7, 37879.0], [86.8, 37956.0], [86.9, 38048.0], [87.0, 38112.0], [87.1, 38217.0], [87.2, 38313.0], [87.3, 38363.0], [87.4, 38448.0], [87.5, 38539.0], [87.6, 38581.0], [87.7, 38656.0], [87.8, 38750.0], [87.9, 38810.0], [88.0, 38892.0], [88.1, 38963.0], [88.2, 39024.0], [88.3, 39157.0], [88.4, 39242.0], [88.5, 39329.0], [88.6, 39391.0], [88.7, 39468.0], [88.8, 39859.0], [88.9, 40039.0], [89.0, 40106.0], [89.1, 40227.0], [89.2, 40337.0], [89.3, 40404.0], [89.4, 40457.0], [89.5, 40556.0], [89.6, 40622.0], [89.7, 40664.0], [89.8, 40692.0], [89.9, 40721.0], [90.0, 40746.0], [90.1, 40770.0], [90.2, 40788.0], [90.3, 40816.0], [90.4, 40859.0], [90.5, 40885.0], [90.6, 40904.0], [90.7, 40945.0], [90.8, 40996.0], [90.9, 41127.0], [91.0, 41178.0], [91.1, 41247.0], [91.2, 41303.0], [91.3, 41362.0], [91.4, 41420.0], [91.5, 41485.0], [91.6, 41532.0], [91.7, 41620.0], [91.8, 41700.0], [91.9, 41791.0], [92.0, 41865.0], [92.1, 42018.0], [92.2, 42077.0], [92.3, 42159.0], [92.4, 42532.0], [92.5, 43104.0], [92.6, 43541.0], [92.7, 43759.0], [92.8, 43826.0], [92.9, 43917.0], [93.0, 44037.0], [93.1, 44160.0], [93.2, 44240.0], [93.3, 44326.0], [93.4, 44402.0], [93.5, 44490.0], [93.6, 44571.0], [93.7, 44662.0], [93.8, 44734.0], [93.9, 44826.0], [94.0, 44889.0], [94.1, 44971.0], [94.2, 45005.0], [94.3, 45036.0], [94.4, 45090.0], [94.5, 45118.0], [94.6, 45160.0], [94.7, 45194.0], [94.8, 45232.0], [94.9, 45264.0], [95.0, 45306.0], [95.1, 45341.0], [95.2, 45377.0], [95.3, 45414.0], [95.4, 45450.0], [95.5, 45491.0], [95.6, 45604.0], [95.7, 45674.0], [95.8, 45765.0], [95.9, 45832.0], [96.0, 46129.0], [96.1, 46166.0], [96.2, 46207.0], [96.3, 46272.0], [96.4, 46306.0], [96.5, 46366.0], [96.6, 46419.0], [96.7, 46475.0], [96.8, 46679.0], [96.9, 46779.0], [97.0, 46981.0], [97.1, 47211.0], [97.2, 48251.0], [97.3, 48308.0], [97.4, 48348.0], [97.5, 48398.0], [97.6, 48436.0], [97.7, 48473.0], [97.8, 48522.0], [97.9, 48557.0], [98.0, 48594.0], [98.1, 48696.0], [98.2, 48778.0], [98.3, 48824.0], [98.4, 48869.0], [98.5, 48945.0], [98.6, 49027.0], [98.7, 49043.0], [98.8, 49117.0], [98.9, 49185.0], [99.0, 49277.0], [99.1, 49297.0], [99.2, 49356.0], [99.3, 49399.0], [99.4, 49476.0], [99.5, 49522.0], [99.6, 49616.0], [99.7, 49752.0], [99.8, 49820.0], [99.9, 49898.0]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 500.0, "maxY": 2102.0, "series": [{"data": [[32900.0, 5.0], [33700.0, 32.0], [36100.0, 15.0], [36900.0, 10.0], [37700.0, 10.0], [38500.0, 8.0], [40100.0, 5.0], [39300.0, 7.0], [40900.0, 11.0], [42500.0, 2.0], [41700.0, 6.0], [43300.0, 2.0], [44100.0, 6.0], [44900.0, 9.0], [45700.0, 7.0], [46500.0, 3.0], [48100.0, 2.0], [48900.0, 6.0], [49700.0, 5.0], [500.0, 2.0], [600.0, 2.0], [700.0, 1.0], [800.0, 2.0], [900.0, 3.0], [1000.0, 3.0], [1100.0, 3.0], [1200.0, 3.0], [1300.0, 3.0], [1400.0, 5.0], [1500.0, 3.0], [1600.0, 3.0], [1800.0, 1.0], [1900.0, 3.0], [2000.0, 2.0], [2100.0, 5.0], [2500.0, 4.0], [2600.0, 3.0], [2700.0, 3.0], [2800.0, 4.0], [2900.0, 6.0], [3000.0, 3.0], [3100.0, 4.0], [3200.0, 6.0], [3300.0, 4.0], [3400.0, 7.0], [3500.0, 4.0], [3600.0, 3.0], [3700.0, 10.0], [3800.0, 5.0], [3900.0, 5.0], [4000.0, 4.0], [4100.0, 6.0], [4200.0, 5.0], [4300.0, 4.0], [4400.0, 5.0], [4500.0, 4.0], [4600.0, 6.0], [4700.0, 8.0], [4800.0, 7.0], [4900.0, 9.0], [5000.0, 5.0], [5100.0, 7.0], [5200.0, 5.0], [5300.0, 6.0], [5400.0, 7.0], [5500.0, 6.0], [5600.0, 5.0], [5700.0, 7.0], [5800.0, 7.0], [5900.0, 5.0], [6000.0, 5.0], [6200.0, 2.0], [6300.0, 6.0], [6500.0, 6.0], [6600.0, 5.0], [6700.0, 7.0], [6800.0, 6.0], [6900.0, 2.0], [7100.0, 2.0], [7200.0, 5.0], [7400.0, 3.0], [7500.0, 6.0], [7600.0, 9.0], [7700.0, 11.0], [7800.0, 16.0], [7900.0, 9.0], [8100.0, 6.0], [8000.0, 5.0], [8200.0, 13.0], [8600.0, 5.0], [9000.0, 12.0], [9200.0, 11.0], [9400.0, 9.0], [9600.0, 5.0], [10200.0, 3.0], [9800.0, 2.0], [10400.0, 12.0], [10600.0, 4.0], [11000.0, 5.0], [10800.0, 4.0], [11200.0, 3.0], [11400.0, 9.0], [11600.0, 11.0], [11800.0, 13.0], [12000.0, 8.0], [12200.0, 10.0], [12400.0, 10.0], [12600.0, 1.0], [12800.0, 1.0], [13200.0, 3.0], [13000.0, 1.0], [13400.0, 8.0], [13800.0, 16.0], [13600.0, 9.0], [14200.0, 13.0], [14000.0, 1.0], [14400.0, 14.0], [14600.0, 13.0], [14800.0, 7.0], [15000.0, 5.0], [15200.0, 2.0], [15600.0, 2.0], [15400.0, 5.0], [15800.0, 1.0], [16000.0, 6.0], [16200.0, 7.0], [17200.0, 5.0], [16400.0, 2.0], [16800.0, 4.0], [17600.0, 6.0], [18000.0, 3.0], [18400.0, 9.0], [18800.0, 9.0], [19200.0, 7.0], [19600.0, 3.0], [20000.0, 10.0], [20400.0, 9.0], [20800.0, 7.0], [21200.0, 30.0], [22000.0, 8.0], [21600.0, 1.0], [22800.0, 3.0], [23600.0, 3.0], [24000.0, 10.0], [24400.0, 11.0], [24800.0, 3.0], [25200.0, 10.0], [25600.0, 18.0], [26000.0, 3.0], [26400.0, 7.0], [26800.0, 6.0], [27200.0, 4.0], [27600.0, 1.0], [28000.0, 2.0], [28400.0, 6.0], [28800.0, 13.0], [29200.0, 1.0], [29600.0, 6.0], [30000.0, 6.0], [30400.0, 1.0], [30800.0, 6.0], [31200.0, 2.0], [31600.0, 5.0], [32000.0, 2.0], [32400.0, 1.0], [32800.0, 2.0], [33600.0, 18.0], [34400.0, 1.0], [36000.0, 3.0], [36800.0, 11.0], [37600.0, 2.0], [38400.0, 6.0], [40000.0, 6.0], [39200.0, 6.0], [40800.0, 18.0], [41600.0, 6.0], [42400.0, 2.0], [44000.0, 4.0], [44800.0, 6.0], [45600.0, 7.0], [46400.0, 8.0], [47200.0, 1.0], [48800.0, 9.0], [49600.0, 5.0], [33100.0, 1.0], [33900.0, 17.0], [36300.0, 16.0], [35500.0, 2.0], [37100.0, 1.0], [37900.0, 6.0], [38700.0, 7.0], [39500.0, 1.0], [40300.0, 8.0], [41100.0, 7.0], [41900.0, 3.0], [43500.0, 1.0], [44300.0, 6.0], [45100.0, 15.0], [46700.0, 5.0], [48300.0, 12.0], [49100.0, 8.0], [49900.0, 4.0], [16900.0, 10.0], [17300.0, 12.0], [17700.0, 14.0], [18100.0, 4.0], [18500.0, 10.0], [19300.0, 8.0], [19700.0, 2.0], [20100.0, 5.0], [20500.0, 9.0], [21300.0, 5.0], [22100.0, 12.0], [21700.0, 1.0], [22500.0, 4.0], [22900.0, 7.0], [23300.0, 1.0], [23700.0, 5.0], [24100.0, 9.0], [24500.0, 12.0], [24900.0, 3.0], [25300.0, 17.0], [25700.0, 6.0], [26100.0, 6.0], [26500.0, 6.0], [26900.0, 6.0], [27300.0, 3.0], [28100.0, 1.0], [28500.0, 11.0], [28900.0, 6.0], [29300.0, 1.0], [29700.0, 4.0], [30100.0, 4.0], [30500.0, 3.0], [30900.0, 5.0], [31300.0, 5.0], [31700.0, 3.0], [33800.0, 23.0], [36200.0, 21.0], [37000.0, 3.0], [37800.0, 6.0], [38600.0, 5.0], [39400.0, 6.0], [40200.0, 2.0], [41000.0, 4.0], [41800.0, 6.0], [43400.0, 2.0], [44200.0, 6.0], [45000.0, 12.0], [45800.0, 2.0], [46600.0, 3.0], [48200.0, 6.0], [49000.0, 10.0], [49800.0, 7.0], [33300.0, 4.0], [34100.0, 10.0], [35700.0, 3.0], [36500.0, 12.0], [37300.0, 5.0], [38100.0, 6.0], [38900.0, 6.0], [40500.0, 5.0], [39700.0, 1.0], [41300.0, 9.0], [42100.0, 6.0], [43700.0, 7.0], [44500.0, 6.0], [45300.0, 12.0], [46900.0, 4.0], [46100.0, 9.0], [48500.0, 14.0], [49300.0, 10.0], [8300.0, 4.0], [8500.0, 6.0], [8700.0, 5.0], [8900.0, 8.0], [9100.0, 11.0], [9500.0, 9.0], [9300.0, 12.0], [9700.0, 6.0], [10100.0, 2.0], [10300.0, 1.0], [10500.0, 6.0], [10700.0, 8.0], [10900.0, 3.0], [11100.0, 3.0], [11500.0, 5.0], [11700.0, 8.0], [11300.0, 8.0], [11900.0, 6.0], [12100.0, 7.0], [12300.0, 7.0], [12500.0, 2.0], [13300.0, 13.0], [12900.0, 5.0], [13100.0, 1.0], [13700.0, 7.0], [13500.0, 8.0], [13900.0, 2.0], [14300.0, 14.0], [14100.0, 10.0], [14500.0, 13.0], [14700.0, 3.0], [15100.0, 7.0], [15300.0, 1.0], [14900.0, 4.0], [15500.0, 2.0], [15700.0, 2.0], [15900.0, 2.0], [16100.0, 6.0], [16300.0, 5.0], [17000.0, 10.0], [16600.0, 1.0], [17400.0, 11.0], [18200.0, 3.0], [17800.0, 8.0], [18600.0, 9.0], [19400.0, 8.0], [19800.0, 4.0], [20200.0, 10.0], [21000.0, 2102.0], [20600.0, 2.0], [21400.0, 4.0], [21800.0, 5.0], [22200.0, 4.0], [22600.0, 5.0], [23800.0, 5.0], [24200.0, 2.0], [24600.0, 7.0], [25000.0, 7.0], [25400.0, 12.0], [25800.0, 3.0], [26600.0, 5.0], [26200.0, 5.0], [27000.0, 9.0], [28200.0, 3.0], [28600.0, 13.0], [29000.0, 4.0], [29400.0, 8.0], [29800.0, 6.0], [30200.0, 3.0], [31000.0, 6.0], [31400.0, 3.0], [31800.0, 7.0], [32600.0, 4.0], [33200.0, 5.0], [34000.0, 13.0], [36400.0, 9.0], [38000.0, 6.0], [38800.0, 7.0], [40400.0, 9.0], [42000.0, 7.0], [41200.0, 8.0], [43600.0, 1.0], [44400.0, 6.0], [45200.0, 12.0], [46000.0, 3.0], [46800.0, 1.0], [48400.0, 11.0], [49200.0, 10.0], [33500.0, 14.0], [34300.0, 3.0], [35900.0, 1.0], [36700.0, 9.0], [38300.0, 8.0], [39100.0, 5.0], [40700.0, 20.0], [39900.0, 2.0], [41500.0, 7.0], [43900.0, 3.0], [43100.0, 1.0], [44700.0, 7.0], [45500.0, 4.0], [46300.0, 8.0], [48700.0, 7.0], [49500.0, 7.0], [16700.0, 4.0], [17100.0, 2.0], [18300.0, 9.0], [17500.0, 9.0], [17900.0, 4.0], [18700.0, 4.0], [19100.0, 5.0], [19900.0, 2.0], [19500.0, 5.0], [20300.0, 13.0], [20700.0, 7.0], [21100.0, 190.0], [21900.0, 10.0], [22300.0, 2.0], [23500.0, 2.0], [23900.0, 8.0], [24300.0, 13.0], [24700.0, 9.0], [25100.0, 12.0], [25500.0, 8.0], [26300.0, 9.0], [25900.0, 1.0], [26700.0, 7.0], [27100.0, 9.0], [27900.0, 2.0], [28300.0, 11.0], [28700.0, 14.0], [29100.0, 2.0], [29500.0, 5.0], [30700.0, 2.0], [29900.0, 2.0], [30300.0, 4.0], [31100.0, 2.0], [31500.0, 7.0], [31900.0, 10.0], [32700.0, 4.0], [32300.0, 4.0], [33400.0, 7.0], [34200.0, 8.0], [35800.0, 6.0], [36600.0, 14.0], [37400.0, 1.0], [38200.0, 5.0], [39000.0, 6.0], [40600.0, 13.0], [39800.0, 3.0], [41400.0, 8.0], [43000.0, 3.0], [43800.0, 6.0], [44600.0, 6.0], [45400.0, 15.0], [46200.0, 12.0], [47000.0, 3.0], [48600.0, 5.0], [49400.0, 6.0]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 49900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 2613.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 27.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 2613.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [[3.0, 2360.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 490.5173469387756, "minX": 1.60772358E12, "maxY": 2988.8982587064784, "series": [{"data": [[1.60772364E12, 490.5173469387756], [1.60772358E12, 2988.8982587064784]], "isOverall": false, "label": "Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60772364E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 561.0, "minX": 1.0, "maxY": 49957.0, "series": [{"data": [[2.0, 49470.0], [3.0, 49684.0], [4.0, 49628.0], [5.0, 49616.0], [6.0, 49771.0], [7.0, 49752.0], [8.0, 49591.0], [9.0, 49573.0], [10.0, 49522.0], [11.0, 49509.0], [12.0, 49495.0], [13.0, 49476.0], [14.0, 49447.0], [15.0, 49438.0], [16.0, 49418.0], [17.0, 49399.0], [18.0, 49383.0], [19.0, 49393.0], [20.0, 49350.0], [21.0, 49331.0], [22.0, 49313.0], [23.0, 49297.0], [24.0, 49277.0], [25.0, 49265.0], [26.0, 49234.0], [27.0, 49914.0], [28.0, 49910.0], [29.0, 49910.0], [30.0, 49820.0], [31.0, 49898.0], [33.0, 49804.0], [32.0, 49889.0], [35.0, 49864.0], [34.0, 49786.0], [37.0, 49628.0], [36.0, 49838.0], [39.0, 49605.0], [38.0, 49824.0], [41.0, 49587.0], [40.0, 49113.0], [42.0, 49283.0], [45.0, 49356.0], [44.0, 49334.0], [47.0, 49517.0], [46.0, 49957.0], [49.0, 49241.0], [48.0, 49340.0], [51.0, 49182.0], [50.0, 49224.0], [53.0, 49385.0], [52.0, 49015.0], [55.0, 49098.0], [54.0, 49117.0], [57.0, 49043.0], [56.0, 49781.0], [59.0, 49029.0], [58.0, 49281.0], [61.0, 49153.0], [63.0, 48918.0], [62.0, 48996.0], [67.0, 49146.0], [66.0, 48869.0], [65.0, 48869.0], [64.0, 49185.0], [70.0, 49111.0], [69.0, 48886.0], [68.0, 49142.0], [75.0, 49022.0], [74.0, 49034.0], [73.0, 49036.0], [72.0, 49285.5], [79.0, 48940.0], [78.0, 48945.0], [77.0, 48968.0], [76.0, 49029.0], [83.0, 48843.0], [82.0, 48852.0], [81.0, 48861.0], [80.0, 48917.0], [87.0, 48795.0], [86.0, 48804.0], [85.0, 48824.0], [84.0, 48820.0], [91.0, 48954.0], [89.0, 48776.0], [88.0, 48778.0], [95.0, 48673.0], [94.0, 48683.0], [93.0, 48703.0], [92.0, 48735.0], [99.0, 48556.0], [98.0, 48570.0], [97.0, 48590.0], [96.0, 48594.0], [103.0, 48520.0], [102.0, 48533.0], [101.0, 48538.0], [100.0, 48554.0], [107.0, 48458.0], [106.0, 48458.0], [105.0, 48503.0], [104.0, 48522.0], [111.0, 48399.5], [109.0, 48425.0], [108.0, 48435.0], [115.0, 48308.0], [114.0, 48354.0], [113.0, 48781.0], [112.0, 48368.0], [119.0, 48666.0], [118.0, 48261.0], [117.0, 48696.0], [116.0, 48293.0], [123.0, 48587.0], [122.0, 48314.0], [121.0, 48493.5], [127.0, 48478.0], [126.0, 48502.0], [125.0, 48557.0], [124.0, 48563.0], [135.0, 48336.0], [134.0, 48354.0], [133.0, 48379.0], [132.0, 48413.0], [131.0, 48436.0], [130.0, 48472.0], [128.0, 48467.0], [143.0, 48182.0], [142.0, 48222.0], [141.0, 48234.0], [140.0, 48251.0], [139.0, 48256.0], [138.0, 48305.0], [137.0, 48313.0], [151.0, 46692.0], [150.0, 46722.0], [149.0, 46747.0], [148.0, 46774.0], [147.0, 46779.0], [146.0, 46789.0], [145.0, 48133.0], [144.0, 46843.0], [159.0, 46463.0], [158.0, 46472.0], [157.0, 46529.0], [156.0, 46531.0], [155.0, 46545.0], [154.0, 46412.0], [153.0, 46664.0], [152.0, 46679.0], [167.0, 46981.0], [166.0, 46378.0], [165.0, 47026.0], [164.0, 46407.0], [163.0, 47023.0], [162.0, 46419.0], [161.0, 46452.0], [160.0, 46455.0], [175.0, 46297.5], [173.0, 46292.0], [172.0, 46334.0], [171.0, 46942.0], [170.0, 46988.0], [169.0, 46366.0], [168.0, 46368.0], [183.0, 46164.0], [182.0, 46184.0], [181.0, 46198.0], [180.0, 46202.0], [179.0, 46207.0], [178.0, 46207.0], [177.0, 46211.0], [176.0, 46248.0], [191.0, 46230.0], [190.0, 46257.0], [189.0, 46296.0], [188.0, 46475.0], [187.0, 46363.0], [186.0, 46097.0], [185.0, 46119.0], [184.0, 46145.0], [199.0, 47004.0], [198.0, 46049.0], [197.0, 46064.0], [196.0, 46129.0], [195.0, 47211.0], [194.0, 46149.0], [193.0, 46163.0], [192.0, 46166.0], [207.0, 45793.0], [206.0, 45700.0], [205.0, 46272.0], [204.0, 46290.0], [203.0, 46306.0], [202.0, 46325.0], [201.0, 45793.0], [200.0, 46975.0], [215.0, 45610.0], [214.0, 45567.0], [213.0, 45569.0], [212.0, 45604.0], [211.0, 45620.0], [210.0, 45741.0], [209.0, 45759.0], [208.0, 45679.0], [223.0, 45425.0], [222.0, 45433.0], [221.0, 45598.0], [220.0, 45471.0], [219.0, 45491.0], [218.0, 45655.0], [217.0, 45674.0], [216.0, 45645.0], [231.0, 45427.0], [230.0, 45337.0], [229.0, 45450.0], [228.0, 45518.0], [227.0, 45406.0], [226.0, 45488.0], [225.0, 45465.0], [224.0, 45414.0], [239.0, 45264.0], [238.0, 45319.0], [237.0, 45300.0], [236.0, 45322.5], [234.0, 45411.0], [233.0, 45343.0], [232.0, 45346.0], [247.0, 45765.0], [246.0, 45112.0], [245.0, 45782.0], [244.0, 45801.0], [243.0, 45162.0], [242.0, 45191.0], [241.0, 45832.0], [240.0, 45255.0], [255.0, 45341.0], [254.0, 45371.0], [253.0, 45377.0], [252.0, 45405.0], [251.0, 45407.0], [250.0, 45433.0], [249.0, 45452.0], [248.0, 44866.0], [270.0, 45105.0], [268.0, 45130.0], [266.0, 45160.0], [264.0, 45196.0], [262.0, 45232.0], [260.0, 44680.0], [258.0, 45306.0], [256.0, 45322.0], [286.0, 45182.0], [284.0, 45217.0], [282.0, 45255.0], [280.0, 44942.0], [278.0, 44971.0], [276.0, 45011.0], [274.0, 45033.0], [272.0, 45074.0], [302.0, 44903.0], [300.0, 44956.0], [298.0, 44979.0], [296.0, 45005.0], [294.0, 45036.0], [292.0, 45087.0], [290.0, 45111.0], [288.0, 45133.0], [318.0, 44624.0], [316.0, 44662.0], [314.0, 44702.0], [312.0, 44734.0], [310.0, 44771.0], [308.0, 44798.0], [306.0, 44833.0], [304.0, 44875.0], [334.0, 44345.0], [332.0, 44387.0], [330.0, 44419.0], [328.0, 44457.0], [326.0, 44490.0], [324.0, 44516.0], [322.0, 44549.0], [320.0, 44591.0], [350.0, 44111.0], [348.0, 44142.0], [346.0, 44180.0], [344.0, 43734.0], [342.0, 44222.0], [340.0, 43779.0], [338.0, 44274.0], [336.0, 44311.0], [366.0, 43813.0], [364.0, 43847.0], [362.0, 43882.0], [360.0, 43917.0], [358.0, 43948.0], [356.0, 44009.0], [354.0, 44037.0], [352.0, 43104.0], [382.0, 42040.0], [380.0, 42077.0], [378.0, 42117.0], [376.0, 42143.0], [374.0, 42164.0], [372.0, 42193.0], [370.0, 43726.0], [368.0, 43775.0], [398.0, 41791.0], [396.0, 41825.0], [394.0, 41865.0], [392.0, 41867.0], [390.0, 43377.0], [388.0, 41940.0], [386.0, 41976.0], [384.0, 42018.0], [414.0, 41522.0], [412.0, 41557.0], [410.0, 43024.0], [408.0, 41620.0], [406.0, 41651.0], [404.0, 41681.0], [402.0, 41715.0], [400.0, 41752.0], [430.0, 41247.0], [428.0, 41278.0], [426.0, 41267.0], [424.0, 41343.0], [422.0, 41335.0], [420.0, 41368.0], [418.0, 41420.0], [416.0, 41494.0], [446.0, 40959.0], [444.0, 40996.0], [442.0, 42475.0], [440.0, 41068.0], [438.0, 42550.0], [436.0, 41146.0], [434.0, 41178.0], [432.0, 41210.0], [462.0, 40846.0], [460.0, 40878.0], [458.0, 40916.0], [456.0, 40811.0], [454.0, 40885.0], [452.0, 40885.0], [450.0, 40911.0], [448.0, 40945.0], [478.0, 40556.0], [476.0, 40596.0], [474.0, 40645.0], [472.0, 40679.0], [470.0, 40712.0], [468.0, 40749.0], [466.0, 40776.0], [464.0, 40816.0], [494.0, 40301.0], [492.0, 40337.0], [490.0, 40357.0], [488.0, 40393.0], [486.0, 40424.0], [484.0, 40458.0], [482.0, 40491.0], [480.0, 40404.0], [510.0, 41368.0], [508.0, 41024.0], [506.0, 40013.0], [504.0, 41440.0], [502.0, 41485.0], [500.0, 41133.0], [498.0, 41513.0], [496.0, 40268.0], [540.0, 40770.0], [536.0, 40830.0], [532.0, 40893.0], [528.0, 40816.0], [524.0, 40697.0], [520.0, 39765.0], [516.0, 41303.0], [512.0, 41362.0], [572.0, 39240.0], [568.0, 39299.0], [564.0, 39366.0], [560.0, 39407.0], [556.0, 39468.0], [552.0, 40571.0], [548.0, 40639.0], [544.0, 40702.0], [604.0, 38744.0], [600.0, 38810.0], [596.0, 38880.0], [592.0, 38940.0], [588.0, 39024.0], [584.0, 40074.0], [580.0, 40137.0], [576.0, 39157.0], [636.0, 38929.0], [632.0, 38354.0], [628.0, 38363.0], [624.0, 38475.0], [620.0, 38506.0], [616.0, 38576.0], [612.0, 38607.0], [608.0, 38700.0], [668.0, 37814.0], [664.0, 37858.0], [660.0, 37924.0], [656.0, 37995.0], [652.0, 38066.0], [648.0, 38112.0], [644.0, 38191.0], [640.0, 38236.0], [700.0, 36712.0], [696.0, 36811.0], [692.0, 36867.0], [688.0, 36922.0], [684.0, 36999.0], [680.0, 37715.0], [676.0, 37688.0], [672.0, 37758.0], [732.0, 37390.0], [728.0, 36282.0], [724.0, 37328.0], [720.0, 36393.0], [704.0, 36681.0], [708.0, 36606.0], [716.0, 36452.0], [712.0, 36538.0], [764.0, 36943.0], [760.0, 35869.0], [756.0, 35579.0], [752.0, 36195.0], [736.0, 36765.5], [740.0, 36155.0], [748.0, 36263.0], [744.0, 36865.0], [796.0, 36285.0], [792.0, 36271.0], [788.0, 36461.0], [784.0, 36611.0], [768.0, 35807.0], [772.0, 36693.0], [780.0, 36209.0], [776.0, 36728.0], [828.0, 34283.0], [824.0, 34363.0], [820.0, 36190.0], [816.0, 36304.0], [800.0, 36328.0], [812.0, 36160.0], [808.0, 36207.0], [860.0, 33822.0], [856.0, 33826.0], [852.0, 33928.0], [848.0, 33965.0], [832.0, 34237.0], [836.0, 34174.0], [844.0, 34035.0], [840.0, 34103.0], [892.0, 33968.0], [888.0, 33749.0], [884.0, 34009.0], [880.0, 34421.0], [864.0, 33762.0], [876.0, 33708.0], [872.0, 33744.0], [924.0, 33611.0], [920.0, 33740.0], [916.0, 33785.0], [912.0, 33832.0], [896.0, 33965.0], [900.0, 33928.0], [908.0, 33850.0], [904.0, 33698.0], [952.0, 33546.0], [956.0, 33802.0], [932.0, 34040.0], [928.0, 33594.0], [948.0, 33634.0], [944.0, 33674.0], [940.0, 33765.0], [936.0, 33834.0], [988.0, 32952.0], [984.0, 32333.0], [980.0, 33159.0], [976.0, 33464.0], [960.0, 33550.0], [964.0, 32969.0], [972.0, 33339.0], [968.0, 33428.0], [996.0, 32664.0], [1020.0, 31910.0], [992.0, 32726.0], [1012.0, 31923.0], [1008.0, 31937.0], [1004.0, 31054.0], [1000.0, 31127.0], [1080.0, 29949.0], [1072.0, 30098.0], [1064.0, 30209.0], [1056.0, 30346.0], [1024.0, 31841.0], [1032.0, 31641.0], [1048.0, 31393.0], [1040.0, 30555.0], [1144.0, 28989.0], [1136.0, 29053.0], [1128.0, 28614.0], [1120.0, 28707.0], [1088.0, 29836.0], [1096.0, 29674.0], [1112.0, 29441.0], [1104.0, 29567.0], [1208.0, 27082.0], [1200.0, 28310.0], [1192.0, 28378.0], [1184.0, 28540.0], [1152.0, 28887.0], [1160.0, 28801.0], [1176.0, 28520.0], [1168.0, 28752.0], [1272.0, 26118.0], [1264.0, 26203.0], [1256.0, 26287.0], [1248.0, 26394.0], [1216.0, 26917.0], [1224.0, 26811.0], [1240.0, 26485.0], [1232.0, 26688.0], [1336.0, 25476.0], [1328.0, 25073.0], [1320.0, 25163.0], [1312.0, 25302.0], [1280.0, 27072.0], [1288.0, 25822.0], [1304.0, 25444.0], [1296.0, 26181.5], [1400.0, 24397.0], [1392.0, 24521.0], [1384.0, 24517.0], [1344.0, 25737.0], [1352.0, 25598.0], [1368.0, 25510.0], [1360.0, 25633.0], [1464.0, 24090.0], [1456.0, 23958.0], [1448.0, 24363.0], [1440.0, 24041.0], [1416.0, 24841.0], [1432.0, 24692.0], [1424.0, 24136.0], [1528.0, 21460.0], [1520.0, 22247.0], [1512.0, 21987.0], [1504.0, 22619.0], [1472.0, 22546.0], [1480.0, 23874.0], [1496.0, 22129.0], [1488.0, 23701.0], [1592.0, 21082.5], [1584.0, 21083.0], [1560.0, 21088.0], [1552.0, 21089.0], [1536.0, 21340.0], [1640.0, 21081.0], [1632.0, 21075.0], [1624.0, 21076.0], [1608.0, 21077.0], [1600.0, 21079.0], [1704.0, 21073.0], [1688.0, 21098.0], [1680.0, 21067.0], [1672.0, 21072.0], [1768.0, 21055.0], [1752.0, 21069.0], [1848.0, 21041.0], [1792.0, 21056.5], [1832.0, 21034.0], [1824.0, 21049.5], [1816.0, 21037.666666666668], [1808.0, 21044.5], [1904.0, 21048.0], [1864.0, 21031.5], [1856.0, 21048.0], [1888.0, 21040.5], [1880.0, 21037.0], [1872.0, 21034.5], [1944.0, 21051.0], [1936.0, 21041.0], [1920.0, 21041.5], [2040.0, 21034.0], [2032.0, 21034.666666666668], [2016.0, 21033.0], [2008.0, 21043.0], [2064.0, 21036.0], [2160.0, 21044.5], [2144.0, 21043.0], [2128.0, 21037.5], [2096.0, 21043.0], [2048.0, 21034.0], [2288.0, 21037.0], [2256.0, 21051.0], [2240.0, 21032.0], [2224.0, 21027.0], [2320.0, 21035.0], [2416.0, 21031.0], [2304.0, 21034.0], [2384.0, 21052.0], [2368.0, 21054.0], [2352.0, 21059.75], [2336.0, 21044.0], [2528.0, 22059.0], [2512.0, 21041.0], [2464.0, 21027.0], [2448.0, 21046.5], [2432.0, 21042.0], [2672.0, 21050.0], [2624.0, 21060.0], [2576.0, 21848.0], [2560.0, 21051.0], [2704.0, 11005.5], [2800.0, 21038.0], [2768.0, 21051.0], [2720.0, 21053.0], [2848.0, 21043.0], [2864.0, 21043.0], [2896.0, 21044.0], [2912.0, 21041.0], [3024.0, 16047.75], [2960.0, 21034.5], [2992.0, 21036.0], [3008.0, 21035.666666666668], [3168.0, 21031.000000000004], [3184.0, 1147.0], [3072.0, 21028.666666666668], [3120.0, 21029.0], [3104.0, 21035.0], [3152.0, 20304.0], [3312.0, 21041.0], [3280.0, 21028.666666666668], [3248.0, 21035.833333333332], [3216.0, 21031.0], [3232.0, 21025.0], [3328.0, 21041.0], [3392.0, 21035.0], [3376.0, 21034.0], [3360.0, 21031.666666666668], [3552.0, 21035.5], [3568.0, 21026.0], [3472.0, 21026.0], [3488.0, 21026.0], [3536.0, 21030.5], [3600.0, 21024.666666666668], [3664.0, 21040.0], [3648.0, 21032.0], [3584.0, 21032.0], [3632.0, 21242.0], [3616.0, 21022.0], [3744.0, 21145.0], [3952.0, 19935.0], [3936.0, 19416.0], [3888.0, 21168.0], [4032.0, 18668.0], [4080.0, 18003.0], [4048.0, 18424.0], [4064.0, 17801.0], [3984.0, 19416.0], [4016.0, 18518.0], [4000.0, 19793.0], [4288.0, 14401.0], [4320.0, 13563.0], [4224.0, 8069.0], [4256.0, 14100.0], [4096.0, 17625.0], [4128.0, 17345.0], [4192.0, 15164.0], [4160.0, 15436.0], [4384.0, 12517.0], [4544.0, 5481.5], [4352.0, 13779.5], [4448.0, 11800.0], [4416.0, 12070.0], [4576.0, 5455.5], [4480.0, 11369.0], [4512.0, 10730.0], [4800.0, 5460.0], [4832.0, 4907.0], [4736.0, 6866.0], [4768.0, 5996.0], [4608.0, 9393.0], [4640.0, 8331.0], [4704.0, 7474.0], [4672.0, 7878.0], [4896.0, 3746.0], [4864.0, 4346.0], [4928.0, 3234.0], [4960.0, 2135.0], [4289.0, 14376.0], [4321.0, 13546.0], [4225.0, 16014.0], [4257.0, 14083.0], [4097.0, 17762.0], [4129.0, 16928.0], [4193.0, 15154.0], [4161.0, 15415.0], [4545.0, 5488.5], [4513.0, 10715.0], [4385.0, 12500.0], [4353.0, 13737.0], [4449.0, 11771.0], [4417.0, 12110.0], [4577.0, 4126.0], [4481.0, 11337.0], [4801.0, 5444.0], [4737.0, 6845.0], [4769.0, 5973.0], [4833.0, 4904.0], [4609.0, 9377.0], [4641.0, 8307.0], [4705.0, 7978.0], [4673.0, 7860.0], [4865.0, 4520.0], [4961.0, 2110.0], [4897.0, 3740.0], [4929.0, 3210.0], [2161.0, 10895.5], [2145.0, 21039.5], [2049.0, 21037.5], [2129.0, 21044.5], [2113.0, 21024.0], [2097.0, 21053.0], [2225.0, 21030.0], [2401.0, 21034.0], [2417.0, 21030.333333333332], [2385.0, 21048.0], [2305.0, 21034.0], [2353.0, 21053.0], [2321.0, 21033.0], [2529.0, 22011.0], [2481.0, 21063.0], [2465.0, 22154.0], [2673.0, 21052.0], [2641.0, 21042.0], [2625.0, 21059.0], [2593.0, 21043.0], [2577.0, 21821.0], [2561.0, 21051.5], [2785.0, 21049.0], [2721.0, 21051.666666666668], [2705.0, 21052.0], [2689.0, 21049.444444444445], [2913.0, 21038.0], [2929.0, 21034.0], [2897.0, 21032.0], [2865.0, 21049.0], [2849.0, 21048.333333333332], [2817.0, 21034.0], [3057.0, 21046.5], [3009.0, 21038.5], [2961.0, 21041.4], [2945.0, 21027.0], [3169.0, 20288.0], [3073.0, 21029.0], [3217.0, 21033.5], [3265.0, 21038.0], [3249.0, 20254.0], [3425.0, 21034.0], [3345.0, 21033.0], [3329.0, 21041.0], [3441.0, 21027.0], [3393.0, 21028.5], [3361.0, 21034.0], [3569.0, 21026.0], [3537.0, 21028.0], [3553.0, 21037.0], [3457.0, 21027.0], [3505.0, 21031.5], [3489.0, 21023.5], [3681.0, 1389.0], [3649.0, 21032.0], [3825.0, 21142.0], [3761.0, 21143.0], [3953.0, 19824.0], [3937.0, 20794.0], [3841.0, 21127.0], [3889.0, 21149.740932642486], [4065.0, 17750.0], [4081.0, 17004.0], [4033.0, 18307.0], [4049.0, 18406.0], [3985.0, 20217.0], [3969.0, 19400.0], [4017.0, 18481.0], [4001.0, 19735.0], [4098.0, 17760.0], [4290.0, 14631.0], [4194.0, 15137.0], [4162.0, 15403.0], [4130.0, 16917.0], [4258.0, 14838.0], [4322.0, 13520.0], [4546.0, 9476.0], [4578.0, 9285.0], [4482.0, 11315.0], [4514.0, 11109.0], [4354.0, 13206.0], [4386.0, 12485.0], [4450.0, 11758.0], [4418.0, 12087.0], [4738.0, 6824.0], [4770.0, 5955.0], [4802.0, 5424.0], [4610.0, 9350.0], [4642.0, 8294.0], [4706.0, 7953.0], [4674.0, 7843.0], [4866.0, 4490.0], [4898.0, 3857.0], [4930.0, 3178.0], [4962.0, 2062.0], [4291.0, 14342.0], [4227.0, 16010.0], [4259.0, 14819.0], [4323.0, 13505.0], [4131.0, 17366.0], [4099.0, 17737.0], [4195.0, 15117.0], [4163.0, 15721.0], [4387.0, 12462.0], [4547.0, 5472.5], [4451.0, 11739.0], [4419.0, 11411.0], [4483.0, 10421.0], [4515.0, 11088.0], [4579.0, 10165.0], [4803.0, 5405.0], [4739.0, 6758.0], [4771.0, 5931.0], [4835.0, 4969.5], [4611.0, 8651.0], [4643.0, 8285.0], [4707.0, 7877.0], [4675.0, 7825.0], [4867.0, 4284.0], [4899.0, 3777.0], [4931.0, 3191.0], [4963.0, 2054.0], [1081.0, 30002.0], [1073.0, 30085.0], [1065.0, 30192.0], [1057.0, 31394.0], [1025.0, 31821.0], [1033.0, 31614.0], [1049.0, 30474.0], [1041.0, 31510.0], [1145.0, 28835.0], [1137.0, 28636.0], [1129.0, 28601.0], [1121.0, 28688.0], [1089.0, 29810.0], [1097.0, 29657.0], [1113.0, 29419.0], [1105.0, 29549.0], [1209.0, 27058.0], [1201.0, 27178.0], [1193.0, 28351.0], [1185.0, 28354.0], [1153.0, 28880.0], [1161.0, 28791.0], [1177.0, 28702.0], [1169.0, 28737.0], [1273.0, 27199.0], [1265.0, 27284.0], [1257.0, 26258.0], [1249.0, 26380.0], [1217.0, 26898.0], [1225.0, 26798.0], [1241.0, 26517.0], [1233.0, 26677.0], [1337.0, 25494.0], [1329.0, 25054.0], [1313.0, 25284.0], [1281.0, 27101.0], [1289.0, 26924.0], [1305.0, 25425.0], [1297.0, 26757.0], [1401.0, 24444.0], [1393.0, 25192.0], [1385.0, 24509.0], [1377.0, 24982.0], [1345.0, 25567.0], [1353.0, 25417.0], [1369.0, 25334.0], [1361.0, 25621.0], [1417.0, 24672.0], [1457.0, 22948.0], [1409.0, 24733.0], [1449.0, 24369.0], [1441.0, 24487.0], [1433.0, 24658.0], [1425.0, 24139.0], [1529.0, 21441.0], [1521.0, 22322.0], [1513.0, 21958.0], [1505.0, 22031.0], [1473.0, 24037.0], [1481.0, 23863.0], [1489.0, 23646.0], [1593.0, 21086.0], [1569.0, 21087.0], [1561.0, 21088.0], [1545.0, 21093.5], [1537.0, 21659.0], [1657.0, 21062.333333333332], [1609.0, 21078.333333333332], [1705.0, 21070.5], [1697.0, 21078.0], [1689.0, 21098.0], [1665.0, 21073.5], [1785.0, 21050.0], [1769.0, 21052.0], [1753.0, 21069.0], [1841.0, 21038.0], [1833.0, 21035.75], [1801.0, 21036.0], [1913.0, 21040.5], [1905.0, 21048.0], [1889.0, 21041.0], [1881.0, 21038.0], [1865.0, 21031.5], [1857.0, 21034.5], [1945.0, 21041.0], [1937.0, 21039.0], [1921.0, 21038.0], [2033.0, 21035.0], [2025.0, 21034.666666666668], [2009.0, 21040.0], [2001.0, 21041.0], [1985.0, 21039.0], [2162.0, 21045.5], [2146.0, 21038.0], [2114.0, 21029.5], [2082.0, 21044.0], [2066.0, 21037.5], [2050.0, 21033.0], [2290.0, 21040.333333333332], [2258.0, 21041.2], [2242.0, 21033.5], [2226.0, 21037.5], [2418.0, 21031.85714285714], [2402.0, 21033.0], [2338.0, 21046.0], [2322.0, 21033.0], [2306.0, 21034.0], [2546.0, 21055.5], [2530.0, 21979.0], [2514.0, 21047.0], [2498.0, 21047.5], [2482.0, 21054.0], [2450.0, 21041.0], [2674.0, 21054.2], [2578.0, 886.0], [2626.0, 10998.5], [2642.0, 21033.0], [2562.0, 21048.5], [2594.0, 21031.0], [2786.0, 21031.5], [2770.0, 21047.4], [2706.0, 21057.0], [2690.0, 20540.0], [2882.0, 21034.0], [2898.0, 21032.0], [2930.0, 21030.0], [2946.0, 21030.0], [2994.0, 21038.5], [3010.0, 21031.0], [3026.0, 21044.5], [3058.0, 21041.5], [3042.0, 21033.0], [3170.0, 20275.0], [3090.0, 21037.0], [3138.0, 21029.0], [3218.0, 21035.0], [3282.0, 21027.333333333332], [3234.0, 21025.0], [3266.0, 21028.0], [3442.0, 21026.0], [3394.0, 21033.333333333332], [3330.0, 21029.0], [3346.0, 21032.0], [3378.0, 21026.0], [3522.0, 1371.0], [3538.0, 21029.0], [3570.0, 21029.0], [3554.0, 21038.5], [3506.0, 21028.0], [3458.0, 21026.0], [3490.0, 21024.25], [3666.0, 21039.5], [3650.0, 21033.0], [3586.0, 21031.5], [3602.0, 21027.5], [3634.0, 21208.0], [3618.0, 21022.666666666668], [3906.0, 21032.0], [3954.0, 19413.0], [3922.0, 21023.666666666668], [3938.0, 20807.0], [4066.0, 17735.0], [4082.0, 16984.0], [4034.0, 18319.0], [4050.0, 18860.0], [3970.0, 19190.0], [3986.0, 19363.0], [4018.0, 18464.0], [4002.0, 18867.0], [4292.0, 13880.0], [4324.0, 13484.0], [4228.0, 15614.0], [4260.0, 14801.0], [4132.0, 16908.0], [4100.0, 17586.0], [4196.0, 15109.0], [4164.0, 15701.0], [4356.0, 13746.0], [4388.0, 12449.0], [4452.0, 11722.0], [4420.0, 11396.0], [4548.0, 9444.0], [4484.0, 10423.0], [4516.0, 11135.0], [4580.0, 9263.0], [4804.0, 5383.0], [4740.0, 6739.0], [4772.0, 5921.0], [4836.0, 4868.0], [4612.0, 8631.0], [4644.0, 8259.0], [4708.0, 7862.0], [4676.0, 7808.0], [4868.0, 4424.0], [4900.0, 3752.0], [4932.0, 3129.0], [4964.0, 1993.0], [4293.0, 14578.0], [4325.0, 13468.0], [4229.0, 14542.0], [4261.0, 14819.0], [4101.0, 17566.0], [4133.0, 16899.0], [4197.0, 15080.0], [4165.0, 15689.0], [4357.0, 13211.0], [4389.0, 12419.0], [4453.0, 11694.0], [4421.0, 11378.0], [4549.0, 9426.0], [4485.0, 11856.0], [4517.0, 11114.0], [4581.0, 9239.0], [4805.0, 5364.0], [4837.0, 4851.0], [4741.0, 6772.0], [4773.0, 5897.0], [4613.0, 8581.0], [4645.0, 8248.0], [4709.0, 7430.0], [4677.0, 7790.0], [4869.0, 4243.0], [4965.0, 1956.0], [4901.0, 3792.0], [4933.0, 3135.0], [2147.0, 21038.0], [2099.0, 14267.666666666666], [2163.0, 21050.0], [2067.0, 21037.428571428572], [2051.0, 21038.0], [2115.0, 21034.0], [2083.0, 21105.0], [2291.0, 21042.0], [2259.0, 21031.0], [2243.0, 21049.0], [2211.0, 21039.0], [2403.0, 21035.0], [2371.0, 21051.0], [2355.0, 21056.0], [2307.0, 21032.0], [2547.0, 21063.5], [2531.0, 21961.0], [2499.0, 21042.0], [2483.0, 21053.0], [2467.0, 21054.0], [2451.0, 21041.0], [2675.0, 20574.0], [2643.0, 21047.666666666668], [2627.0, 21036.0], [2595.0, 21029.0], [2579.0, 21044.0], [2803.0, 21039.5], [2787.0, 21029.0], [2771.0, 21041.666666666668], [2755.0, 21042.0], [2723.0, 21054.999999999996], [2707.0, 21056.0], [2691.0, 20524.0], [2899.0, 21037.0], [2867.0, 21048.333333333332], [2851.0, 21051.0], [2835.0, 21028.777777777777], [2819.0, 21033.5], [3059.0, 21051.0], [3043.0, 21033.0], [2947.0, 21037.5], [2995.0, 21040.0], [3075.0, 21032.4], [3123.0, 21026.0], [3107.0, 21024.5], [3299.0, 1200.0], [3219.0, 21031.0], [3235.0, 21034.0], [3347.0, 21033.0], [3443.0, 21033.0], [3427.0, 21035.0], [3395.0, 21030.5], [3379.0, 21030.5], [3363.0, 21030.0], [3571.0, 21029.0], [3459.0, 21027.5], [3507.0, 21031.0], [3491.0, 21034.0], [3555.0, 21027.5], [3667.0, 21215.0], [3651.0, 21031.0], [3587.0, 21031.0], [3635.0, 21246.5], [3619.0, 21021.5], [3747.0, 21142.0], [3955.0, 19368.0], [3939.0, 19590.0], [3891.0, 21038.5], [4083.0, 17964.0], [4067.0, 17729.0], [4035.0, 18639.0], [3971.0, 19577.0], [3987.0, 19329.0], [4019.0, 18446.0], [4003.0, 18857.0], [4051.0, 18388.0], [4134.0, 17338.0], [4166.0, 15994.0], [4198.0, 15064.0], [4102.0, 17702.0], [4294.0, 14562.0], [4230.0, 14700.0], [4262.0, 14799.0], [4326.0, 13448.0], [4486.0, 11770.0], [4582.0, 5412.0], [4518.0, 11099.0], [4550.0, 9412.0], [4358.0, 13353.0], [4390.0, 12417.0], [4422.0, 11377.0], [4806.0, 5345.0], [4838.0, 4834.0], [4742.0, 6701.0], [4774.0, 5870.0], [4614.0, 8586.0], [4646.0, 8226.0], [4710.0, 7413.0], [4678.0, 7862.0], [4870.0, 4382.0], [4902.0, 3779.0], [4934.0, 3085.0], [4966.0, 1913.0], [4295.0, 13840.0], [4327.0, 13427.0], [4231.0, 15909.0], [4263.0, 14862.0], [4135.0, 17326.0], [4103.0, 17554.0], [4199.0, 15050.0], [4167.0, 15452.0], [4359.0, 13343.0], [4391.0, 12390.0], [4423.0, 11352.0], [4551.0, 9397.0], [4487.0, 11728.0], [4519.0, 11013.0], [4583.0, 9212.0], [4743.0, 6683.0], [4839.0, 4816.0], [4775.0, 5861.0], [4807.0, 5327.0], [4647.0, 8212.0], [4711.0, 7819.0], [4679.0, 7879.0], [4871.0, 4204.0], [4903.0, 3703.0], [4935.0, 3091.0], [4967.0, 1887.0], [541.0, 40749.0], [537.0, 40816.0], [533.0, 40885.0], [529.0, 40746.0], [525.0, 40681.0], [521.0, 40721.0], [517.0, 39886.0], [513.0, 40971.0], [573.0, 39221.0], [569.0, 39283.0], [565.0, 39347.0], [561.0, 39391.0], [557.0, 39460.0], [553.0, 40082.0], [549.0, 40622.0], [545.0, 40692.0], [605.0, 38750.0], [601.0, 38785.0], [597.0, 38854.0], [593.0, 38926.0], [589.0, 39004.0], [585.0, 40054.0], [581.0, 40124.0], [577.0, 39140.0], [637.0, 39032.0], [633.0, 38964.0], [629.0, 38346.0], [625.0, 38422.0], [621.0, 38492.0], [617.0, 38581.0], [613.0, 38586.0], [609.0, 38656.0], [669.0, 37790.0], [665.0, 37847.0], [661.0, 37904.0], [657.0, 37984.0], [653.0, 38048.0], [649.0, 38100.0], [645.0, 38170.0], [641.0, 38226.0], [701.0, 36735.0], [697.0, 36802.0], [693.0, 36879.0], [689.0, 36903.0], [677.0, 37768.0], [685.0, 36977.0], [673.0, 37738.0], [681.0, 37698.0], [729.0, 37432.0], [733.0, 36222.0], [709.0, 36574.0], [705.0, 36652.0], [725.0, 37327.0], [721.0, 36377.0], [717.0, 36444.0], [713.0, 36517.0], [765.0, 35827.0], [761.0, 36979.0], [757.0, 35559.0], [753.0, 36186.0], [737.0, 37338.0], [741.0, 36721.0], [749.0, 36262.0], [745.0, 36689.0], [797.0, 35904.0], [793.0, 36335.0], [789.0, 36423.0], [785.0, 36546.0], [769.0, 36157.0], [773.0, 35714.0], [781.0, 36556.0], [777.0, 36597.0], [829.0, 34254.0], [825.0, 34330.0], [821.0, 35765.0], [817.0, 36096.0], [801.0, 36296.0], [805.0, 36246.0], [813.0, 36172.0], [809.0, 36396.0], [861.0, 33848.0], [857.0, 33719.0], [853.0, 33899.0], [849.0, 33963.0], [833.0, 34218.0], [837.0, 34151.0], [845.0, 34021.0], [841.0, 34083.0], [893.0, 33998.0], [889.0, 34111.0], [885.0, 34144.0], [881.0, 33899.0], [865.0, 33817.0], [869.0, 33736.5], [877.0, 34158.0], [873.0, 33956.0], [925.0, 33639.0], [921.0, 33652.0], [917.0, 33776.0], [913.0, 33821.0], [897.0, 33850.0], [901.0, 33913.0], [905.0, 33804.0], [957.0, 33582.0], [953.0, 33516.0], [949.0, 33244.0], [945.0, 33677.0], [933.0, 34025.0], [941.0, 33736.0], [937.0, 33430.0], [989.0, 32929.0], [985.0, 32705.0], [981.0, 32387.0], [977.0, 33245.0], [961.0, 33543.0], [965.0, 33472.0], [973.0, 33514.0], [969.0, 33420.0], [1021.0, 31894.0], [1017.0, 31392.0], [1013.0, 31975.0], [1009.0, 32025.0], [993.0, 32859.0], [997.0, 32642.0], [1005.0, 31019.0], [1001.0, 31089.0], [1082.0, 30888.0], [1074.0, 30729.0], [1066.0, 30198.0], [1058.0, 31230.0], [1026.0, 31811.0], [1034.0, 31607.0], [1050.0, 31380.0], [1042.0, 30531.0], [1146.0, 28975.0], [1138.0, 28647.0], [1130.0, 28579.0], [1122.0, 28664.0], [1090.0, 29791.0], [1098.0, 29635.0], [1114.0, 29409.0], [1106.0, 29534.0], [1210.0, 27056.0], [1202.0, 27164.0], [1194.0, 28405.0], [1186.0, 28359.0], [1154.0, 28873.0], [1162.0, 28780.0], [1178.0, 28685.0], [1170.0, 28646.0], [1274.0, 26124.0], [1266.0, 26172.0], [1258.0, 27398.0], [1250.0, 26361.0], [1218.0, 26902.0], [1226.0, 26782.0], [1242.0, 26489.0], [1234.0, 26611.0], [1338.0, 25702.0], [1330.0, 25041.0], [1322.0, 25156.0], [1314.0, 25274.0], [1282.0, 25948.0], [1290.0, 26915.0], [1306.0, 25395.0], [1298.0, 25633.0], [1354.0, 25732.0], [1402.0, 24372.0], [1346.0, 25703.0], [1386.0, 25289.0], [1378.0, 25351.0], [1370.0, 25458.0], [1362.0, 25609.0], [1466.0, 23374.5], [1458.0, 24175.0], [1450.0, 24328.0], [1442.0, 24460.0], [1410.0, 24985.0], [1418.0, 24800.0], [1434.0, 24642.0], [1426.0, 24331.0], [1530.0, 21424.0], [1522.0, 22931.0], [1514.0, 21936.0], [1506.0, 22617.0], [1474.0, 23956.0], [1482.0, 23815.0], [1498.0, 22126.5], [1490.0, 23618.0], [1578.0, 21081.0], [1562.0, 21086.0], [1554.0, 21091.666666666668], [1546.0, 21094.0], [1538.0, 22846.0], [1658.0, 21050.27450980392], [1602.0, 21079.666666666668], [1722.0, 21068.0], [1690.0, 21096.5], [1666.0, 21076.0], [1786.0, 21050.0], [1770.0, 21057.666666666668], [1738.0, 21066.0], [1842.0, 21037.0], [1802.0, 21035.666666666668], [1850.0, 21050.5], [1826.0, 21051.5], [1818.0, 21042.0], [1810.0, 21054.0], [1794.0, 21057.0], [1914.0, 21044.0], [1898.0, 21049.0], [1874.0, 21033.0], [1866.0, 21035.0], [1946.0, 21135.0], [1930.0, 21042.4], [2042.0, 21036.0], [2034.0, 21032.0], [2010.0, 21037.0], [2002.0, 21035.0], [1986.0, 21034.0], [2148.0, 21049.0], [2132.0, 21032.333333333332], [2116.0, 21033.0], [2052.0, 21041.0], [2260.0, 21026.0], [2244.0, 21050.0], [2228.0, 21035.0], [2404.0, 21033.0], [2420.0, 21034.0], [2324.0, 21033.5], [2356.0, 21052.0], [2340.0, 21057.5], [2532.0, 21945.0], [2516.0, 21044.125000000004], [2484.0, 21063.0], [2436.0, 21043.666666666668], [2676.0, 21061.0], [2644.0, 21045.0], [2628.0, 21060.0], [2596.0, 21019.5], [2580.0, 21041.5], [2564.0, 21059.0], [2804.0, 21034.5], [2788.0, 21036.0], [2772.0, 21038.0], [2724.0, 20487.0], [2708.0, 21058.0], [2692.0, 20511.0], [2932.0, 21045.0], [2916.0, 21032.5], [2900.0, 21039.0], [2836.0, 20384.0], [2820.0, 21031.5], [2948.0, 21035.0], [2996.0, 21042.0], [3028.0, 21043.5], [3012.0, 21036.0], [3188.0, 21037.0], [3124.0, 21028.5], [3284.0, 21025.5], [3268.0, 21036.0], [3428.0, 21034.0], [3348.0, 21029.0], [3444.0, 21028.0], [3332.0, 21027.0], [3396.0, 21031.0], [3380.0, 21032.0], [3364.0, 21030.0], [3572.0, 21031.0], [3524.0, 21029.0], [3556.0, 21027.0], [3460.0, 21036.0], [3476.0, 21030.0], [3492.0, 21028.5], [3652.0, 21032.0], [3668.0, 21074.0], [3604.0, 21025.0], [3588.0, 21030.0], [3636.0, 21212.0], [3620.0, 21023.5], [3748.0, 21141.0], [3924.0, 21027.0], [3956.0, 19382.0], [3940.0, 19556.0], [3892.0, 21036.0], [4068.0, 17713.0], [4084.0, 16970.0], [4036.0, 18624.0], [4052.0, 17952.0], [3972.0, 19172.0], [3988.0, 19307.0], [4020.0, 18781.0], [4004.0, 18841.0], [4296.0, 14260.0], [4232.0, 14683.0], [4264.0, 14294.0], [4328.0, 13405.0], [4104.0, 17534.0], [4136.0, 16866.0], [4200.0, 14835.0], [4168.0, 15429.0], [4392.0, 12456.0], [4552.0, 9372.0], [4360.0, 12248.0], [4424.0, 11986.0], [4488.0, 10486.0], [4520.0, 10989.0], [4584.0, 9187.0], [4744.0, 6716.0], [4840.0, 4792.0], [4776.0, 5842.0], [4808.0, 5304.0], [4616.0, 9547.0], [4648.0, 8205.0], [4712.0, 7800.0], [4872.0, 4343.0], [4904.0, 3687.0], [4936.0, 3071.0], [4297.0, 14239.0], [4233.0, 14472.0], [4265.0, 15390.0], [4329.0, 13376.0], [4105.0, 17514.0], [4137.0, 17321.0], [4201.0, 14820.0], [4169.0, 15557.0], [4361.0, 12990.0], [4393.0, 12435.0], [4425.0, 11918.0], [4553.0, 9358.0], [4489.0, 10472.0], [4521.0, 11037.0], [4585.0, 9168.0], [4809.0, 5284.0], [4841.0, 4773.0], [4745.0, 6697.0], [4777.0, 5826.0], [4617.0, 9557.0], [4649.0, 8334.0], [4713.0, 7825.0], [4681.0, 7975.5], [4873.0, 4168.0], [4905.0, 3720.0], [4937.0, 2997.0], [2165.0, 21046.0], [2149.0, 21036.0], [2117.0, 21031.0], [2101.0, 21041.5], [2053.0, 21038.333333333332], [2293.0, 21034.0], [2261.0, 21036.0], [2245.0, 21021.0], [2229.0, 21030.0], [2213.0, 21024.5], [2373.0, 21055.5], [2357.0, 21064.0], [2341.0, 21054.0], [2325.0, 21038.0], [2309.0, 21035.0], [2549.0, 21056.0], [2533.0, 21917.0], [2517.0, 22122.0], [2485.0, 21060.428571428572], [2453.0, 21041.0], [2437.0, 21043.0], [2677.0, 20562.0], [2661.0, 21054.0], [2629.0, 21062.0], [2581.0, 21803.0], [2565.0, 21053.0], [2773.0, 21031.0], [2757.0, 21029.0], [2933.0, 21031.0], [2917.0, 21035.0], [2885.0, 21037.0], [2901.0, 21045.0], [2853.0, 21043.5], [2837.0, 20371.0], [2821.0, 21030.0], [3061.0, 21026.0], [3045.0, 21026.0], [2949.0, 21042.0], [2997.0, 21050.0], [3029.0, 21051.5], [3173.0, 21037.333333333332], [3077.0, 21032.0], [3093.0, 21029.0], [3109.0, 21027.0], [3269.0, 21035.0], [3237.0, 21037.0], [3333.0, 21028.666666666668], [3397.0, 21035.4], [3365.0, 21034.5], [3573.0, 21027.0], [3525.0, 21027.0], [3557.0, 21026.0], [3509.0, 21030.833333333332], [3461.0, 21031.666666666668], [3653.0, 21033.0], [3589.0, 21030.0], [3637.0, 21210.0], [3605.0, 21027.8], [3717.0, 21147.0], [3957.0, 19363.0], [3909.0, 21032.0], [3941.0, 20829.0], [3893.0, 21038.0], [3861.0, 20095.0], [4069.0, 17697.0], [4037.0, 18303.0], [4053.0, 17936.0], [4085.0, 16953.0], [3989.0, 20035.0], [3973.0, 19162.0], [4021.0, 18432.0], [4005.0, 18820.0], [4138.0, 17303.0], [4202.0, 15032.0], [4170.0, 16419.0], [4106.0, 17410.0], [4298.0, 13777.0], [4234.0, 14439.0], [4266.0, 14255.0], [4330.0, 13362.0], [4490.0, 10620.0], [4522.0, 11020.0], [4586.0, 9146.0], [4554.0, 10421.0], [4362.0, 12229.0], [4426.0, 11951.0], [4810.0, 5266.0], [4842.0, 4757.0], [4746.0, 6630.0], [4778.0, 5807.0], [4618.0, 8573.0], [4650.0, 8325.0], [4714.0, 7766.0], [4682.0, 7783.0], [4874.0, 4307.0], [4906.0, 3702.0], [4938.0, 2976.0], [4299.0, 14454.0], [4331.0, 13349.0], [4235.0, 14405.0], [4267.0, 14161.0], [4139.0, 17287.0], [4107.0, 17350.0], [4203.0, 15009.0], [4171.0, 16412.0], [4363.0, 12267.0], [4395.0, 13372.5], [4427.0, 11929.0], [4555.0, 10470.0], [4491.0, 10657.0], [4523.0, 10943.0], [4587.0, 9132.0], [4811.0, 5255.0], [4843.0, 4967.0], [4747.0, 6615.0], [4779.0, 5728.0], [4619.0, 8540.0], [4651.0, 8282.0], [4715.0, 7794.0], [4683.0, 7762.0], [4875.0, 4132.0], [4907.0, 3631.0], [4939.0, 2948.0], [1083.0, 29918.0], [1075.0, 30987.0], [1067.0, 31227.0], [1059.0, 30301.0], [1027.0, 31803.0], [1035.0, 31583.0], [1051.0, 31505.0], [1043.0, 30518.0], [1147.0, 28960.0], [1139.0, 28541.0], [1131.0, 28563.0], [1123.0, 28653.0], [1091.0, 29767.0], [1099.0, 29618.0], [1115.0, 28773.0], [1107.0, 29517.0], [1211.0, 28190.0], [1203.0, 27147.0], [1195.0, 28315.0], [1187.0, 28496.0], [1155.0, 28876.0], [1179.0, 28480.0], [1171.0, 28613.0], [1227.0, 26735.0], [1275.0, 26093.0], [1219.0, 26881.0], [1259.0, 26263.0], [1251.0, 26353.0], [1243.0, 26467.0], [1235.0, 26558.0], [1339.0, 25834.0], [1331.0, 25022.0], [1323.0, 25139.0], [1315.0, 25255.0], [1283.0, 27047.0], [1291.0, 25767.0], [1307.0, 25389.0], [1299.0, 25611.0], [1403.0, 24416.0], [1395.0, 24826.0], [1387.0, 24501.0], [1379.0, 24562.0], [1347.0, 25685.0], [1355.0, 25715.0], [1371.0, 25190.0], [1363.0, 25439.0], [1459.0, 24235.0], [1411.0, 24283.0], [1451.0, 24313.0], [1443.0, 24451.0], [1435.0, 24623.0], [1427.0, 24783.0], [1531.0, 21406.0], [1523.0, 22902.0], [1515.0, 22021.0], [1507.0, 22024.0], [1475.0, 24155.0], [1483.0, 22855.0], [1499.0, 22546.0], [1491.0, 23609.0], [1571.0, 21081.0], [1547.0, 21103.0], [1659.0, 21077.0], [1651.0, 21080.0], [1627.0, 21076.0], [1707.0, 21068.0], [1691.0, 21084.0], [1675.0, 21072.0], [1667.0, 21074.5], [1771.0, 561.0], [1787.0, 21049.0], [1779.0, 21052.0], [1747.0, 21057.0], [1851.0, 21052.0], [1803.0, 642.0], [1811.0, 21045.0], [1843.0, 21045.5], [1835.0, 21036.5], [1827.0, 21055.0], [1867.0, 21032.666666666668], [1915.0, 21045.0], [1859.0, 21032.0], [1899.0, 21042.0], [1891.0, 21043.0], [1883.0, 21046.666666666668], [1875.0, 21039.0], [1939.0, 21042.0], [1923.0, 21038.0], [2043.0, 21034.5], [2035.0, 21033.0], [2027.0, 21036.0], [2019.0, 21035.333333333332], [1987.0, 21036.0], [1995.0, 21045.0], [2150.0, 21039.0], [2134.0, 21030.5], [2102.0, 21055.0], [2054.0, 21033.0], [2294.0, 21032.0], [2230.0, 21039.0], [2406.0, 21036.333333333332], [2422.0, 21034.0], [2390.0, 21039.666666666668], [2342.0, 21062.0], [2326.0, 21033.0], [2310.0, 21034.0], [2534.0, 21902.0], [2502.0, 21045.0], [2486.0, 22137.0], [2454.0, 21046.0], [2662.0, 21050.0], [2646.0, 21055.0], [2630.0, 21054.0], [2598.0, 21034.25], [2806.0, 21032.5], [2790.0, 21033.0], [2774.0, 21053.0], [2758.0, 21035.333333333332], [2726.0, 21046.0], [2710.0, 21056.0], [2934.0, 21028.0], [2886.0, 21039.0], [2918.0, 21036.5], [2838.0, 20358.0], [2902.0, 21044.0], [2870.0, 21055.5], [2854.0, 21046.2], [2966.0, 1055.0], [2950.0, 21048.0], [3014.0, 21038.0], [3062.0, 21029.0], [3030.0, 21052.0], [3190.0, 21044.0], [3078.0, 21035.0], [3158.0, 21028.0], [3126.0, 21026.14285714286], [3110.0, 21034.0], [3222.0, 21031.0], [3238.0, 21027.0], [3286.0, 21037.0], [3270.0, 21030.0], [3446.0, 21033.0], [3398.0, 20219.0], [3334.0, 21031.0], [3350.0, 21027.0], [3382.0, 21035.0], [3574.0, 21027.0], [3526.0, 21024.0], [3478.0, 21030.0], [3494.0, 21027.666666666668], [3542.0, 21038.0], [3654.0, 21032.0], [3670.0, 21108.0], [3606.0, 20459.0], [3638.0, 20146.0], [3622.0, 21063.5], [3958.0, 19339.0], [3910.0, 21029.0], [3942.0, 20750.0], [3846.0, 20092.0], [3894.0, 21038.0], [3926.0, 21033.0], [4070.0, 18137.0], [4086.0, 16933.0], [4038.0, 18612.0], [4054.0, 18186.0], [3974.0, 19137.0], [3990.0, 20031.0], [4022.0, 18400.0], [4006.0, 18799.0], [4236.0, 14401.0], [4268.0, 14150.0], [4300.0, 14438.0], [4140.0, 16809.0], [4108.0, 17392.0], [4204.0, 14993.0], [4172.0, 16772.0], [4364.0, 12368.0], [4396.0, 12428.0], [4460.0, 11674.0], [4428.0, 11806.0], [4556.0, 9340.0], [4492.0, 10585.0], [4524.0, 10988.0], [4588.0, 9116.0], [4844.0, 4763.0], [4812.0, 5235.0], [4748.0, 6598.0], [4780.0, 5767.0], [4620.0, 9532.0], [4652.0, 8265.0], [4716.0, 7728.0], [4876.0, 4111.0], [4908.0, 3601.0], [4940.0, 2296.5], [4237.0, 14383.0], [4333.0, 13342.0], [4269.0, 14211.0], [4301.0, 14418.0], [4109.0, 17754.0], [4205.0, 14976.0], [4173.0, 16395.0], [4365.0, 12352.0], [4397.0, 12307.0], [4429.0, 11804.0], [4557.0, 9321.0], [4493.0, 10542.0], [4525.0, 9838.0], [4589.0, 9107.0], [4749.0, 6626.0], [4813.0, 5426.0], [4781.0, 5693.0], [4621.0, 8523.0], [4653.0, 8250.0], [4717.0, 7289.0], [4685.0, 7820.0], [4877.0, 4247.0], [4909.0, 3588.0], [4941.0, 2913.0], [2167.0, 21047.5], [2135.0, 21040.0], [2119.0, 21036.0], [2103.0, 21020.0], [2055.0, 21036.0], [2247.0, 10944.5], [2295.0, 21037.0], [2263.0, 21052.0], [2231.0, 21037.0], [2215.0, 21034.0], [2199.0, 21042.0], [2423.0, 21029.5], [2359.0, 21056.0], [2311.0, 21038.0], [2551.0, 21060.0], [2535.0, 21890.0], [2503.0, 21042.0], [2439.0, 21047.5], [2455.0, 21042.0], [2663.0, 21053.0], [2631.0, 21037.0], [2599.0, 20607.0], [2567.0, 21046.75], [2807.0, 21035.0], [2791.0, 21048.0], [2727.0, 20476.0], [2711.0, 21051.5], [2695.0, 21060.666666666668], [2919.0, 21040.0], [2935.0, 21035.0], [2871.0, 21053.0], [2839.0, 20357.0], [2823.0, 21037.0], [2903.0, 21028.0], [3063.0, 21028.0], [2951.0, 21031.0], [2999.0, 21053.0], [3079.0, 21035.0], [3095.0, 11071.0], [3127.0, 20274.0], [3111.0, 21026.0], [3143.0, 21028.2], [3191.0, 21033.0], [3175.0, 21030.0], [3159.0, 21025.0], [3319.0, 21041.0], [3287.0, 21025.5], [3239.0, 21028.0], [3447.0, 21029.5], [3351.0, 21039.0], [3399.0, 20490.0], [3383.0, 21030.0], [3367.0, 21035.0], [3463.0, 14477.333333333334], [3495.0, 21031.0], [3527.0, 21036.0], [3543.0, 21039.0], [3575.0, 21030.0], [3559.0, 21027.5], [3655.0, 21034.0], [3591.0, 21030.333333333332], [3831.0, 21137.0], [3959.0, 19297.0], [3943.0, 20741.0], [3895.0, 21032.0], [4087.0, 16913.0], [4039.0, 18285.0], [3975.0, 19525.0], [3991.0, 20037.0], [4023.0, 19226.0], [4007.0, 18632.0], [4055.0, 17253.0], [4142.0, 17126.0], [4334.0, 13323.0], [4174.0, 16367.0], [4206.0, 14954.0], [4110.0, 17657.0], [4302.0, 14400.0], [4238.0, 14379.0], [4270.0, 14190.0], [4494.0, 11545.0], [4590.0, 9079.0], [4526.0, 9822.0], [4558.0, 9302.0], [4366.0, 13844.0], [4398.0, 12290.0], [4430.0, 12895.0], [4814.0, 5195.0], [4846.0, 4855.0], [4750.0, 6560.0], [4782.0, 5740.0], [4622.0, 9495.0], [4654.0, 8226.0], [4718.0, 7270.0], [4686.0, 7788.0], [4878.0, 4227.0], [4910.0, 3528.0], [4942.0, 2905.0], [4335.0, 13011.0], [4271.0, 14112.0], [4303.0, 14383.0], [4143.0, 16780.0], [4111.0, 17644.0], [4207.0, 14940.0], [4175.0, 16360.0], [4367.0, 13838.0], [4399.0, 12270.0], [4463.0, 11557.555555555555], [4431.0, 12002.0], [4559.0, 10408.0], [4495.0, 11483.0], [4527.0, 9796.0], [4591.0, 9063.0], [4815.0, 5322.0], [4847.0, 4661.0], [4751.0, 6590.0], [4783.0, 5700.0], [4623.0, 9110.0], [4655.0, 8206.0], [4719.0, 7256.0], [4687.0, 7758.0], [4879.0, 4049.0], [4911.0, 3552.0], [4943.0, 2860.0], [271.0, 45092.0], [269.0, 45118.0], [267.0, 45159.0], [265.0, 45194.0], [263.0, 45213.0], [261.0, 45263.0], [259.0, 45287.0], [257.0, 45321.0], [287.0, 45164.0], [285.0, 45200.0], [283.0, 45238.0], [281.0, 45271.0], [279.0, 44354.0], [277.0, 44983.0], [275.0, 45027.0], [273.0, 45044.0], [303.0, 44889.0], [301.0, 44937.0], [299.0, 44971.0], [297.0, 44994.0], [295.0, 45030.0], [293.0, 45056.0], [291.0, 45090.0], [289.0, 45130.0], [319.0, 44612.0], [317.0, 44645.0], [315.0, 44684.0], [313.0, 44715.0], [311.0, 44749.0], [309.0, 44787.0], [307.0, 44826.0], [305.0, 44854.0], [335.0, 44326.0], [333.0, 44366.0], [331.0, 44402.0], [329.0, 44437.0], [327.0, 44470.0], [325.0, 44509.0], [323.0, 44542.0], [321.0, 44571.0], [351.0, 44096.0], [349.0, 44125.0], [347.0, 44160.0], [345.0, 44186.0], [343.0, 44205.0], [341.0, 44240.0], [339.0, 44257.0], [337.0, 44293.0], [367.0, 43793.0], [365.0, 43826.0], [363.0, 43861.0], [361.0, 43899.0], [359.0, 43933.0], [357.0, 43541.0], [355.0, 44018.0], [353.0, 43088.0], [383.0, 42027.0], [381.0, 42074.0], [379.0, 42094.0], [377.0, 42137.0], [375.0, 42159.0], [373.0, 43672.0], [371.0, 43704.0], [369.0, 43759.0], [399.0, 41772.0], [397.0, 41809.0], [395.0, 41844.0], [393.0, 41863.0], [391.0, 43359.0], [389.0, 43405.0], [387.0, 43438.0], [385.0, 41995.0], [415.0, 41510.0], [413.0, 41543.0], [411.0, 41575.0], [409.0, 41600.0], [407.0, 43085.0], [405.0, 41668.0], [403.0, 41700.0], [401.0, 41734.0], [431.0, 41230.0], [429.0, 41227.0], [427.0, 41247.0], [425.0, 41282.0], [423.0, 41318.0], [421.0, 41362.0], [419.0, 41432.0], [417.0, 41475.0], [447.0, 42020.0], [445.0, 40974.0], [443.0, 41017.0], [441.0, 42497.0], [439.0, 42532.0], [437.0, 41127.0], [435.0, 41161.0], [433.0, 41195.0], [463.0, 41657.0], [461.0, 40859.0], [459.0, 40904.0], [457.0, 40923.0], [455.0, 40868.0], [453.0, 40866.0], [451.0, 40898.0], [449.0, 40925.0], [479.0, 40424.0], [477.0, 40457.0], [475.0, 40627.0], [473.0, 40664.0], [471.0, 40691.0], [469.0, 40726.0], [467.0, 40764.0], [465.0, 40798.0], [495.0, 40302.0], [493.0, 40319.0], [491.0, 40345.0], [489.0, 40375.0], [487.0, 40406.0], [485.0, 40436.0], [483.0, 40475.0], [481.0, 40508.0], [511.0, 40995.0], [509.0, 39979.0], [507.0, 41404.0], [505.0, 41070.0], [503.0, 41467.0], [501.0, 41131.0], [499.0, 40227.0], [497.0, 41532.0], [542.0, 40737.0], [538.0, 40807.0], [534.0, 40869.0], [530.0, 40723.0], [526.0, 40784.0], [522.0, 40731.0], [518.0, 39859.0], [514.0, 41348.0], [574.0, 39185.0], [570.0, 39242.0], [566.0, 39329.0], [562.0, 39363.0], [558.0, 39437.0], [554.0, 39507.0], [550.0, 40611.0], [546.0, 40677.0], [606.0, 38711.0], [602.0, 38775.0], [598.0, 38836.0], [594.0, 38913.0], [590.0, 39001.0], [586.0, 40039.0], [582.0, 40106.0], [578.0, 40174.0], [638.0, 39147.0], [634.0, 38313.0], [630.0, 38388.0], [626.0, 38434.0], [622.0, 38464.0], [618.0, 38547.0], [614.0, 38565.0], [610.0, 38637.0], [670.0, 37776.0], [666.0, 37839.0], [662.0, 37892.0], [658.0, 37956.0], [654.0, 38028.0], [650.0, 38090.0], [646.0, 38150.0], [642.0, 38217.0], [702.0, 36678.0], [698.0, 36783.0], [694.0, 36866.0], [690.0, 36893.0], [686.0, 36960.0], [674.0, 37723.0], [678.0, 37750.0], [682.0, 37040.0], [734.0, 36202.0], [730.0, 36264.0], [726.0, 36322.0], [722.0, 36360.0], [718.0, 36429.0], [706.0, 36638.0], [710.0, 36568.0], [714.0, 36496.0], [766.0, 37078.0], [762.0, 35848.0], [758.0, 36733.0], [754.0, 36633.0], [750.0, 36826.0], [738.0, 36174.0], [742.0, 36136.0], [746.0, 36857.0], [798.0, 36383.0], [794.0, 36334.0], [790.0, 36383.0], [786.0, 36098.0], [782.0, 36525.0], [770.0, 36706.0], [774.0, 36673.0], [778.0, 36427.0], [830.0, 34241.0], [826.0, 34315.0], [822.0, 35756.0], [818.0, 36065.0], [814.0, 36138.0], [806.0, 36231.0], [802.0, 36292.0], [810.0, 36191.0], [862.0, 33823.0], [858.0, 33713.0], [854.0, 33885.0], [850.0, 33930.0], [846.0, 34014.0], [834.0, 34213.0], [838.0, 34138.0], [842.0, 34070.0], [894.0, 33925.0], [890.0, 33932.0], [886.0, 34013.0], [882.0, 34092.0], [878.0, 33914.0], [870.0, 33771.0], [866.0, 33786.0], [874.0, 33944.0], [926.0, 33630.0], [922.0, 33636.0], [918.0, 33723.0], [914.0, 33799.0], [910.0, 33785.0], [898.0, 33947.0], [902.0, 33852.0], [934.0, 34166.0], [954.0, 33634.0], [930.0, 33579.0], [950.0, 33229.0], [946.0, 33644.0], [942.0, 33720.0], [938.0, 33769.0], [990.0, 32910.0], [986.0, 32682.0], [982.0, 32368.0], [978.0, 33215.0], [974.0, 33308.0], [962.0, 33503.0], [966.0, 33459.0], [970.0, 33352.0], [1018.0, 31926.0], [1022.0, 31875.0], [998.0, 32766.0], [994.0, 32847.0], [1010.0, 32011.0], [1006.0, 31975.0], [1002.0, 31072.0], [1084.0, 30853.0], [1076.0, 30981.0], [1068.0, 30147.0], [1060.0, 30229.0], [1052.0, 31338.0], [1028.0, 31776.0], [1036.0, 31570.0], [1044.0, 31465.0], [1148.0, 28947.0], [1140.0, 28510.0], [1132.0, 28544.0], [1124.0, 29804.0], [1116.0, 28740.0], [1092.0, 29735.0], [1100.0, 29479.0], [1108.0, 29498.0], [1212.0, 27047.0], [1204.0, 27128.0], [1196.0, 28307.0], [1188.0, 28464.0], [1180.0, 28632.0], [1156.0, 28856.0], [1164.0, 28830.0], [1172.0, 28774.0], [1276.0, 27235.0], [1268.0, 26150.5], [1260.0, 27385.0], [1252.0, 26328.0], [1244.0, 26447.0], [1220.0, 28007.0], [1228.0, 26718.0], [1236.0, 26558.0], [1340.0, 25652.0], [1332.0, 25003.0], [1324.0, 26352.0], [1316.0, 25242.0], [1308.0, 25374.0], [1284.0, 27045.0], [1292.0, 26859.0], [1300.0, 25593.0], [1404.0, 24367.0], [1396.0, 24479.0], [1388.0, 25276.0], [1380.0, 24568.0], [1372.0, 25448.0], [1348.0, 25670.0], [1356.0, 25565.0], [1364.0, 25432.0], [1468.0, 24045.0], [1460.0, 24163.0], [1452.0, 23721.0], [1444.0, 24434.0], [1436.0, 24536.0], [1412.0, 24585.0], [1420.0, 24414.5], [1428.0, 24762.0], [1532.0, 21393.0], [1524.0, 22897.0], [1516.0, 22904.0], [1508.0, 22591.0], [1500.0, 22108.0], [1476.0, 23938.0], [1484.0, 23763.0], [1492.0, 23599.0], [1580.0, 21083.666666666668], [1572.0, 21084.5], [1540.0, 21097.0], [1660.0, 21078.0], [1636.0, 21084.0], [1700.0, 21076.0], [1676.0, 21070.0], [1788.0, 21054.0], [1772.0, 21050.0], [1764.0, 21055.5], [1756.0, 21072.0], [1748.0, 21059.0], [1740.0, 21059.0], [1852.0, 21042.0], [1804.0, 21038.5], [1796.0, 21055.0], [1836.0, 21042.5], [1828.0, 21044.5], [1812.0, 21040.0], [1908.0, 21046.0], [1916.0, 21038.0], [1860.0, 21033.0], [1900.0, 21040.0], [1892.0, 21042.0], [1876.0, 21036.0], [1980.0, 21044.0], [1940.0, 21051.0], [1924.0, 21039.0], [2012.0, 21038.333333333332], [2004.0, 21041.0], [1996.0, 21037.333333333332], [1988.0, 21034.0], [2152.0, 21048.0], [2120.0, 21036.0], [2104.0, 21056.0], [2088.0, 21043.0], [2056.0, 21036.0], [2280.0, 21075.0], [2264.0, 21035.75], [2248.0, 21033.5], [2216.0, 21015.0], [2328.0, 21034.0], [2408.0, 21032.0], [2376.0, 21050.0], [2360.0, 21054.5], [2344.0, 21058.5], [2552.0, 21056.0], [2504.0, 21040.0], [2648.0, 21044.8], [2568.0, 21053.0], [2792.0, 21039.166666666664], [2920.0, 21043.0], [2888.0, 21044.0], [2856.0, 1009.0], [2936.0, 21029.0], [2824.0, 21038.0], [2872.0, 21267.0], [2904.0, 21030.0], [3064.0, 21028.0], [3048.0, 21030.0], [2952.0, 21046.0], [3000.0, 21055.5], [3032.0, 21051.0], [3016.0, 21042.0], [3192.0, 21039.5], [3176.0, 21031.5], [3080.0, 21041.333333333332], [3128.0, 20359.0], [3112.0, 21026.0], [3224.0, 21026.666666666668], [3272.0, 11098.0], [3288.0, 21027.0], [3240.0, 21028.0], [3336.0, 21029.5], [3432.0, 21032.0], [3448.0, 21037.0], [3352.0, 21032.333333333332], [3368.0, 21025.5], [3576.0, 21031.0], [3560.0, 21026.0], [3480.0, 21029.0], [3496.0, 21027.0], [3608.0, 21104.5], [3656.0, 21032.5], [3592.0, 21029.0], [3624.0, 21068.5], [3832.0, 21137.5], [3768.0, 21140.0], [3960.0, 19305.0], [3912.0, 21027.5], [3944.0, 20708.0], [3928.0, 20554.5], [4088.0, 17892.0], [4040.0, 18585.0], [4072.0, 17901.5], [3976.0, 19514.0], [3992.0, 18867.0], [4024.0, 18389.0], [4008.0, 18627.0], [4056.0, 17910.0], [4304.0, 14366.0], [4336.0, 13345.0], [4240.0, 14320.0], [4272.0, 14693.0], [4112.0, 17626.0], [4144.0, 17228.0], [4208.0, 16211.0], [4176.0, 16343.0], [4592.0, 9050.0], [4400.0, 12342.0], [4432.0, 11983.0], [4560.0, 10407.0], [4496.0, 10532.0], [4528.0, 9781.0], [4816.0, 5186.0], [4848.0, 4843.0], [4752.0, 6524.0], [4784.0, 5636.0], [4624.0, 9412.0], [4656.0, 8138.0], [4720.0, 7233.0], [4688.0, 7743.0], [4880.0, 4186.0], [4912.0, 3476.0], [4944.0, 2857.0], [4305.0, 14346.0], [4337.0, 14229.0], [4241.0, 14349.0], [4273.0, 14678.0], [4113.0, 17610.0], [4145.0, 17246.0], [4209.0, 14685.0], [4177.0, 16323.0], [4401.0, 12323.0], [4593.0, 9032.0], [4369.0, 13757.5], [4465.0, 11288.5], [4433.0, 11735.0], [4497.0, 11476.0], [4529.0, 9762.0], [4817.0, 5164.0], [4849.0, 4632.0], [4753.0, 6509.0], [4785.0, 5622.0], [4625.0, 9074.0], [4657.0, 8240.0], [4721.0, 7217.0], [4689.0, 7723.0], [4881.0, 4015.0], [4913.0, 3478.0], [4945.0, 2837.0], [2153.0, 21044.5], [2057.0, 21036.0], [2137.0, 21034.333333333332], [2121.0, 21033.0], [2105.0, 21056.0], [2297.0, 21038.333333333332], [2265.0, 21036.833333333336], [2249.0, 21036.5], [2233.0, 21034.0], [2217.0, 21021.0], [2201.0, 21032.0], [2425.0, 21035.333333333332], [2409.0, 21030.0], [2361.0, 21061.5], [2313.0, 21033.5], [2345.0, 21058.0], [2329.0, 21035.0], [2521.0, 21025.0], [2473.0, 21055.0], [2457.0, 21042.75], [2441.0, 21043.5], [2633.0, 947.0], [2665.0, 21055.0], [2569.0, 21048.0], [2793.0, 20417.0], [2809.0, 21033.5], [2777.0, 21042.0], [2761.0, 21043.0], [2713.0, 21053.0], [2889.0, 21044.0], [2921.0, 21028.0], [2905.0, 21028.0], [2825.0, 21035.8], [3065.0, 21023.0], [3017.0, 21046.0], [3049.0, 21031.0], [3001.0, 21050.0], [3033.0, 21053.5], [3177.0, 21041.0], [3193.0, 21032.0], [3129.0, 20341.0], [3081.0, 20296.0], [3097.0, 21036.0], [3113.0, 21027.0], [3321.0, 21040.0], [3273.0, 21038.0], [3225.0, 21037.0], [3289.0, 21025.5], [3449.0, 11150.5], [3385.0, 21030.5], [3561.0, 21026.0], [3577.0, 21030.0], [3465.0, 21026.0], [3481.0, 21023.0], [3545.0, 21027.0], [3625.0, 20446.0], [3801.0, 21131.0], [3721.0, 21142.0], [3945.0, 20378.0], [3913.0, 21037.0], [3961.0, 19292.0], [3849.0, 21206.0], [3929.0, 20759.0], [4089.0, 17456.0], [4041.0, 18576.0], [4073.0, 17111.0], [3993.0, 20007.0], [3977.0, 19495.0], [4025.0, 18376.0], [4009.0, 18620.0], [4057.0, 17893.0], [4146.0, 17129.0], [4178.0, 16295.0], [4210.0, 14673.0], [4114.0, 17576.0], [4306.0, 14501.0], [4242.0, 14343.0], [4274.0, 14662.0], [4338.0, 12988.0], [4594.0, 9013.0], [4562.0, 9851.5], [4498.0, 10503.0], [4530.0, 9746.0], [4370.0, 13664.0], [4402.0, 12300.0], [4466.0, 11876.0], [4434.0, 11712.0], [4818.0, 5149.0], [4850.0, 4807.0], [4754.0, 6528.0], [4786.0, 5601.0], [4626.0, 9110.0], [4658.0, 8130.0], [4722.0, 7636.0], [4690.0, 7709.0], [4882.0, 3994.0], [4914.0, 3502.0], [4946.0, 2814.0], [4307.0, 14329.0], [4339.0, 13947.0], [4243.0, 14335.0], [4275.0, 14640.0], [4147.0, 17374.0], [4115.0, 17551.0], [4211.0, 16178.0], [4179.0, 16291.0], [4563.0, 10406.0], [4595.0, 8994.0], [4371.0, 13809.0], [4403.0, 12677.0], [4467.0, 11855.0], [4435.0, 11611.0], [4499.0, 11449.0], [4531.0, 9726.0], [4819.0, 5125.0], [4851.0, 4590.0], [4755.0, 6398.0], [4787.0, 5580.0], [4627.0, 9039.0], [4659.0, 8112.0], [4723.0, 7615.0], [4691.0, 7686.0], [4883.0, 4131.0], [4915.0, 3480.0], [4947.0, 2799.0], [1085.0, 30979.0], [1077.0, 30962.0], [1069.0, 30082.0], [1061.0, 30221.0], [1053.0, 30357.0], [1029.0, 31759.0], [1037.0, 31540.0], [1045.0, 31590.0], [1149.0, 28379.0], [1141.0, 29046.0], [1133.0, 28532.0], [1125.0, 29853.0], [1117.0, 29895.0], [1093.0, 29718.0], [1101.0, 29601.0], [1109.0, 29479.0], [1213.0, 27028.0], [1205.0, 28256.0], [1197.0, 28359.0], [1189.0, 28443.0], [1181.0, 28616.0], [1157.0, 28832.0], [1165.0, 28822.0], [1173.0, 28573.0], [1277.0, 26087.0], [1269.0, 26134.0], [1261.0, 26207.0], [1253.0, 26310.0], [1245.0, 26429.0], [1221.0, 26846.0], [1229.0, 26701.0], [1237.0, 26525.0], [1341.0, 25649.0], [1333.0, 24985.0], [1325.0, 25108.0], [1317.0, 25214.0], [1309.0, 25355.0], [1285.0, 26997.0], [1293.0, 26818.0], [1301.0, 25557.0], [1405.0, 24340.0], [1397.0, 24463.0], [1389.0, 25272.0], [1381.0, 24562.0], [1373.0, 25336.0], [1349.0, 25650.0], [1357.0, 25685.0], [1365.0, 25414.0], [1461.0, 24140.0], [1469.0, 24099.0], [1421.0, 24771.0], [1413.0, 24720.0], [1453.0, 23843.0], [1445.0, 24415.0], [1437.0, 24071.0], [1429.0, 24737.0], [1533.0, 21768.0], [1525.0, 22919.0], [1517.0, 21988.0], [1509.0, 22647.0], [1501.0, 22117.0], [1477.0, 23902.0], [1485.0, 23743.0], [1493.0, 22172.0], [1549.0, 21094.0], [1589.0, 21080.0], [1565.0, 21088.0], [1557.0, 21088.0], [1541.0, 21092.5], [1605.0, 21076.0], [1693.0, 21083.5], [1685.0, 21080.0], [1677.0, 21071.5], [1765.0, 21051.0], [1757.0, 21057.0], [1749.0, 21064.5], [1845.0, 21047.5], [1829.0, 21034.0], [1821.0, 21038.0], [1813.0, 21034.666666666668], [1805.0, 21039.0], [1869.0, 21034.0], [1909.0, 21049.0], [1901.0, 21050.0], [1885.0, 21043.0], [1877.0, 21035.0], [1981.0, 21045.5], [1933.0, 21063.0], [2037.0, 21037.5], [2045.0, 21036.5], [2029.0, 21031.0], [2021.0, 21035.5], [1997.0, 21037.0], [2170.0, 21046.333333333332], [2138.0, 21031.0], [2122.0, 21037.0], [2090.0, 21022.0], [2266.0, 21087.0], [2234.0, 21035.6], [2330.0, 21036.0], [2394.0, 21042.5], [2362.0, 21054.0], [2346.0, 21075.0], [2314.0, 21030.0], [2554.0, 21044.0], [2522.0, 22107.0], [2506.0, 21042.333333333332], [2666.0, 21049.0], [2650.0, 21053.5], [2634.0, 21034.666666666668], [2618.0, 21064.0], [2778.0, 21032.666666666668], [2762.0, 21036.0], [2698.0, 21058.0], [2938.0, 21040.0], [2922.0, 21041.0], [2906.0, 21029.0], [2858.0, 20334.0], [2826.0, 20403.0], [2954.0, 21037.0], [3066.0, 21034.333333333332], [3002.0, 21041.0], [3018.0, 21047.0], [3034.0, 21027.0], [3146.0, 21032.0], [3130.0, 21366.0], [3242.0, 21027.333333333332], [3290.0, 21028.0], [3274.0, 21035.0], [3338.0, 21030.666666666668], [3450.0, 21032.0], [3434.0, 21034.666666666668], [3386.0, 21035.0], [3370.0, 21024.0], [3578.0, 21030.0], [3530.0, 21035.0], [3562.0, 21026.0], [3466.0, 21028.0], [3498.0, 21029.5], [3706.0, 21144.0], [3658.0, 21031.5], [3594.0, 21032.0], [3610.0, 21021.0], [3626.0, 20164.0], [3770.0, 21139.0], [3962.0, 19271.0], [3946.0, 20377.0], [3898.0, 21036.333333333332], [4090.0, 17860.0], [4042.0, 18266.0], [4074.0, 18096.0], [3978.0, 19482.0], [3994.0, 18852.0], [4026.0, 18714.0], [4010.0, 18610.0], [4058.0, 17860.0], [4308.0, 14316.0], [4340.0, 13766.0], [4244.0, 14285.0], [4276.0, 14624.0], [4148.0, 17309.0], [4116.0, 17521.0], [4212.0, 14648.0], [4180.0, 16261.0], [4372.0, 13852.0], [4404.0, 12273.0], [4468.0, 11563.0], [4436.0, 11838.0], [4564.0, 10362.0], [4500.0, 10487.0], [4532.0, 9705.0], [4596.0, 8976.0], [4820.0, 5104.0], [4852.0, 4759.0], [4756.0, 6382.0], [4788.0, 5543.0], [4628.0, 9074.0], [4660.0, 8090.0], [4724.0, 7560.0], [4692.0, 8151.0], [4884.0, 4106.0], [4916.0, 3425.0], [4948.0, 2775.0], [4309.0, 13436.0], [4341.0, 12943.0], [4245.0, 14286.0], [4277.0, 14604.0], [4117.0, 17508.0], [4149.0, 17308.0], [4213.0, 14638.0], [4181.0, 16253.0], [4373.0, 13854.0], [4405.0, 12256.0], [4469.0, 11548.0], [4437.0, 11818.0], [4565.0, 9273.0], [4501.0, 10468.0], [4533.0, 10669.0], [4597.0, 8961.0], [4821.0, 5256.0], [4757.0, 6356.0], [4789.0, 5536.0], [4853.0, 4748.0], [4629.0, 9059.0], [4661.0, 8071.0], [4725.0, 7542.0], [4693.0, 8136.0], [4885.0, 3938.0], [4917.0, 3444.0], [4949.0, 2757.0], [2155.0, 21039.0], [2059.0, 21035.5], [2139.0, 21038.0], [2123.0, 21041.0], [2107.0, 21040.0], [2091.0, 21024.0], [2299.0, 21039.5], [2283.0, 21044.0], [2203.0, 21024.5], [2267.0, 22260.0], [2251.0, 21020.5], [2235.0, 21044.0], [2427.0, 21033.0], [2379.0, 21051.0], [2363.0, 21053.0], [2347.0, 21057.0], [2459.0, 21042.5], [2667.0, 21052.0], [2635.0, 21062.666666666668], [2619.0, 21059.0], [2779.0, 21032.0], [2939.0, 21025.0], [2907.0, 21028.0], [3067.0, 21029.0], [3051.0, 21033.0], [2955.0, 21036.25], [3083.0, 21033.0], [3195.0, 21029.333333333332], [3131.0, 20321.0], [3115.0, 21028.333333333332], [3147.0, 21033.0], [3099.0, 21028.0], [3163.0, 21027.0], [3227.0, 21030.0], [3211.0, 21037.0], [3291.0, 21026.0], [3243.0, 21030.0], [3355.0, 21033.0], [3387.0, 21035.0], [3371.0, 21034.5], [3467.0, 21024.0], [3483.0, 21024.25], [3531.0, 21030.0], [3547.0, 21030.5], [3579.0, 21031.0], [3563.0, 21027.0], [3707.0, 21144.0], [3659.0, 21034.0], [3643.0, 21032.0], [3627.0, 20168.0], [3819.0, 21140.5], [3963.0, 19666.0], [3915.0, 21030.0], [3947.0, 20325.0], [3899.0, 21033.0], [3931.0, 20676.0], [4091.0, 17858.0], [4075.0, 17069.0], [4043.0, 18563.0], [3979.0, 19471.0], [4027.0, 18388.0], [4011.0, 18584.0], [4059.0, 18561.0], [4150.0, 16706.0], [4214.0, 16072.0], [4310.0, 13414.0], [4182.0, 16233.0], [4118.0, 17499.0], [4246.0, 14282.0], [4278.0, 14586.0], [4342.0, 13216.0], [4566.0, 9255.0], [4502.0, 10772.0], [4534.0, 9682.0], [4598.0, 8942.0], [4374.0, 13850.0], [4406.0, 12236.0], [4470.0, 11511.0], [4438.0, 12036.0], [4822.0, 5088.0], [4854.0, 4728.0], [4758.0, 6330.0], [4790.0, 5829.0], [4630.0, 8660.0], [4662.0, 8054.0], [4726.0, 7525.0], [4694.0, 7696.0], [4886.0, 4070.0], [4918.0, 3412.0], [4950.0, 2671.0], [4247.0, 14283.0], [4343.0, 12917.0], [4279.0, 14568.0], [4311.0, 13645.0], [4119.0, 17070.0], [4215.0, 14613.0], [4183.0, 16217.0], [4471.0, 11510.0], [4407.0, 12111.0], [4439.0, 11248.0], [4567.0, 9216.0], [4503.0, 10755.0], [4535.0, 9659.0], [4599.0, 9129.0], [4823.0, 5065.0], [4855.0, 4515.0], [4759.0, 6313.0], [4791.0, 5605.0], [4631.0, 8987.0], [4663.0, 8034.0], [4727.0, 7165.0], [4695.0, 7675.0], [4887.0, 3898.0], [4919.0, 3429.0], [4951.0, 2644.0], [543.0, 40784.0], [539.0, 40788.0], [535.0, 40856.0], [531.0, 40771.0], [527.0, 40766.0], [523.0, 40712.0], [519.0, 39839.0], [515.0, 39912.0], [575.0, 39168.0], [571.0, 39257.0], [567.0, 39311.0], [563.0, 39366.0], [559.0, 39422.0], [555.0, 39482.0], [551.0, 40597.0], [547.0, 40645.0], [607.0, 38694.0], [603.0, 38754.0], [599.0, 38818.0], [595.0, 38892.0], [591.0, 38963.0], [587.0, 39044.0], [583.0, 40089.0], [579.0, 40160.0], [639.0, 38254.0], [635.0, 38356.0], [631.0, 39017.0], [627.0, 38369.0], [623.0, 38448.0], [619.0, 38539.0], [615.0, 38555.0], [611.0, 38646.0], [671.0, 38291.0], [667.0, 38354.0], [663.0, 37879.0], [659.0, 37946.0], [655.0, 38015.0], [651.0, 38077.0], [647.0, 38134.0], [643.0, 38805.0], [703.0, 36694.0], [699.0, 36753.0], [695.0, 36838.0], [691.0, 36908.0], [687.0, 36920.0], [675.0, 37701.0], [679.0, 37733.0], [683.0, 37009.0], [711.0, 36548.0], [731.0, 36249.0], [707.0, 36606.0], [727.0, 36304.0], [723.0, 36311.0], [719.0, 36410.0], [715.0, 36477.0], [767.0, 35800.0], [763.0, 37108.0], [759.0, 36922.0], [755.0, 36607.0], [751.0, 36237.0], [739.0, 36736.0], [743.0, 36120.0], [747.0, 36826.0], [799.0, 36221.0], [795.0, 36294.0], [791.0, 36392.0], [787.0, 36308.0], [783.0, 36514.0], [771.0, 36530.0], [775.0, 36657.0], [779.0, 36596.0], [831.0, 34220.0], [827.0, 34294.0], [823.0, 36140.0], [819.0, 35803.0], [815.0, 36121.0], [803.0, 36263.0], [807.0, 36235.0], [811.0, 36366.0], [863.0, 33654.0], [859.0, 33870.0], [855.0, 33881.0], [851.0, 33776.0], [847.0, 33994.0], [835.0, 34186.0], [839.0, 34120.0], [843.0, 34046.0], [895.0, 33980.0], [891.0, 34003.0], [887.0, 34039.0], [883.0, 33834.0], [879.0, 33695.0], [867.0, 33738.0], [871.0, 33755.0], [875.0, 33730.0], [927.0, 33622.0], [923.0, 33614.0], [919.0, 33717.0], [915.0, 33792.0], [911.0, 33745.0], [899.0, 33879.0], [903.0, 33887.0], [907.0, 33829.5], [959.0, 33670.0], [955.0, 33609.0], [951.0, 33586.0], [947.0, 33647.0], [943.0, 33708.0], [931.0, 33549.0], [935.0, 33833.0], [939.0, 33771.0], [991.0, 32750.0], [987.0, 32966.0], [983.0, 32350.0], [979.0, 33219.0], [975.0, 33503.0], [963.0, 33489.0], [967.0, 33651.0], [971.0, 33362.0], [1023.0, 31859.0], [1019.0, 30844.0], [1015.0, 31410.0], [1011.0, 31992.0], [1007.0, 31944.0], [995.0, 32675.0], [999.0, 32437.0], [1003.0, 31054.0], [1086.0, 30823.0], [1078.0, 30953.0], [1070.0, 30070.0], [1062.0, 30191.0], [1054.0, 31307.0], [1030.0, 31743.0], [1038.0, 31536.0], [1046.0, 31429.0], [1150.0, 28903.0], [1142.0, 28842.0], [1134.0, 29162.0], [1126.0, 28635.0], [1118.0, 28728.0], [1094.0, 29020.0], [1102.0, 29588.0], [1110.0, 29479.0], [1214.0, 27003.0], [1206.0, 27110.0], [1198.0, 28272.0], [1190.0, 28414.0], [1182.0, 28597.0], [1158.0, 28817.0], [1166.0, 28780.0], [1174.0, 28732.0], [1278.0, 26064.0], [1270.0, 27152.0], [1262.0, 27358.0], [1254.0, 26301.0], [1246.0, 26415.0], [1222.0, 27974.0], [1230.0, 26700.0], [1238.0, 26508.0], [1342.0, 25626.0], [1334.0, 24969.0], [1326.0, 25107.0], [1318.0, 25200.0], [1310.0, 25348.0], [1286.0, 26965.0], [1294.0, 25697.0], [1302.0, 25548.0], [1398.0, 25161.0], [1406.0, 25011.0], [1358.0, 24673.0], [1350.0, 25630.0], [1390.0, 25250.0], [1382.0, 25345.0], [1374.0, 25320.0], [1366.0, 25401.0], [1470.0, 24021.0], [1462.0, 24105.0], [1454.0, 23995.0], [1446.0, 24399.0], [1438.0, 24520.0], [1414.0, 24704.0], [1422.0, 24782.0], [1430.0, 24726.0], [1534.0, 21361.0], [1526.0, 22928.0], [1518.0, 22195.0], [1510.0, 21994.0], [1502.0, 22076.0], [1478.0, 23938.0], [1486.0, 23337.0], [1494.0, 23581.0], [1590.0, 21081.0], [1558.0, 21088.0], [1550.0, 21090.333333333332], [1662.0, 21074.0], [1622.0, 21081.0], [1702.0, 21078.0], [1694.0, 21080.0], [1686.0, 21097.5], [1670.0, 21073.0], [1782.0, 15932.0], [1790.0, 21048.0], [1766.0, 21067.0], [1758.0, 21052.0], [1750.0, 21073.0], [1734.0, 21060.5], [1854.0, 21053.5], [1822.0, 21040.5], [1814.0, 21037.5], [1798.0, 21055.5], [1894.0, 21044.5], [1886.0, 21047.666666666668], [1878.0, 21038.0], [1862.0, 21031.0], [1942.0, 21036.0], [1934.0, 21074.0], [2030.0, 21036.0], [2014.0, 21038.5], [2006.0, 21036.0], [1998.0, 21036.0], [2172.0, 21045.5], [2156.0, 21044.0], [2124.0, 21040.5], [2108.0, 21057.5], [2300.0, 21050.5], [2268.0, 21072.0], [2252.0, 21031.0], [2220.0, 21032.75], [2204.0, 21023.0], [2428.0, 21039.5], [2412.0, 21030.0], [2396.0, 21042.0], [2380.0, 21049.0], [2364.0, 21051.0], [2316.0, 21030.0], [2332.0, 21036.333333333332], [2556.0, 21050.5], [2508.0, 21044.5], [2492.0, 21045.0], [2476.0, 21054.0], [2588.0, 21028.0], [2668.0, 21051.0], [2652.0, 21055.166666666668], [2620.0, 21061.0], [2572.0, 21045.6], [2812.0, 21031.0], [2924.0, 21031.0], [2940.0, 21037.0], [2892.0, 21037.5], [3052.0, 21028.0], [3068.0, 21026.0], [3004.0, 21032.5], [2988.0, 21036.0], [3036.0, 21027.666666666668], [3020.0, 21028.0], [3196.0, 21022.0], [3180.0, 21036.0], [3100.0, 21027.0], [3116.0, 21030.5], [3148.0, 21031.666666666668], [3292.0, 21030.666666666668], [3244.0, 21029.0], [3452.0, 21033.5], [3340.0, 21033.0], [3372.0, 21035.0], [3580.0, 21030.0], [3532.0, 21030.0], [3564.0, 21027.5], [3500.0, 21030.0], [3468.0, 21024.0], [3484.0, 21029.5], [3548.0, 21030.0], [3596.0, 21030.0], [3644.0, 21036.0], [3628.0, 21211.0], [3740.0, 21144.0], [3964.0, 19256.0], [3948.0, 20282.0], [3900.0, 21025.0], [3932.0, 20862.0], [4092.0, 17813.0], [4044.0, 18556.0], [4076.0, 17053.0], [4028.0, 18703.0], [3980.0, 19463.0], [3996.0, 19924.5], [4012.0, 18541.0], [4060.0, 17789.0], [4312.0, 13681.0], [4344.0, 13694.0], [4248.0, 14282.0], [4280.0, 13933.0], [4216.0, 14597.0], [4120.0, 17479.0], [4152.0, 17042.0], [4184.0, 16196.0], [4376.0, 13848.0], [4408.0, 12209.0], [4472.0, 11477.0], [4440.0, 11230.0], [4568.0, 9220.0], [4504.0, 10867.0], [4536.0, 9640.0], [4600.0, 8765.0], [4760.0, 6300.0], [4824.0, 5048.0], [4792.0, 5797.0], [4632.0, 8969.0], [4664.0, 8023.0], [4728.0, 7146.0], [4696.0, 7652.0], [4888.0, 3886.0], [4920.0, 3369.0], [4952.0, 2613.0], [4313.0, 13639.0], [4345.0, 13872.0], [4249.0, 14279.0], [4281.0, 14505.0], [4217.0, 14580.0], [4121.0, 17459.0], [4153.0, 17266.0], [4185.0, 16184.0], [4377.0, 13648.0], [4409.0, 12186.0], [4473.0, 11460.0], [4441.0, 11213.0], [4569.0, 9180.0], [4505.0, 10854.0], [4537.0, 9626.0], [4601.0, 8747.0], [4825.0, 5018.0], [4857.0, 4686.0], [4761.0, 6286.0], [4793.0, 5579.0], [4633.0, 9001.0], [4665.0, 7997.0], [4729.0, 6926.0], [4697.0, 7638.0], [4953.0, 2597.0], [4889.0, 2830.5], [4921.0, 3392.0], [2173.0, 21047.333333333332], [2141.0, 21037.5], [2125.0, 21038.0], [2109.0, 21021.0], [2061.0, 21033.5], [2253.0, 21038.0], [2237.0, 21045.0], [2333.0, 21063.5], [2429.0, 21039.0], [2397.0, 21047.5], [2317.0, 21038.0], [2461.0, 21042.0], [2525.0, 21037.333333333332], [2477.0, 21057.0], [2685.0, 21050.0], [2669.0, 21051.0], [2653.0, 20592.0], [2637.0, 21040.0], [2589.0, 21022.0], [2781.0, 21038.25], [2765.0, 21031.0], [2733.0, 21052.333333333332], [2941.0, 21034.0], [2893.0, 21042.0], [2861.0, 21043.666666666668], [2845.0, 21050.5], [3021.0, 21030.0], [2957.0, 21035.0], [2989.0, 21048.0], [3037.0, 21026.0], [3149.0, 21030.0], [3165.0, 21051.0], [3085.0, 21028.0], [3117.0, 21024.0], [3325.0, 21038.0], [3213.0, 21038.0], [3293.0, 21034.333333333332], [3277.0, 21029.0], [3245.0, 21034.0], [3341.0, 21032.0], [3357.0, 16085.5], [3453.0, 21030.0], [3389.0, 21035.0], [3373.0, 21025.0], [3581.0, 21030.0], [3533.0, 21031.0], [3565.0, 21027.0], [3469.0, 21028.333333333332], [3485.0, 21023.0], [3501.0, 21025.0], [3549.0, 21034.5], [3661.0, 21035.0], [3645.0, 21032.0], [3597.0, 21029.0], [3629.0, 21201.0], [3613.0, 21022.0], [3965.0, 19236.0], [3917.0, 21030.5], [3949.0, 20182.0], [3933.0, 20848.0], [4093.0, 17800.0], [4045.0, 18232.0], [3997.0, 18828.0], [3981.0, 19634.0], [4029.0, 18372.0], [4013.0, 18523.0], [4061.0, 17774.0], [4218.0, 16088.0], [4186.0, 16167.0], [4122.0, 17006.0], [4154.0, 16634.0], [4314.0, 13622.0], [4250.0, 14207.0], [4282.0, 14484.0], [4570.0, 9162.0], [4602.0, 8738.0], [4506.0, 10833.0], [4538.0, 10591.0], [4378.0, 13838.0], [4410.0, 12228.0], [4474.0, 11438.0], [4442.0, 12439.0], [4826.0, 5176.0], [4858.0, 4665.0], [4762.0, 6034.0], [4794.0, 5727.0], [4634.0, 8931.0], [4666.0, 7989.0], [4730.0, 6911.0], [4698.0, 7624.0], [4890.0, 3849.0], [4922.0, 3367.0], [4954.0, 2571.0], [4251.0, 14196.0], [4315.0, 13644.0], [4283.0, 14468.0], [4155.0, 16904.0], [4123.0, 17449.0], [4219.0, 14565.0], [4187.0, 16144.0], [4379.0, 13840.0], [4411.0, 12151.0], [4475.0, 11424.0], [4443.0, 12420.0], [4571.0, 10292.0], [4507.0, 10815.0], [4539.0, 9616.0], [4603.0, 8711.0], [4827.0, 4993.0], [4859.0, 4641.0], [4763.0, 6257.0], [4795.0, 5550.0], [4635.0, 9266.0], [4667.0, 7970.0], [4731.0, 6823.0], [4699.0, 7611.0], [4891.0, 3965.0], [4923.0, 3345.0], [4955.0, 2538.0], [1087.0, 30799.0], [1079.0, 30027.0], [1071.0, 31027.0], [1063.0, 31126.0], [1055.0, 30323.0], [1031.0, 31649.0], [1039.0, 31693.0], [1047.0, 31414.0], [1151.0, 28359.0], [1143.0, 28990.0], [1135.0, 29157.0], [1127.0, 29248.0], [1119.0, 29880.0], [1095.0, 29686.0], [1103.0, 29371.0], [1111.0, 29463.0], [1215.0, 28085.0], [1207.0, 28242.0], [1199.0, 27684.0], [1191.0, 28389.0], [1183.0, 28547.0], [1167.0, 29015.0], [1159.0, 28806.0], [1175.0, 28715.0], [1271.0, 27277.0], [1279.0, 27165.0], [1231.0, 26679.0], [1223.0, 27967.0], [1263.0, 27223.0], [1255.0, 26315.0], [1247.0, 26421.0], [1239.0, 26536.0], [1343.0, 25617.0], [1335.0, 25320.0], [1327.0, 25090.0], [1319.0, 25182.0], [1311.0, 25320.0], [1287.0, 25829.0], [1303.0, 25462.0], [1407.0, 24365.0], [1399.0, 24431.0], [1391.0, 25377.0], [1383.0, 25331.0], [1375.0, 25389.0], [1351.0, 25616.0], [1359.0, 25649.0], [1367.0, 25514.0], [1463.0, 24094.0], [1471.0, 23991.0], [1423.0, 24811.0], [1415.0, 24150.0], [1455.0, 23992.0], [1447.0, 24383.0], [1439.0, 24501.0], [1431.0, 24710.0], [1535.0, 21345.0], [1527.0, 22903.0], [1519.0, 22263.0], [1511.0, 22578.0], [1503.0, 22631.0], [1479.0, 23883.0], [1487.0, 23702.0], [1495.0, 22158.0], [1567.0, 21514.666666666668], [1559.0, 21090.0], [1663.0, 21072.0], [1647.0, 21082.0], [1631.0, 21073.0], [1615.0, 21078.0], [1703.0, 21074.0], [1679.0, 21070.0], [1671.0, 21072.0], [1783.0, 21057.0], [1791.0, 21059.666666666668], [1743.0, 21076.0], [1735.0, 21069.5], [1775.0, 21059.333333333332], [1759.0, 21058.0], [1751.0, 21057.5], [1807.0, 21042.0], [1799.0, 21056.0], [1855.0, 21031.0], [1847.0, 21042.666666666668], [1839.0, 21040.75], [1831.0, 21033.0], [1919.0, 21041.0], [1911.0, 21044.0], [1871.0, 21033.0], [1903.0, 21046.0], [1887.0, 21047.0], [1983.0, 21035.0], [1951.0, 21032.8], [1943.0, 21054.0], [1927.0, 21070.0], [2047.0, 21032.0], [2039.0, 21033.0], [2031.0, 21032.0], [2023.0, 21034.0], [2007.0, 21036.0], [1991.0, 21043.0], [1999.0, 21036.0], [2158.0, 21045.5], [2174.0, 21050.666666666668], [2142.0, 21033.0], [2126.0, 21049.75], [2094.0, 21028.333333333332], [2062.0, 21035.0], [2302.0, 21039.8], [2286.0, 21053.5], [2254.0, 21031.0], [2238.0, 21029.75], [2222.0, 21030.5], [2206.0, 21018.666666666668], [2430.0, 21047.0], [2414.0, 21031.0], [2366.0, 21053.0], [2542.0, 21062.0], [2558.0, 21055.0], [2526.0, 22074.0], [2494.0, 21046.5], [2478.0, 21057.0], [2686.0, 21049.0], [2638.0, 21049.0], [2574.0, 21048.666666666668], [2718.0, 21048.5], [2814.0, 21029.0], [2734.0, 20453.0], [2702.0, 21056.0], [2926.0, 21037.333333333332], [2942.0, 21044.0], [2862.0, 21049.0], [2958.0, 21036.0], [2990.0, 21033.0], [3070.0, 21034.5], [3022.0, 21040.0], [3054.0, 21039.0], [3182.0, 21034.0], [3102.0, 21033.333333333332], [3166.0, 21033.5], [3118.0, 21027.0], [3230.0, 21026.0], [3326.0, 21039.0], [3246.0, 21030.0], [3294.0, 21030.4], [3278.0, 21032.5], [3454.0, 21026.0], [3438.0, 21030.666666666668], [3390.0, 21035.0], [3342.0, 21034.0], [3374.0, 21030.5], [3566.0, 21027.333333333332], [3582.0, 21024.5], [3470.0, 21030.0], [3502.0, 21028.333333333332], [3550.0, 21035.0], [3646.0, 21033.0], [3598.0, 21027.0], [3790.0, 21137.0], [3966.0, 19818.0], [3918.0, 21032.8], [3950.0, 20279.0], [3902.0, 21045.0], [3886.0, 21098.0], [3934.0, 20823.0], [4094.0, 17465.0], [4046.0, 18497.0], [4078.0, 17541.5], [4030.0, 18678.0], [3982.0, 19455.0], [3998.0, 19993.0], [4014.0, 18516.0], [4062.0, 17755.0], [4252.0, 14180.0], [4316.0, 13587.0], [4284.0, 15131.0], [4156.0, 16890.0], [4124.0, 16990.0], [4220.0, 14548.0], [4188.0, 16128.0], [4380.0, 13810.0], [4476.0, 11408.0], [4412.0, 12137.0], [4444.0, 11869.0], [4572.0, 10229.0], [4604.0, 8700.0], [4508.0, 10799.0], [4540.0, 9579.0], [4828.0, 4974.0], [4860.0, 4440.0], [4764.0, 6047.0], [4796.0, 5737.0], [4636.0, 9071.0], [4668.0, 7949.0], [4732.0, 6817.0], [4700.0, 7590.0], [4892.0, 3829.0], [4924.0, 3293.0], [4956.0, 2501.0], [4317.0, 13570.0], [4349.0, 13200.25], [4253.0, 14153.0], [4285.0, 14454.0], [4221.0, 14530.0], [4125.0, 17407.0], [4157.0, 15554.0], [4189.0, 15292.0], [4381.0, 12014.0], [4413.0, 12123.0], [4477.0, 11391.0], [4445.0, 11853.0], [4573.0, 10213.0], [4605.0, 8686.0], [4509.0, 10785.0], [4541.0, 9550.0], [4829.0, 4961.0], [4765.0, 6040.0], [4797.0, 5512.0], [4861.0, 4423.0], [4637.0, 9046.0], [4669.0, 7935.0], [4733.0, 6793.0], [4701.0, 7571.0], [4893.0, 3952.0], [4925.0, 3271.0], [4957.0, 2172.0], [2175.0, 21093.0], [2143.0, 21038.0], [2111.0, 21023.0], [2095.0, 21041.0], [2287.0, 21036.0], [2255.0, 21035.0], [2415.0, 21039.0], [2335.0, 21041.5], [2431.0, 21045.666666666668], [2399.0, 21032.0], [2383.0, 21051.0], [2351.0, 21055.0], [2319.0, 21031.0], [2463.0, 21278.2], [2543.0, 21049.0], [2527.0, 22070.0], [2479.0, 21061.333333333332], [2447.0, 21040.0], [2671.0, 21058.0], [2623.0, 21050.5], [2575.0, 21870.0], [2815.0, 21037.0], [2783.0, 21034.75], [2767.0, 21041.5], [2735.0, 20439.0], [2943.0, 21043.0], [2927.0, 21031.0], [2847.0, 21045.0], [2863.0, 21045.0], [2895.0, 21034.0], [3055.0, 21035.0], [3039.0, 21029.5], [3007.0, 21033.0], [2991.0, 21033.0], [3183.0, 21032.0], [3119.0, 21030.0], [3199.0, 21036.42857142857], [3167.0, 21028.0], [3151.0, 21030.625], [3231.0, 21027.5], [3215.0, 21031.0], [3327.0, 21036.0], [3295.0, 20238.0], [3279.0, 21038.0], [3247.0, 21034.0], [3359.0, 21039.0], [3439.0, 21025.5], [3455.0, 21030.0], [3343.0, 21034.0], [3391.0, 21029.0], [3375.0, 21027.0], [3567.0, 21026.0], [3471.0, 21028.333333333332], [3487.0, 21024.75], [3503.0, 21030.0], [3583.0, 21030.5], [3551.0, 21037.0], [3663.0, 21077.6], [3647.0, 21031.0], [3631.0, 21030.0], [3967.0, 19222.0], [3919.0, 20601.0], [3951.0, 20168.0], [3935.0, 20840.0], [4079.0, 17023.0], [4047.0, 18192.0], [4031.0, 18353.0], [3983.0, 19814.0], [3999.0, 18821.0], [4015.0, 18491.0], [4063.0, 17738.0], [4158.0, 15847.0], [4222.0, 14521.0], [4190.0, 8306.5], [4126.0, 17410.0], [4350.0, 13737.0], [4254.0, 14134.0], [4286.0, 14430.0], [4318.0, 13595.0], [4574.0, 10196.0], [4606.0, 8661.0], [4510.0, 10762.0], [4542.0, 9544.0], [4478.0, 12076.0], [4382.0, 11970.0], [4414.0, 12107.0], [4446.0, 11829.0], [4830.0, 4957.0], [4862.0, 4406.0], [4766.0, 6030.0], [4798.0, 5495.0], [4734.0, 6763.0], [4638.0, 8531.0], [4670.0, 7917.0], [4702.0, 7547.0], [4894.0, 3792.0], [4926.0, 3248.0], [4958.0, 2155.0], [4255.0, 14118.0], [4319.0, 13580.0], [4287.0, 14416.0], [4159.0, 17072.0], [4127.0, 17390.0], [4223.0, 16030.0], [4191.0, 15196.0], [4383.0, 13488.0], [4415.0, 12088.0], [4479.0, 12075.0], [4447.0, 11810.0], [4575.0, 9333.0], [4607.0, 9412.0], [4511.0, 10746.0], [4543.0, 9528.0], [4831.0, 4938.0], [4863.0, 4548.0], [4767.0, 6010.0], [4799.0, 5477.0], [4735.0, 6825.0], [4639.0, 8973.0], [4671.0, 7897.0], [4703.0, 7943.0], [4895.0, 3912.0], [4927.0, 3258.0], [4959.0, 2155.0], [1.0, 49743.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[2499.214600000012, 23539.35240000006]], "isOverall": false, "label": "Home-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4967.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1927.3333333333333, "minX": 1.60772358E12, "maxY": 474736.5, "series": [{"data": [[1.60772364E12, 217396.66666666666], [1.60772358E12, 474736.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60772364E12, 1927.3333333333333], [1.60772358E12, 3264.6666666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60772364E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 19261.4629353234, "minX": 1.60772358E12, "maxY": 41087.42959183677, "series": [{"data": [[1.60772364E12, 41087.42959183677], [1.60772358E12, 19261.4629353234]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60772364E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7025.63930348259, "minX": 1.60772358E12, "maxY": 41087.40510204082, "series": [{"data": [[1.60772364E12, 41087.40510204082], [1.60772358E12, 7025.63930348259]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60772364E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 10212.095918367348, "minX": 1.60772358E12, "maxY": 12811.447761194058, "series": [{"data": [[1.60772364E12, 10212.095918367348], [1.60772358E12, 12811.447761194058]], "isOverall": false, "label": "Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60772364E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 561.0, "minX": 1.60772358E12, "maxY": 49957.0, "series": [{"data": [[1.60772364E12, 49957.0], [1.60772358E12, 32966.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60772364E12, 33333.69899274945], [1.60772358E12, 1145.214986139536]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60772364E12, 33348.25470121622], [1.60772358E12, 1181.648705227375]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60772364E12, 33343.153498479725], [1.60772358E12, 1162.5899960398674]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.60772364E12, 32969.0], [1.60772358E12, 561.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60772364E12, 40786.0], [1.60772358E12, 17452.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60772364E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 864.0, "minX": 12.0, "maxY": 49513.0, "series": [{"data": [[37.0, 10772.0], [40.0, 32011.0], [43.0, 33543.0], [45.0, 6560.0], [46.0, 46321.5], [49.0, 35143.0], [48.0, 45504.5], [51.0, 3552.0], [50.0, 49513.0], [52.0, 17323.5], [55.0, 39887.0], [56.0, 25691.0], [57.0, 36452.0], [59.0, 33956.0], [58.0, 38560.0], [60.0, 18620.0], [61.0, 26671.5], [62.0, 12906.0], [64.0, 8987.0], [65.0, 9528.0], [70.0, 12315.0], [69.0, 14542.0], [1203.0, 20509.0], [1205.0, 21713.5], [12.0, 864.0], [26.0, 1465.0], [27.0, 2757.0], [29.0, 7571.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[64.0, 9557.0], [65.0, 10407.0], [70.0, 13780.0], [69.0, 14320.0], [37.0, 11462.5], [1203.0, 21034.0], [1205.0, 21045.0], [40.0, 32437.0], [52.0, 17287.0], [60.0, 14835.0], [62.0, 12276.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1205.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 12.0, "maxY": 49513.0, "series": [{"data": [[37.0, 10772.0], [40.0, 32011.0], [43.0, 33543.0], [45.0, 6560.0], [46.0, 46321.5], [49.0, 35143.0], [48.0, 45504.5], [51.0, 3552.0], [50.0, 49513.0], [52.0, 17323.5], [55.0, 39887.0], [56.0, 25691.0], [57.0, 36452.0], [59.0, 33956.0], [58.0, 38560.0], [60.0, 18620.0], [61.0, 26671.5], [62.0, 12906.0], [64.0, 8987.0], [65.0, 9528.0], [70.0, 12314.5], [69.0, 14542.0], [1203.0, 20509.0], [1205.0, 21713.5], [12.0, 864.0], [26.0, 1465.0], [27.0, 2757.0], [29.0, 7571.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[64.0, 0.0], [65.0, 0.0], [70.0, 0.0], [69.0, 0.0], [37.0, 0.0], [1203.0, 0.0], [1205.0, 0.0], [40.0, 0.0], [52.0, 0.0], [60.0, 0.0], [62.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1205.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.60772358E12, "maxY": 83.33333333333333, "series": [{"data": [[1.60772358E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60772358E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0833333333333333, "minX": 1.60772358E12, "maxY": 38.25, "series": [{"data": [[1.60772364E12, 16.333333333333332], [1.60772358E12, 27.666666666666668]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.60772358E12, 38.25]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.60772358E12, 1.0833333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60772364E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.333333333333332, "minX": 1.60772358E12, "maxY": 39.333333333333336, "series": [{"data": [[1.60772364E12, 16.333333333333332], [1.60772358E12, 27.666666666666668]], "isOverall": false, "label": "Home-success", "isController": false}, {"data": [[1.60772358E12, 39.333333333333336]], "isOverall": false, "label": "Home-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60772364E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16.333333333333332, "minX": 1.60772358E12, "maxY": 39.333333333333336, "series": [{"data": [[1.60772364E12, 16.333333333333332], [1.60772358E12, 27.666666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.60772358E12, 39.333333333333336]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60772364E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

