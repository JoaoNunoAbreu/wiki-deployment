/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 439.0, "minX": 0.0, "maxY": 31955.0, "series": [{"data": [[0.0, 647.0], [0.1, 647.0], [0.2, 7608.0], [0.3, 11897.0], [0.4, 11897.0], [0.5, 11897.0], [0.6, 11988.0], [0.7, 11993.0], [0.8, 11993.0], [0.9, 11994.0], [1.0, 11994.0], [1.1, 11995.0], [1.2, 11995.0], [1.3, 12002.0], [1.4, 12011.0], [1.5, 12011.0], [1.6, 12012.0], [1.7, 12587.0], [1.8, 12588.0], [1.9, 12588.0], [2.0, 12589.0], [2.1, 12592.0], [2.2, 12592.0], [2.3, 12592.0], [2.4, 12595.0], [2.5, 12595.0], [2.6, 12597.0], [2.7, 12597.0], [2.8, 12602.0], [2.9, 12603.0], [3.0, 12603.0], [3.1, 12603.0], [3.2, 12605.0], [3.3, 12606.0], [3.4, 12606.0], [3.5, 12606.0], [3.6, 12607.0], [3.7, 12608.0], [3.8, 12608.0], [3.9, 12609.0], [4.0, 12610.0], [4.1, 12611.0], [4.2, 12611.0], [4.3, 12611.0], [4.4, 12613.0], [4.5, 12613.0], [4.6, 12613.0], [4.7, 12613.0], [4.8, 12614.0], [4.9, 12614.0], [5.0, 12615.0], [5.1, 12616.0], [5.2, 12617.0], [5.3, 12617.0], [5.4, 12617.0], [5.5, 12619.0], [5.6, 12619.0], [5.7, 12620.0], [5.8, 12620.0], [5.9, 12621.0], [6.0, 12621.0], [6.1, 12621.0], [6.2, 12621.0], [6.3, 12625.0], [6.4, 12625.0], [6.5, 12626.0], [6.6, 12628.0], [6.7, 12628.0], [6.8, 12628.0], [6.9, 12631.0], [7.0, 12632.0], [7.1, 12632.0], [7.2, 12632.0], [7.3, 12633.0], [7.4, 12633.0], [7.5, 12633.0], [7.6, 12634.0], [7.7, 12636.0], [7.8, 13192.0], [7.9, 13192.0], [8.0, 13206.0], [8.1, 13209.0], [8.2, 13210.0], [8.3, 13210.0], [8.4, 13211.0], [8.5, 13211.0], [8.6, 13211.0], [8.7, 13212.0], [8.8, 13213.0], [8.9, 13214.0], [9.0, 13214.0], [9.1, 13214.0], [9.2, 13215.0], [9.3, 13215.0], [9.4, 13215.0], [9.5, 13216.0], [9.6, 13217.0], [9.7, 13218.0], [9.8, 13218.0], [9.9, 13219.0], [10.0, 13219.0], [10.1, 13219.0], [10.2, 13220.0], [10.3, 13220.0], [10.4, 13221.0], [10.5, 13221.0], [10.6, 13222.0], [10.7, 13223.0], [10.8, 13224.0], [10.9, 13224.0], [11.0, 13226.0], [11.1, 13226.0], [11.2, 13226.0], [11.3, 13226.0], [11.4, 13227.0], [11.5, 13227.0], [11.6, 13227.0], [11.7, 13228.0], [11.8, 13228.0], [11.9, 13231.0], [12.0, 13231.0], [12.1, 13231.0], [12.2, 13231.0], [12.3, 13232.0], [12.4, 13232.0], [12.5, 13232.0], [12.6, 13233.0], [12.7, 13233.0], [12.8, 13234.0], [12.9, 13235.0], [13.0, 13237.0], [13.1, 13237.0], [13.2, 13238.0], [13.3, 13243.0], [13.4, 13244.0], [13.5, 13244.0], [13.6, 13244.0], [13.7, 13245.0], [13.8, 13246.0], [13.9, 13246.0], [14.0, 13246.0], [14.1, 13248.0], [14.2, 13248.0], [14.3, 13249.0], [14.4, 13249.0], [14.5, 13251.0], [14.6, 13251.0], [14.7, 13253.0], [14.8, 13254.0], [14.9, 13255.0], [15.0, 13255.0], [15.1, 13255.0], [15.2, 13258.0], [15.3, 13258.0], [15.4, 13259.0], [15.5, 13260.0], [15.6, 13260.0], [15.7, 13260.0], [15.8, 13261.0], [15.9, 13262.0], [16.0, 13263.0], [16.1, 13263.0], [16.2, 13264.0], [16.3, 13266.0], [16.4, 13267.0], [16.5, 13267.0], [16.6, 13267.0], [16.7, 13270.0], [16.8, 13270.0], [16.9, 13271.0], [17.0, 13272.0], [17.1, 13273.0], [17.2, 13273.0], [17.3, 13274.0], [17.4, 13277.0], [17.5, 13277.0], [17.6, 13277.0], [17.7, 13278.0], [17.8, 13279.0], [17.9, 13280.0], [18.0, 13280.0], [18.1, 13281.0], [18.2, 13282.0], [18.3, 13282.0], [18.4, 13284.0], [18.5, 13285.0], [18.6, 13285.0], [18.7, 13285.0], [18.8, 13287.0], [18.9, 13288.0], [19.0, 13292.0], [19.1, 13292.0], [19.2, 13293.0], [19.3, 13295.0], [19.4, 13296.0], [19.5, 13296.0], [19.6, 13297.0], [19.7, 13298.0], [19.8, 13298.0], [19.9, 13301.0], [20.0, 13301.0], [20.1, 13304.0], [20.2, 13304.0], [20.3, 13308.0], [20.4, 13319.0], [20.5, 13321.0], [20.6, 13321.0], [20.7, 13322.0], [20.8, 13323.0], [20.9, 13323.0], [21.0, 13327.0], [21.1, 13327.0], [21.2, 13328.0], [21.3, 13328.0], [21.4, 13330.0], [21.5, 13331.0], [21.6, 13333.0], [21.7, 13333.0], [21.8, 13334.0], [21.9, 13338.0], [22.0, 13338.0], [22.1, 13338.0], [22.2, 13340.0], [22.3, 13341.0], [22.4, 13341.0], [22.5, 13342.0], [22.6, 13343.0], [22.7, 13345.0], [22.8, 13345.0], [22.9, 13349.0], [23.0, 13352.0], [23.1, 13353.0], [23.2, 13353.0], [23.3, 13355.0], [23.4, 13355.0], [23.5, 13355.0], [23.6, 13355.0], [23.7, 13356.0], [23.8, 13356.0], [23.9, 13356.0], [24.0, 13357.0], [24.1, 13357.0], [24.2, 13361.0], [24.3, 13361.0], [24.4, 13362.0], [24.5, 13362.0], [24.6, 13363.0], [24.7, 13363.0], [24.8, 13364.0], [24.9, 13364.0], [25.0, 13364.0], [25.1, 13364.0], [25.2, 13366.0], [25.3, 13366.0], [25.4, 13366.0], [25.5, 13368.0], [25.6, 13368.0], [25.7, 13369.0], [25.8, 13369.0], [25.9, 13371.0], [26.0, 13371.0], [26.1, 13371.0], [26.2, 13371.0], [26.3, 13371.0], [26.4, 13372.0], [26.5, 13372.0], [26.6, 13372.0], [26.7, 13373.0], [26.8, 13375.0], [26.9, 13375.0], [27.0, 13375.0], [27.1, 13375.0], [27.2, 13375.0], [27.3, 13375.0], [27.4, 13376.0], [27.5, 13377.0], [27.6, 13378.0], [27.7, 13378.0], [27.8, 13378.0], [27.9, 13379.0], [28.0, 13379.0], [28.1, 13379.0], [28.2, 13380.0], [28.3, 13381.0], [28.4, 13381.0], [28.5, 13382.0], [28.6, 13382.0], [28.7, 13385.0], [28.8, 13385.0], [28.9, 13388.0], [29.0, 13388.0], [29.1, 13388.0], [29.2, 13388.0], [29.3, 13389.0], [29.4, 13390.0], [29.5, 13390.0], [29.6, 13392.0], [29.7, 13392.0], [29.8, 13393.0], [29.9, 13393.0], [30.0, 13394.0], [30.1, 13394.0], [30.2, 13395.0], [30.3, 13395.0], [30.4, 13396.0], [30.5, 13397.0], [30.6, 13397.0], [30.7, 13399.0], [30.8, 13400.0], [30.9, 13401.0], [31.0, 13401.0], [31.1, 13403.0], [31.2, 13405.0], [31.3, 13406.0], [31.4, 13406.0], [31.5, 13407.0], [31.6, 13407.0], [31.7, 13408.0], [31.8, 13408.0], [31.9, 13409.0], [32.0, 13412.0], [32.1, 13412.0], [32.2, 13415.0], [32.3, 13415.0], [32.4, 13419.0], [32.5, 13419.0], [32.6, 13430.0], [32.7, 13432.0], [32.8, 13432.0], [32.9, 13432.0], [33.0, 13435.0], [33.1, 13435.0], [33.2, 13439.0], [33.3, 13439.0], [33.4, 13439.0], [33.5, 13439.0], [33.6, 13439.0], [33.7, 13439.0], [33.8, 13440.0], [33.9, 13442.0], [34.0, 13442.0], [34.1, 13443.0], [34.2, 13443.0], [34.3, 13445.0], [34.4, 13445.0], [34.5, 13445.0], [34.6, 13446.0], [34.7, 13449.0], [34.8, 13449.0], [34.9, 13450.0], [35.0, 13451.0], [35.1, 13451.0], [35.2, 13453.0], [35.3, 13454.0], [35.4, 13456.0], [35.5, 13456.0], [35.6, 13458.0], [35.7, 13459.0], [35.8, 13463.0], [35.9, 13463.0], [36.0, 13463.0], [36.1, 13465.0], [36.2, 13465.0], [36.3, 13467.0], [36.4, 13468.0], [36.5, 13470.0], [36.6, 13470.0], [36.7, 13470.0], [36.8, 13471.0], [36.9, 13473.0], [37.0, 13473.0], [37.1, 13473.0], [37.2, 13475.0], [37.3, 13477.0], [37.4, 13477.0], [37.5, 13477.0], [37.6, 13478.0], [37.7, 13478.0], [37.8, 13480.0], [37.9, 13484.0], [38.0, 13484.0], [38.1, 13484.0], [38.2, 13486.0], [38.3, 13486.0], [38.4, 13487.0], [38.5, 13487.0], [38.6, 13488.0], [38.7, 13489.0], [38.8, 13491.0], [38.9, 13491.0], [39.0, 13492.0], [39.1, 13494.0], [39.2, 13494.0], [39.3, 13496.0], [39.4, 13497.0], [39.5, 13498.0], [39.6, 13498.0], [39.7, 13498.0], [39.8, 13500.0], [39.9, 13502.0], [40.0, 13502.0], [40.1, 13507.0], [40.2, 13507.0], [40.3, 13507.0], [40.4, 13507.0], [40.5, 13509.0], [40.6, 13510.0], [40.7, 13510.0], [40.8, 13511.0], [40.9, 13514.0], [41.0, 13518.0], [41.1, 13518.0], [41.2, 13518.0], [41.3, 13519.0], [41.4, 13522.0], [41.5, 13522.0], [41.6, 13524.0], [41.7, 13525.0], [41.8, 13525.0], [41.9, 13526.0], [42.0, 13527.0], [42.1, 13528.0], [42.2, 13528.0], [42.3, 13530.0], [42.4, 13531.0], [42.5, 13534.0], [42.6, 13534.0], [42.7, 13534.0], [42.8, 13536.0], [42.9, 13537.0], [43.0, 13537.0], [43.1, 13537.0], [43.2, 13540.0], [43.3, 13540.0], [43.4, 13541.0], [43.5, 13542.0], [43.6, 13543.0], [43.7, 13543.0], [43.8, 13544.0], [43.9, 13545.0], [44.0, 13545.0], [44.1, 13545.0], [44.2, 13546.0], [44.3, 13547.0], [44.4, 13547.0], [44.5, 13547.0], [44.6, 13547.0], [44.7, 13547.0], [44.8, 13547.0], [44.9, 13547.0], [45.0, 13557.0], [45.1, 13558.0], [45.2, 13558.0], [45.3, 13564.0], [45.4, 13565.0], [45.5, 13567.0], [45.6, 13567.0], [45.7, 13568.0], [45.8, 13569.0], [45.9, 13569.0], [46.0, 13571.0], [46.1, 13573.0], [46.2, 13574.0], [46.3, 13574.0], [46.4, 13574.0], [46.5, 13575.0], [46.6, 13578.0], [46.7, 13578.0], [46.8, 13579.0], [46.9, 13581.0], [47.0, 13581.0], [47.1, 13581.0], [47.2, 13581.0], [47.3, 13583.0], [47.4, 13583.0], [47.5, 13583.0], [47.6, 13584.0], [47.7, 13586.0], [47.8, 13586.0], [47.9, 13587.0], [48.0, 13588.0], [48.1, 13590.0], [48.2, 13590.0], [48.3, 13594.0], [48.4, 13596.0], [48.5, 13599.0], [48.6, 13599.0], [48.7, 13600.0], [48.8, 13600.0], [48.9, 13600.0], [49.0, 13602.0], [49.1, 13602.0], [49.2, 13603.0], [49.3, 13603.0], [49.4, 13605.0], [49.5, 13605.0], [49.6, 13607.0], [49.7, 13607.0], [49.8, 13608.0], [49.9, 13609.0], [50.0, 13609.0], [50.1, 13609.0], [50.2, 13610.0], [50.3, 13611.0], [50.4, 13611.0], [50.5, 13613.0], [50.6, 13616.0], [50.7, 13616.0], [50.8, 13616.0], [50.9, 13616.0], [51.0, 13616.0], [51.1, 13617.0], [51.2, 13617.0], [51.3, 13618.0], [51.4, 13618.0], [51.5, 13618.0], [51.6, 13619.0], [51.7, 13621.0], [51.8, 13622.0], [51.9, 13622.0], [52.0, 13622.0], [52.1, 13624.0], [52.2, 13625.0], [52.3, 13625.0], [52.4, 13626.0], [52.5, 13626.0], [52.6, 13626.0], [52.7, 13626.0], [52.8, 13627.0], [52.9, 13628.0], [53.0, 13628.0], [53.1, 13629.0], [53.2, 13629.0], [53.3, 13629.0], [53.4, 13629.0], [53.5, 13629.0], [53.6, 13629.0], [53.7, 13629.0], [53.8, 13629.0], [53.9, 13630.0], [54.0, 13630.0], [54.1, 13631.0], [54.2, 13631.0], [54.3, 13631.0], [54.4, 13632.0], [54.5, 13632.0], [54.6, 13636.0], [54.7, 13637.0], [54.8, 13638.0], [54.9, 13638.0], [55.0, 13638.0], [55.1, 13640.0], [55.2, 13640.0], [55.3, 13640.0], [55.4, 13644.0], [55.5, 13645.0], [55.6, 13645.0], [55.7, 13645.0], [55.8, 13646.0], [55.9, 13647.0], [56.0, 13647.0], [56.1, 13648.0], [56.2, 13650.0], [56.3, 13653.0], [56.4, 13653.0], [56.5, 13654.0], [56.6, 13655.0], [56.7, 13658.0], [56.8, 13658.0], [56.9, 13662.0], [57.0, 13662.0], [57.1, 13662.0], [57.2, 13663.0], [57.3, 13666.0], [57.4, 13674.0], [57.5, 13674.0], [57.6, 13674.0], [57.7, 13674.0], [57.8, 13675.0], [57.9, 13675.0], [58.0, 13676.0], [58.1, 13677.0], [58.2, 13677.0], [58.3, 13677.0], [58.4, 13677.0], [58.5, 13679.0], [58.6, 13679.0], [58.7, 13679.0], [58.8, 13682.0], [58.9, 13683.0], [59.0, 13683.0], [59.1, 13684.0], [59.2, 13685.0], [59.3, 13686.0], [59.4, 13686.0], [59.5, 13689.0], [59.6, 13690.0], [59.7, 13697.0], [59.8, 13697.0], [59.9, 13698.0], [60.0, 13699.0], [60.1, 13699.0], [60.2, 13700.0], [60.3, 13702.0], [60.4, 13706.0], [60.5, 13706.0], [60.6, 13706.0], [60.7, 13708.0], [60.8, 13709.0], [60.9, 13709.0], [61.0, 13710.0], [61.1, 13712.0], [61.2, 13712.0], [61.3, 13713.0], [61.4, 13714.0], [61.5, 13714.0], [61.6, 13714.0], [61.7, 13716.0], [61.8, 13716.0], [61.9, 13717.0], [62.0, 13717.0], [62.1, 13719.0], [62.2, 13720.0], [62.3, 13720.0], [62.4, 13720.0], [62.5, 13725.0], [62.6, 13727.0], [62.7, 13727.0], [62.8, 13728.0], [62.9, 13730.0], [63.0, 13731.0], [63.1, 13731.0], [63.2, 13731.0], [63.3, 13731.0], [63.4, 13732.0], [63.5, 13732.0], [63.6, 13735.0], [63.7, 13735.0], [63.8, 13735.0], [63.9, 13735.0], [64.0, 13737.0], [64.1, 13737.0], [64.2, 13737.0], [64.3, 13737.0], [64.4, 13737.0], [64.5, 13738.0], [64.6, 13738.0], [64.7, 13738.0], [64.8, 13739.0], [64.9, 13739.0], [65.0, 13739.0], [65.1, 13740.0], [65.2, 13743.0], [65.3, 13743.0], [65.4, 13743.0], [65.5, 13744.0], [65.6, 13744.0], [65.7, 13744.0], [65.8, 13745.0], [65.9, 13745.0], [66.0, 13746.0], [66.1, 13746.0], [66.2, 13746.0], [66.3, 13747.0], [66.4, 13748.0], [66.5, 13748.0], [66.6, 13749.0], [66.7, 13780.0], [66.8, 13780.0], [66.9, 13905.0], [67.0, 13908.0], [67.1, 13910.0], [67.2, 13910.0], [67.3, 13911.0], [67.4, 13912.0], [67.5, 13913.0], [67.6, 13913.0], [67.7, 13914.0], [67.8, 13914.0], [67.9, 13915.0], [68.0, 13915.0], [68.1, 13915.0], [68.2, 13917.0], [68.3, 13917.0], [68.4, 13917.0], [68.5, 13920.0], [68.6, 13922.0], [68.7, 13922.0], [68.8, 13923.0], [68.9, 13924.0], [69.0, 13924.0], [69.1, 13924.0], [69.2, 13925.0], [69.3, 13926.0], [69.4, 13929.0], [69.5, 13929.0], [69.6, 13929.0], [69.7, 13932.0], [69.8, 13932.0], [69.9, 13932.0], [70.0, 13934.0], [70.1, 13937.0], [70.2, 13937.0], [70.3, 13942.0], [70.4, 13943.0], [70.5, 13945.0], [70.6, 13945.0], [70.7, 13947.0], [70.8, 13948.0], [70.9, 13948.0], [71.0, 13949.0], [71.1, 13949.0], [71.2, 13952.0], [71.3, 13952.0], [71.4, 13953.0], [71.5, 13954.0], [71.6, 13954.0], [71.7, 13954.0], [71.8, 13957.0], [71.9, 13959.0], [72.0, 13959.0], [72.1, 13959.0], [72.2, 13959.0], [72.3, 13964.0], [72.4, 13964.0], [72.5, 13965.0], [72.6, 13965.0], [72.7, 13966.0], [72.8, 13966.0], [72.9, 13966.0], [73.0, 13967.0], [73.1, 13969.0], [73.2, 13969.0], [73.3, 13969.0], [73.4, 13971.0], [73.5, 13971.0], [73.6, 13971.0], [73.7, 13973.0], [73.8, 13973.0], [73.9, 13973.0], [74.0, 13974.0], [74.1, 13975.0], [74.2, 13975.0], [74.3, 13975.0], [74.4, 13976.0], [74.5, 13977.0], [74.6, 13977.0], [74.7, 13977.0], [74.8, 13977.0], [74.9, 13978.0], [75.0, 13978.0], [75.1, 13978.0], [75.2, 13981.0], [75.3, 13981.0], [75.4, 13981.0], [75.5, 13983.0], [75.6, 13984.0], [75.7, 13985.0], [75.8, 13985.0], [75.9, 13986.0], [76.0, 13988.0], [76.1, 13989.0], [76.2, 13989.0], [76.3, 13989.0], [76.4, 13993.0], [76.5, 13993.0], [76.6, 13993.0], [76.7, 13994.0], [76.8, 13995.0], [76.9, 13995.0], [77.0, 13998.0], [77.1, 14000.0], [77.2, 14002.0], [77.3, 14002.0], [77.4, 14005.0], [77.5, 14008.0], [77.6, 14014.0], [77.7, 14014.0], [77.8, 14015.0], [77.9, 14025.0], [78.0, 14025.0], [78.1, 14026.0], [78.2, 14026.0], [78.3, 14027.0], [78.4, 14027.0], [78.5, 14030.0], [78.6, 14032.0], [78.7, 14034.0], [78.8, 14034.0], [78.9, 14036.0], [79.0, 14037.0], [79.1, 14040.0], [79.2, 14040.0], [79.3, 14042.0], [79.4, 14045.0], [79.5, 14045.0], [79.6, 14047.0], [79.7, 14048.0], [79.8, 14051.0], [79.9, 14051.0], [80.0, 14053.0], [80.1, 14054.0], [80.2, 14055.0], [80.3, 14055.0], [80.4, 14056.0], [80.5, 14060.0], [80.6, 14060.0], [80.7, 14060.0], [80.8, 14060.0], [80.9, 14060.0], [81.0, 14060.0], [81.1, 14060.0], [81.2, 14060.0], [81.3, 14061.0], [81.4, 14061.0], [81.5, 14061.0], [81.6, 14061.0], [81.7, 14062.0], [81.8, 14062.0], [81.9, 14062.0], [82.0, 14062.0], [82.1, 14062.0], [82.2, 14062.0], [82.3, 14062.0], [82.4, 14063.0], [82.5, 14063.0], [82.6, 14064.0], [82.7, 14064.0], [82.8, 14064.0], [82.9, 14064.0], [83.0, 14065.0], [83.1, 14065.0], [83.2, 14068.0], [83.3, 14068.0], [83.4, 14068.0], [83.5, 14069.0], [83.6, 14069.0], [83.7, 14069.0], [83.8, 14071.0], [83.9, 14082.0], [84.0, 14082.0], [84.1, 14083.0], [84.2, 14085.0], [84.3, 14092.0], [84.4, 14092.0], [84.5, 14094.0], [84.6, 14095.0], [84.7, 14096.0], [84.8, 14096.0], [84.9, 14096.0], [85.0, 14098.0], [85.1, 14098.0], [85.2, 14099.0], [85.3, 14102.0], [85.4, 14103.0], [85.5, 14103.0], [85.6, 14105.0], [85.7, 14106.0], [85.8, 14108.0], [85.9, 14108.0], [86.0, 14108.0], [86.1, 14109.0], [86.2, 14109.0], [86.3, 14110.0], [86.4, 14110.0], [86.5, 14112.0], [86.6, 14112.0], [86.7, 14113.0], [86.8, 14115.0], [86.9, 14116.0], [87.0, 14116.0], [87.1, 14116.0], [87.2, 14117.0], [87.3, 14118.0], [87.4, 14118.0], [87.5, 14119.0], [87.6, 14123.0], [87.7, 14123.0], [87.8, 14125.0], [87.9, 14128.0], [88.0, 14129.0], [88.1, 14129.0], [88.2, 14132.0], [88.3, 14132.0], [88.4, 14132.0], [88.5, 14132.0], [88.6, 14135.0], [88.7, 14140.0], [88.8, 14141.0], [88.9, 14141.0], [89.0, 14149.0], [89.1, 14149.0], [89.2, 14149.0], [89.3, 14149.0], [89.4, 14149.0], [89.5, 14149.0], [89.6, 14149.0], [89.7, 14149.0], [89.8, 14149.0], [89.9, 14149.0], [90.0, 14149.0], [90.1, 14150.0], [90.2, 14150.0], [90.3, 14150.0], [90.4, 14150.0], [90.5, 14150.0], [90.6, 14150.0], [90.7, 14150.0], [90.8, 14150.0], [90.9, 14150.0], [91.0, 14150.0], [91.1, 14150.0], [91.2, 14150.0], [91.3, 14150.0], [91.4, 14150.0], [91.5, 14150.0], [91.6, 14150.0], [91.7, 14150.0], [91.8, 14150.0], [91.9, 14151.0], [92.0, 14151.0], [92.1, 14151.0], [92.2, 14151.0], [92.3, 14152.0], [92.4, 14154.0], [92.5, 14154.0], [92.6, 14154.0], [92.7, 14154.0], [92.8, 14154.0], [92.9, 14155.0], [93.0, 14155.0], [93.1, 14155.0], [93.2, 14155.0], [93.3, 14155.0], [93.4, 14156.0], [93.5, 14157.0], [93.6, 14158.0], [93.7, 14158.0], [93.8, 14159.0], [93.9, 14159.0], [94.0, 14162.0], [94.1, 14162.0], [94.2, 14393.0], [94.3, 14393.0], [94.4, 14396.0], [94.5, 14396.0], [94.6, 14399.0], [94.7, 14400.0], [94.8, 14400.0], [94.9, 14401.0], [95.0, 14412.0], [95.1, 14416.0], [95.2, 14416.0], [95.3, 14417.0], [95.4, 14417.0], [95.5, 14418.0], [95.6, 14418.0], [95.7, 14419.0], [95.8, 14420.0], [95.9, 14420.0], [96.0, 14421.0], [96.1, 14422.0], [96.2, 14424.0], [96.3, 14424.0], [96.4, 14424.0], [96.5, 14425.0], [96.6, 14426.0], [96.7, 14426.0], [96.8, 14430.0], [96.9, 15230.0], [97.0, 15231.0], [97.1, 15231.0], [97.2, 15231.0], [97.3, 15231.0], [97.4, 15231.0], [97.5, 15232.0], [97.6, 15267.0], [97.7, 15270.0], [97.8, 15270.0], [97.9, 16600.0], [98.0, 16601.0], [98.1, 16604.0], [98.2, 16604.0], [98.3, 16606.0], [98.4, 16607.0], [98.5, 16608.0], [98.6, 16608.0], [98.7, 16609.0], [98.8, 16610.0], [98.9, 16610.0], [99.0, 16611.0], [99.1, 16612.0], [99.2, 16613.0], [99.3, 16613.0], [99.4, 16614.0], [99.5, 16617.0], [99.6, 16618.0], [99.7, 16618.0], [99.8, 16619.0], [99.9, 16621.0], [100.0, 16621.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[0.0, 439.0], [0.1, 439.0], [0.2, 441.0], [0.3, 442.0], [0.4, 442.0], [0.5, 464.0], [0.6, 466.0], [0.7, 468.0], [0.8, 468.0], [0.9, 470.0], [1.0, 488.0], [1.1, 488.0], [1.2, 488.0], [1.3, 490.0], [1.4, 490.0], [1.5, 490.0], [1.6, 490.0], [1.7, 508.0], [1.8, 509.0], [1.9, 509.0], [2.0, 515.0], [2.1, 515.0], [2.2, 641.0], [2.3, 641.0], [2.4, 641.0], [2.5, 641.0], [2.6, 641.0], [2.7, 641.0], [2.8, 642.0], [2.9, 644.0], [3.0, 645.0], [3.1, 645.0], [3.2, 645.0], [3.3, 645.0], [3.4, 645.0], [3.5, 645.0], [3.6, 645.0], [3.7, 645.0], [3.8, 645.0], [3.9, 645.0], [4.0, 645.0], [4.1, 646.0], [4.2, 646.0], [4.3, 646.0], [4.4, 646.0], [4.5, 646.0], [4.6, 646.0], [4.7, 646.0], [4.8, 647.0], [4.9, 648.0], [5.0, 648.0], [5.1, 648.0], [5.2, 649.0], [5.3, 649.0], [5.4, 649.0], [5.5, 650.0], [5.6, 650.0], [5.7, 650.0], [5.8, 650.0], [5.9, 650.0], [6.0, 650.0], [6.1, 650.0], [6.2, 650.0], [6.3, 651.0], [6.4, 651.0], [6.5, 651.0], [6.6, 651.0], [6.7, 651.0], [6.8, 651.0], [6.9, 651.0], [7.0, 651.0], [7.1, 652.0], [7.2, 652.0], [7.3, 660.0], [7.4, 661.0], [7.5, 667.0], [7.6, 667.0], [7.7, 668.0], [7.8, 669.0], [7.9, 670.0], [8.0, 670.0], [8.1, 671.0], [8.2, 672.0], [8.3, 673.0], [8.4, 673.0], [8.5, 674.0], [8.6, 676.0], [8.7, 677.0], [8.8, 677.0], [8.9, 678.0], [9.0, 678.0], [9.1, 678.0], [9.2, 679.0], [9.3, 680.0], [9.4, 681.0], [9.5, 681.0], [9.6, 682.0], [9.7, 684.0], [9.8, 685.0], [9.9, 685.0], [10.0, 686.0], [10.1, 687.0], [10.2, 689.0], [10.3, 689.0], [10.4, 691.0], [10.5, 691.0], [10.6, 694.0], [10.7, 694.0], [10.8, 695.0], [10.9, 697.0], [11.0, 697.0], [11.1, 697.0], [11.2, 699.0], [11.3, 701.0], [11.4, 701.0], [11.5, 701.0], [11.6, 702.0], [11.7, 703.0], [11.8, 703.0], [11.9, 705.0], [12.0, 716.0], [12.1, 717.0], [12.2, 717.0], [12.3, 726.0], [12.4, 730.0], [12.5, 731.0], [12.6, 731.0], [12.7, 731.0], [12.8, 731.0], [12.9, 731.0], [13.0, 732.0], [13.1, 732.0], [13.2, 733.0], [13.3, 733.0], [13.4, 733.0], [13.5, 733.0], [13.6, 734.0], [13.7, 734.0], [13.8, 734.0], [13.9, 734.0], [14.0, 734.0], [14.1, 734.0], [14.2, 734.0], [14.3, 734.0], [14.4, 734.0], [14.5, 735.0], [14.6, 735.0], [14.7, 736.0], [14.8, 736.0], [14.9, 738.0], [15.0, 741.0], [15.1, 741.0], [15.2, 741.0], [15.3, 742.0], [15.4, 742.0], [15.5, 742.0], [15.6, 742.0], [15.7, 742.0], [15.8, 742.0], [15.9, 743.0], [16.0, 743.0], [16.1, 745.0], [16.2, 747.0], [16.3, 747.0], [16.4, 748.0], [16.5, 748.0], [16.6, 749.0], [16.7, 749.0], [16.8, 751.0], [16.9, 754.0], [17.0, 758.0], [17.1, 758.0], [17.2, 758.0], [17.3, 760.0], [17.4, 761.0], [17.5, 761.0], [17.6, 764.0], [17.7, 767.0], [17.8, 771.0], [17.9, 771.0], [18.0, 772.0], [18.1, 773.0], [18.2, 773.0], [18.3, 786.0], [18.4, 787.0], [18.5, 791.0], [18.6, 791.0], [18.7, 791.0], [18.8, 795.0], [18.9, 795.0], [19.0, 795.0], [19.1, 796.0], [19.2, 797.0], [19.3, 797.0], [19.4, 797.0], [19.5, 801.0], [19.6, 802.0], [19.7, 802.0], [19.8, 803.0], [19.9, 803.0], [20.0, 806.0], [20.1, 806.0], [20.2, 809.0], [20.3, 811.0], [20.4, 812.0], [20.5, 812.0], [20.6, 812.0], [20.7, 813.0], [20.8, 813.0], [20.9, 813.0], [21.0, 814.0], [21.1, 814.0], [21.2, 816.0], [21.3, 816.0], [21.4, 819.0], [21.5, 819.0], [21.6, 819.0], [21.7, 821.0], [21.8, 823.0], [21.9, 824.0], [22.0, 824.0], [22.1, 826.0], [22.2, 826.0], [22.3, 827.0], [22.4, 827.0], [22.5, 828.0], [22.6, 828.0], [22.7, 829.0], [22.8, 829.0], [22.9, 829.0], [23.0, 833.0], [23.1, 834.0], [23.2, 834.0], [23.3, 835.0], [23.4, 836.0], [23.5, 836.0], [23.6, 838.0], [23.7, 838.0], [23.8, 838.0], [23.9, 838.0], [24.0, 844.0], [24.1, 844.0], [24.2, 847.0], [24.3, 847.0], [24.4, 849.0], [24.5, 850.0], [24.6, 852.0], [24.7, 852.0], [24.8, 852.0], [24.9, 853.0], [25.0, 853.0], [25.1, 853.0], [25.2, 854.0], [25.3, 855.0], [25.4, 855.0], [25.5, 856.0], [25.6, 857.0], [25.7, 858.0], [25.8, 858.0], [25.9, 862.0], [26.0, 862.0], [26.1, 863.0], [26.2, 863.0], [26.3, 864.0], [26.4, 867.0], [26.5, 869.0], [26.6, 869.0], [26.7, 871.0], [26.8, 871.0], [26.9, 871.0], [27.0, 872.0], [27.1, 872.0], [27.2, 873.0], [27.3, 873.0], [27.4, 874.0], [27.5, 877.0], [27.6, 878.0], [27.7, 878.0], [27.8, 878.0], [27.9, 879.0], [28.0, 881.0], [28.1, 881.0], [28.2, 885.0], [28.3, 886.0], [28.4, 887.0], [28.5, 887.0], [28.6, 888.0], [28.7, 889.0], [28.8, 889.0], [28.9, 890.0], [29.0, 893.0], [29.1, 893.0], [29.2, 893.0], [29.3, 894.0], [29.4, 895.0], [29.5, 897.0], [29.6, 897.0], [29.7, 898.0], [29.8, 900.0], [29.9, 900.0], [30.0, 900.0], [30.1, 900.0], [30.2, 904.0], [30.3, 906.0], [30.4, 906.0], [30.5, 906.0], [30.6, 907.0], [30.7, 907.0], [30.8, 908.0], [30.9, 909.0], [31.0, 911.0], [31.1, 911.0], [31.2, 925.0], [31.3, 926.0], [31.4, 926.0], [31.5, 926.0], [31.6, 931.0], [31.7, 933.0], [31.8, 934.0], [31.9, 934.0], [32.0, 954.0], [32.1, 956.0], [32.2, 956.0], [32.3, 956.0], [32.4, 958.0], [32.5, 959.0], [32.6, 959.0], [32.7, 959.0], [32.8, 961.0], [32.9, 963.0], [33.0, 963.0], [33.1, 963.0], [33.2, 966.0], [33.3, 966.0], [33.4, 966.0], [33.5, 966.0], [33.6, 968.0], [33.7, 968.0], [33.8, 968.0], [33.9, 969.0], [34.0, 971.0], [34.1, 971.0], [34.2, 973.0], [34.3, 974.0], [34.4, 974.0], [34.5, 974.0], [34.6, 975.0], [34.7, 976.0], [34.8, 979.0], [34.9, 979.0], [35.0, 980.0], [35.1, 981.0], [35.2, 982.0], [35.3, 982.0], [35.4, 983.0], [35.5, 985.0], [35.6, 986.0], [35.7, 986.0], [35.8, 987.0], [35.9, 992.0], [36.0, 992.0], [36.1, 992.0], [36.2, 992.0], [36.3, 995.0], [36.4, 995.0], [36.5, 996.0], [36.6, 997.0], [36.7, 998.0], [36.8, 998.0], [36.9, 1000.0], [37.0, 1001.0], [37.1, 1002.0], [37.2, 1002.0], [37.3, 1004.0], [37.4, 1004.0], [37.5, 1006.0], [37.6, 1006.0], [37.7, 1007.0], [37.8, 1009.0], [37.9, 1009.0], [38.0, 1011.0], [38.1, 1013.0], [38.2, 1015.0], [38.3, 1015.0], [38.4, 1017.0], [38.5, 1019.0], [38.6, 1022.0], [38.7, 1022.0], [38.8, 1024.0], [38.9, 1025.0], [39.0, 1026.0], [39.1, 1026.0], [39.2, 1028.0], [39.3, 1031.0], [39.4, 1031.0], [39.5, 1034.0], [39.6, 1036.0], [39.7, 1036.0], [39.8, 1036.0], [39.9, 1036.0], [40.0, 1037.0], [40.1, 1039.0], [40.2, 1039.0], [40.3, 1040.0], [40.4, 1041.0], [40.5, 1043.0], [40.6, 1043.0], [40.7, 1043.0], [40.8, 1045.0], [40.9, 1047.0], [41.0, 1047.0], [41.1, 1049.0], [41.2, 1062.0], [41.3, 1062.0], [41.4, 1066.0], [41.5, 1067.0], [41.6, 1068.0], [41.7, 1068.0], [41.8, 1068.0], [41.9, 1071.0], [42.0, 1073.0], [42.1, 1073.0], [42.2, 1075.0], [42.3, 1075.0], [42.4, 1076.0], [42.5, 1076.0], [42.6, 1077.0], [42.7, 1078.0], [42.8, 1079.0], [42.9, 1079.0], [43.0, 1079.0], [43.1, 1082.0], [43.2, 1082.0], [43.3, 1083.0], [43.4, 1085.0], [43.5, 1086.0], [43.6, 1086.0], [43.7, 1087.0], [43.8, 1088.0], [43.9, 1090.0], [44.0, 1090.0], [44.1, 1091.0], [44.2, 1091.0], [44.3, 1092.0], [44.4, 1092.0], [44.5, 1093.0], [44.6, 1093.0], [44.7, 1093.0], [44.8, 1096.0], [44.9, 1096.0], [45.0, 1097.0], [45.1, 1097.0], [45.2, 1097.0], [45.3, 1099.0], [45.4, 1100.0], [45.5, 1100.0], [45.6, 1100.0], [45.7, 1101.0], [45.8, 1101.0], [45.9, 1101.0], [46.0, 1103.0], [46.1, 1106.0], [46.2, 1110.0], [46.3, 1110.0], [46.4, 1111.0], [46.5, 1112.0], [46.6, 1112.0], [46.7, 1113.0], [46.8, 1114.0], [46.9, 1115.0], [47.0, 1115.0], [47.1, 1115.0], [47.2, 1116.0], [47.3, 1117.0], [47.4, 1117.0], [47.5, 1125.0], [47.6, 1125.0], [47.7, 1126.0], [47.8, 1126.0], [47.9, 1126.0], [48.0, 1127.0], [48.1, 1127.0], [48.2, 1127.0], [48.3, 1128.0], [48.4, 1128.0], [48.5, 1128.0], [48.6, 1128.0], [48.7, 1129.0], [48.8, 1130.0], [48.9, 1130.0], [49.0, 1132.0], [49.1, 1133.0], [49.2, 1135.0], [49.3, 1135.0], [49.4, 1137.0], [49.5, 1138.0], [49.6, 1140.0], [49.7, 1140.0], [49.8, 1142.0], [49.9, 1144.0], [50.0, 1147.0], [50.1, 1147.0], [50.2, 1149.0], [50.3, 1149.0], [50.4, 1149.0], [50.5, 1150.0], [50.6, 1150.0], [50.7, 1152.0], [50.8, 1152.0], [50.9, 1153.0], [51.0, 1154.0], [51.1, 1155.0], [51.2, 1155.0], [51.3, 1158.0], [51.4, 1159.0], [51.5, 1162.0], [51.6, 1162.0], [51.7, 1163.0], [51.8, 1164.0], [51.9, 1164.0], [52.0, 1165.0], [52.1, 1165.0], [52.2, 1167.0], [52.3, 1167.0], [52.4, 1169.0], [52.5, 1169.0], [52.6, 1170.0], [52.7, 1170.0], [52.8, 1173.0], [52.9, 1173.0], [53.0, 1174.0], [53.1, 1174.0], [53.2, 1183.0], [53.3, 1187.0], [53.4, 1189.0], [53.5, 1189.0], [53.6, 1190.0], [53.7, 1195.0], [53.8, 1195.0], [53.9, 1195.0], [54.0, 1196.0], [54.1, 1196.0], [54.2, 1196.0], [54.3, 1198.0], [54.4, 1201.0], [54.5, 1201.0], [54.6, 1201.0], [54.7, 1202.0], [54.8, 1202.0], [54.9, 1204.0], [55.0, 1204.0], [55.1, 1205.0], [55.2, 1205.0], [55.3, 1207.0], [55.4, 1207.0], [55.5, 1207.0], [55.6, 1208.0], [55.7, 1208.0], [55.8, 1208.0], [55.9, 1208.0], [56.0, 1210.0], [56.1, 1210.0], [56.2, 1214.0], [56.3, 1214.0], [56.4, 1218.0], [56.5, 1218.0], [56.6, 1218.0], [56.7, 1219.0], [56.8, 1220.0], [56.9, 1220.0], [57.0, 1221.0], [57.1, 1223.0], [57.2, 1223.0], [57.3, 1223.0], [57.4, 1223.0], [57.5, 1225.0], [57.6, 1225.0], [57.7, 1227.0], [57.8, 1229.0], [57.9, 1230.0], [58.0, 1230.0], [58.1, 1232.0], [58.2, 1233.0], [58.3, 1235.0], [58.4, 1235.0], [58.5, 1235.0], [58.6, 1236.0], [58.7, 1237.0], [58.8, 1237.0], [58.9, 1238.0], [59.0, 1238.0], [59.1, 1238.0], [59.2, 1241.0], [59.3, 1243.0], [59.4, 1244.0], [59.5, 1244.0], [59.6, 1244.0], [59.7, 1244.0], [59.8, 1246.0], [59.9, 1246.0], [60.0, 1246.0], [60.1, 1247.0], [60.2, 1248.0], [60.3, 1248.0], [60.4, 1251.0], [60.5, 1261.0], [60.6, 1263.0], [60.7, 1263.0], [60.8, 1265.0], [60.9, 1266.0], [61.0, 1266.0], [61.1, 1269.0], [61.2, 1270.0], [61.3, 1272.0], [61.4, 1272.0], [61.5, 1273.0], [61.6, 1275.0], [61.7, 1276.0], [61.8, 1276.0], [61.9, 1276.0], [62.0, 1279.0], [62.1, 1279.0], [62.2, 1279.0], [62.3, 1280.0], [62.4, 1281.0], [62.5, 1281.0], [62.6, 1281.0], [62.7, 1282.0], [62.8, 1282.0], [62.9, 1282.0], [63.0, 1283.0], [63.1, 1283.0], [63.2, 1283.0], [63.3, 1283.0], [63.4, 1283.0], [63.5, 1283.0], [63.6, 1284.0], [63.7, 1284.0], [63.8, 1285.0], [63.9, 1287.0], [64.0, 1287.0], [64.1, 1287.0], [64.2, 1288.0], [64.3, 1288.0], [64.4, 1288.0], [64.5, 1289.0], [64.6, 1289.0], [64.7, 1294.0], [64.8, 1294.0], [64.9, 1299.0], [65.0, 1300.0], [65.1, 1301.0], [65.2, 1301.0], [65.3, 1303.0], [65.4, 1304.0], [65.5, 1304.0], [65.6, 1304.0], [65.7, 1306.0], [65.8, 1306.0], [65.9, 1307.0], [66.0, 1307.0], [66.1, 1307.0], [66.2, 1307.0], [66.3, 1307.0], [66.4, 1309.0], [66.5, 1309.0], [66.6, 1310.0], [66.7, 1310.0], [66.8, 1311.0], [66.9, 1311.0], [67.0, 1312.0], [67.1, 1312.0], [67.2, 1315.0], [67.3, 1316.0], [67.4, 1319.0], [67.5, 1319.0], [67.6, 1320.0], [67.7, 1321.0], [67.8, 1323.0], [67.9, 1323.0], [68.0, 1324.0], [68.1, 1325.0], [68.2, 1325.0], [68.3, 1326.0], [68.4, 1326.0], [68.5, 1326.0], [68.6, 1326.0], [68.7, 1327.0], [68.8, 1328.0], [68.9, 1329.0], [69.0, 1329.0], [69.1, 1330.0], [69.2, 1330.0], [69.3, 1330.0], [69.4, 1330.0], [69.5, 1331.0], [69.6, 1332.0], [69.7, 1332.0], [69.8, 1332.0], [69.9, 1333.0], [70.0, 1335.0], [70.1, 1335.0], [70.2, 1336.0], [70.3, 1336.0], [70.4, 1338.0], [70.5, 1338.0], [70.6, 1340.0], [70.7, 1340.0], [70.8, 1343.0], [70.9, 1343.0], [71.0, 1344.0], [71.1, 1344.0], [71.2, 1345.0], [71.3, 1345.0], [71.4, 1346.0], [71.5, 1349.0], [71.6, 1349.0], [71.7, 1349.0], [71.8, 1351.0], [71.9, 1354.0], [72.0, 1354.0], [72.1, 1356.0], [72.2, 1356.0], [72.3, 1356.0], [72.4, 1356.0], [72.5, 1357.0], [72.6, 1357.0], [72.7, 1358.0], [72.8, 1358.0], [72.9, 1359.0], [73.0, 1361.0], [73.1, 1363.0], [73.2, 1363.0], [73.3, 1363.0], [73.4, 1365.0], [73.5, 1365.0], [73.6, 1367.0], [73.7, 1368.0], [73.8, 1369.0], [73.9, 1369.0], [74.0, 1370.0], [74.1, 1374.0], [74.2, 1375.0], [74.3, 1375.0], [74.4, 1376.0], [74.5, 1378.0], [74.6, 1380.0], [74.7, 1380.0], [74.8, 1380.0], [74.9, 1383.0], [75.0, 1386.0], [75.1, 1386.0], [75.2, 1388.0], [75.3, 1390.0], [75.4, 1390.0], [75.5, 1392.0], [75.6, 1394.0], [75.7, 1399.0], [75.8, 1399.0], [75.9, 1400.0], [76.0, 1401.0], [76.1, 1402.0], [76.2, 1402.0], [76.3, 1403.0], [76.4, 1403.0], [76.5, 1405.0], [76.6, 1405.0], [76.7, 1409.0], [76.8, 1410.0], [76.9, 1410.0], [77.0, 1410.0], [77.1, 1410.0], [77.2, 1412.0], [77.3, 1412.0], [77.4, 1413.0], [77.5, 1414.0], [77.6, 1414.0], [77.7, 1414.0], [77.8, 1415.0], [77.9, 1418.0], [78.0, 1419.0], [78.1, 1419.0], [78.2, 1432.0], [78.3, 1434.0], [78.4, 1435.0], [78.5, 1435.0], [78.6, 1437.0], [78.7, 1439.0], [78.8, 1439.0], [78.9, 1440.0], [79.0, 1443.0], [79.1, 1446.0], [79.2, 1446.0], [79.3, 1447.0], [79.4, 1449.0], [79.5, 1451.0], [79.6, 1451.0], [79.7, 1453.0], [79.8, 1453.0], [79.9, 1454.0], [80.0, 1454.0], [80.1, 1457.0], [80.2, 1459.0], [80.3, 1459.0], [80.4, 1459.0], [80.5, 1459.0], [80.6, 1460.0], [80.7, 1460.0], [80.8, 1462.0], [80.9, 1464.0], [81.0, 1467.0], [81.1, 1467.0], [81.2, 1467.0], [81.3, 1468.0], [81.4, 1468.0], [81.5, 1468.0], [81.6, 1468.0], [81.7, 1469.0], [81.8, 1471.0], [81.9, 1471.0], [82.0, 1472.0], [82.1, 1474.0], [82.2, 1474.0], [82.3, 1475.0], [82.4, 1476.0], [82.5, 1476.0], [82.6, 1476.0], [82.7, 1480.0], [82.8, 1480.0], [82.9, 1481.0], [83.0, 1481.0], [83.1, 1483.0], [83.2, 1485.0], [83.3, 1487.0], [83.4, 1487.0], [83.5, 1488.0], [83.6, 1490.0], [83.7, 1490.0], [83.8, 1490.0], [83.9, 1491.0], [84.0, 1492.0], [84.1, 1492.0], [84.2, 1492.0], [84.3, 1493.0], [84.4, 1493.0], [84.5, 1493.0], [84.6, 1495.0], [84.7, 1497.0], [84.8, 1497.0], [84.9, 1497.0], [85.0, 1497.0], [85.1, 1500.0], [85.2, 1500.0], [85.3, 1500.0], [85.4, 1500.0], [85.5, 1501.0], [85.6, 1504.0], [85.7, 1504.0], [85.8, 1506.0], [85.9, 1509.0], [86.0, 1509.0], [86.1, 1509.0], [86.2, 1509.0], [86.3, 1511.0], [86.4, 1511.0], [86.5, 1511.0], [86.6, 1511.0], [86.7, 1512.0], [86.8, 1512.0], [86.9, 1512.0], [87.0, 1516.0], [87.1, 1517.0], [87.2, 1517.0], [87.3, 1518.0], [87.4, 1519.0], [87.5, 1520.0], [87.6, 1520.0], [87.7, 1522.0], [87.8, 1522.0], [87.9, 1522.0], [88.0, 1523.0], [88.1, 1524.0], [88.2, 1526.0], [88.3, 1526.0], [88.4, 1526.0], [88.5, 1527.0], [88.6, 1529.0], [88.7, 1529.0], [88.8, 1533.0], [88.9, 1534.0], [89.0, 1537.0], [89.1, 1537.0], [89.2, 1539.0], [89.3, 1539.0], [89.4, 1539.0], [89.5, 1540.0], [89.6, 1542.0], [89.7, 1542.0], [89.8, 1542.0], [89.9, 1544.0], [90.0, 1546.0], [90.1, 1546.0], [90.2, 1546.0], [90.3, 1548.0], [90.4, 1549.0], [90.5, 1570.0], [90.6, 1570.0], [90.7, 2088.0], [90.8, 2088.0], [90.9, 2089.0], [91.0, 2089.0], [91.1, 2090.0], [91.2, 2092.0], [91.3, 2092.0], [91.4, 2104.0], [91.5, 2105.0], [91.6, 2107.0], [91.7, 2107.0], [91.8, 4085.0], [91.9, 4087.0], [92.0, 4095.0], [92.1, 4095.0], [92.2, 4098.0], [92.3, 4297.0], [92.4, 4298.0], [92.5, 4298.0], [92.6, 4300.0], [92.7, 4303.0], [92.8, 4303.0], [92.9, 4303.0], [93.0, 4303.0], [93.1, 4304.0], [93.2, 4304.0], [93.3, 4306.0], [93.4, 4307.0], [93.5, 4308.0], [93.6, 4308.0], [93.7, 4309.0], [93.8, 4309.0], [93.9, 4313.0], [94.0, 4313.0], [94.1, 4313.0], [94.2, 4315.0], [94.3, 4315.0], [94.4, 4315.0], [94.5, 4316.0], [94.6, 4319.0], [94.7, 4319.0], [94.8, 4319.0], [94.9, 4320.0], [95.0, 4322.0], [95.1, 4322.0], [95.2, 4323.0], [95.3, 4324.0], [95.4, 4325.0], [95.5, 4325.0], [95.6, 4326.0], [95.7, 4327.0], [95.8, 4329.0], [95.9, 4329.0], [96.0, 4330.0], [96.1, 4332.0], [96.2, 4332.0], [96.3, 4332.0], [96.4, 4334.0], [96.5, 4335.0], [96.6, 4335.0], [96.7, 4336.0], [96.8, 4337.0], [96.9, 4339.0], [97.0, 4339.0], [97.1, 4340.0], [97.2, 4343.0], [97.3, 4345.0], [97.4, 4345.0], [97.5, 4346.0], [97.6, 4347.0], [97.7, 4350.0], [97.8, 4350.0], [97.9, 4352.0], [98.0, 4352.0], [98.1, 4354.0], [98.2, 4354.0], [98.3, 4371.0], [98.4, 6042.0], [98.5, 6042.0], [98.6, 6052.0], [98.7, 6072.0], [98.8, 6076.0], [98.9, 6076.0], [99.0, 6098.0], [99.1, 6100.0], [99.2, 6108.0], [99.3, 6108.0], [99.4, 16523.0], [99.5, 18572.0], [99.6, 18572.0], [99.7, 18572.0], [99.8, 20795.0], [99.9, 28572.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[0.0, 1286.0], [0.1, 1482.0], [0.2, 1486.0], [0.3, 1486.0], [0.4, 2418.0], [0.5, 2441.0], [0.6, 2474.0], [0.7, 2476.0], [0.8, 2476.0], [0.9, 2481.0], [1.0, 2483.0], [1.1, 2483.0], [1.2, 2485.0], [1.3, 2486.0], [1.4, 2486.0], [1.5, 2487.0], [1.6, 2493.0], [1.7, 2493.0], [1.8, 2494.0], [1.9, 2494.0], [2.0, 2497.0], [2.1, 2498.0], [2.2, 2498.0], [2.3, 2498.0], [2.4, 2500.0], [2.5, 2500.0], [2.6, 2502.0], [2.7, 2506.0], [2.8, 2506.0], [2.9, 2508.0], [3.0, 2511.0], [3.1, 2513.0], [3.2, 2525.0], [3.3, 2527.0], [3.4, 2528.0], [3.5, 2529.0], [3.6, 2548.0], [3.7, 2549.0], [3.8, 2550.0], [3.9, 2552.0], [4.0, 2557.0], [4.1, 2561.0], [4.2, 2589.0], [4.3, 2596.0], [4.4, 2600.0], [4.5, 2649.0], [4.6, 2729.0], [4.7, 2731.0], [4.8, 2735.0], [4.9, 2737.0], [5.0, 2767.0], [5.1, 2769.0], [5.2, 2771.0], [5.3, 2771.0], [5.4, 2772.0], [5.5, 2792.0], [5.6, 2805.0], [5.7, 2807.0], [5.8, 2809.0], [5.9, 2827.0], [6.0, 2828.0], [6.1, 2828.0], [6.2, 3066.0], [6.3, 3069.0], [6.4, 3069.0], [6.5, 3070.0], [6.6, 6186.0], [6.7, 6194.0], [6.8, 6252.0], [6.9, 6852.0], [7.0, 9620.0], [7.1, 9640.0], [7.2, 9641.0], [7.3, 9650.0], [7.4, 9656.0], [7.5, 9656.0], [7.6, 9662.0], [7.7, 9671.0], [7.8, 9672.0], [7.9, 9672.0], [8.0, 9680.0], [8.1, 9682.0], [8.2, 9686.0], [8.3, 9686.0], [8.4, 9686.0], [8.5, 9686.0], [8.6, 9687.0], [8.7, 9687.0], [8.8, 9688.0], [8.9, 9689.0], [9.0, 9691.0], [9.1, 9695.0], [9.2, 9695.0], [9.3, 9695.0], [9.4, 9696.0], [9.5, 9696.0], [9.6, 9697.0], [9.7, 9697.0], [9.8, 9697.0], [9.9, 9697.0], [10.0, 9698.0], [10.1, 9702.0], [10.2, 9702.0], [10.3, 9703.0], [10.4, 9703.0], [10.5, 9704.0], [10.6, 9705.0], [10.7, 9705.0], [10.8, 9707.0], [10.9, 9707.0], [11.0, 9708.0], [11.1, 9711.0], [11.2, 9712.0], [11.3, 9712.0], [11.4, 9712.0], [11.5, 9712.0], [11.6, 9713.0], [11.7, 9713.0], [11.8, 9714.0], [11.9, 9715.0], [12.0, 9716.0], [12.1, 9716.0], [12.2, 9721.0], [12.3, 9736.0], [12.4, 9738.0], [12.5, 9748.0], [12.6, 9752.0], [12.7, 9795.0], [12.8, 9795.0], [12.9, 9815.0], [13.0, 9816.0], [13.1, 9833.0], [13.2, 9834.0], [13.3, 9834.0], [13.4, 9842.0], [13.5, 9843.0], [13.6, 9844.0], [13.7, 9858.0], [13.8, 9858.0], [13.9, 9859.0], [14.0, 9864.0], [14.1, 9869.0], [14.2, 9871.0], [14.3, 9871.0], [14.4, 9872.0], [14.5, 9873.0], [14.6, 9874.0], [14.7, 9875.0], [14.8, 9881.0], [14.9, 9881.0], [15.0, 9883.0], [15.1, 9883.0], [15.2, 9884.0], [15.3, 9884.0], [15.4, 9886.0], [15.5, 9887.0], [15.6, 9893.0], [15.7, 9894.0], [15.8, 9900.0], [15.9, 9903.0], [16.0, 9903.0], [16.1, 9905.0], [16.2, 9905.0], [16.3, 9912.0], [16.4, 9915.0], [16.5, 9917.0], [16.6, 9919.0], [16.7, 9920.0], [16.8, 9923.0], [16.9, 9923.0], [17.0, 9924.0], [17.1, 9924.0], [17.2, 9925.0], [17.3, 9931.0], [17.4, 9938.0], [17.5, 9941.0], [17.6, 9942.0], [17.7, 9946.0], [17.8, 10003.0], [17.9, 10019.0], [18.0, 10019.0], [18.1, 10028.0], [18.2, 10032.0], [18.3, 10032.0], [18.4, 10040.0], [18.5, 10043.0], [18.6, 10044.0], [18.7, 10048.0], [18.8, 10053.0], [18.9, 10054.0], [19.0, 10055.0], [19.1, 10057.0], [19.2, 10058.0], [19.3, 10059.0], [19.4, 10061.0], [19.5, 10063.0], [19.6, 10064.0], [19.7, 10064.0], [19.8, 10066.0], [19.9, 10068.0], [20.0, 10068.0], [20.1, 10072.0], [20.2, 10075.0], [20.3, 10076.0], [20.4, 10076.0], [20.5, 10078.0], [20.6, 10078.0], [20.7, 10080.0], [20.8, 10080.0], [20.9, 10085.0], [21.0, 10085.0], [21.1, 10085.0], [21.2, 10086.0], [21.3, 10087.0], [21.4, 10089.0], [21.5, 10096.0], [21.6, 10097.0], [21.7, 10099.0], [21.8, 10108.0], [21.9, 10108.0], [22.0, 10110.0], [22.1, 10178.0], [22.2, 10178.0], [22.3, 10179.0], [22.4, 10182.0], [22.5, 10184.0], [22.6, 10188.0], [22.7, 10190.0], [22.8, 10190.0], [22.9, 10196.0], [23.0, 10198.0], [23.1, 10206.0], [23.2, 10215.0], [23.3, 10218.0], [23.4, 10220.0], [23.5, 10222.0], [23.6, 10224.0], [23.7, 10226.0], [23.8, 10236.0], [23.9, 10238.0], [24.0, 10246.0], [24.1, 10269.0], [24.2, 10270.0], [24.3, 10275.0], [24.4, 10275.0], [24.5, 10276.0], [24.6, 10282.0], [24.7, 10285.0], [24.8, 10289.0], [24.9, 10290.0], [25.0, 10294.0], [25.1, 10299.0], [25.2, 10303.0], [25.3, 10305.0], [25.4, 10305.0], [25.5, 10307.0], [25.6, 10309.0], [25.7, 10309.0], [25.8, 10310.0], [25.9, 10322.0], [26.0, 10326.0], [26.1, 10337.0], [26.2, 10338.0], [26.3, 10342.0], [26.4, 10344.0], [26.5, 10370.0], [26.6, 10394.0], [26.7, 10400.0], [26.8, 10400.0], [26.9, 10402.0], [27.0, 10403.0], [27.1, 10407.0], [27.2, 10410.0], [27.3, 10411.0], [27.4, 10417.0], [27.5, 10418.0], [27.6, 10420.0], [27.7, 10422.0], [27.8, 10425.0], [27.9, 10430.0], [28.0, 10441.0], [28.1, 10452.0], [28.2, 10452.0], [28.3, 10453.0], [28.4, 10455.0], [28.5, 10461.0], [28.6, 10462.0], [28.7, 10464.0], [28.8, 10465.0], [28.9, 10465.0], [29.0, 10470.0], [29.1, 10478.0], [29.2, 10484.0], [29.3, 10484.0], [29.4, 10489.0], [29.5, 10490.0], [29.6, 10491.0], [29.7, 10491.0], [29.8, 10492.0], [29.9, 10492.0], [30.0, 10493.0], [30.1, 10493.0], [30.2, 10493.0], [30.3, 10494.0], [30.4, 10495.0], [30.5, 10496.0], [30.6, 10497.0], [30.7, 10497.0], [30.8, 10498.0], [30.9, 10498.0], [31.0, 10498.0], [31.1, 10499.0], [31.2, 10503.0], [31.3, 10505.0], [31.4, 10505.0], [31.5, 10510.0], [31.6, 10511.0], [31.7, 10512.0], [31.8, 10513.0], [31.9, 10517.0], [32.0, 10520.0], [32.1, 10526.0], [32.2, 10530.0], [32.3, 10530.0], [32.4, 10530.0], [32.5, 10533.0], [32.6, 10535.0], [32.7, 10537.0], [32.8, 10537.0], [32.9, 10539.0], [33.0, 10540.0], [33.1, 10541.0], [33.2, 10542.0], [33.3, 10543.0], [33.4, 10546.0], [33.5, 10551.0], [33.6, 10553.0], [33.7, 10556.0], [33.8, 10558.0], [33.9, 10559.0], [34.0, 10561.0], [34.1, 10563.0], [34.2, 15579.0], [34.3, 15582.0], [34.4, 15582.0], [34.5, 15585.0], [34.6, 15587.0], [34.7, 15593.0], [34.8, 15603.0], [34.9, 15610.0], [35.0, 15611.0], [35.1, 15624.0], [35.2, 15626.0], [35.3, 15626.0], [35.4, 15627.0], [35.5, 15627.0], [35.6, 15628.0], [35.7, 15702.0], [35.8, 15702.0], [35.9, 15703.0], [36.0, 15706.0], [36.1, 15707.0], [36.2, 15708.0], [36.3, 15708.0], [36.4, 15708.0], [36.5, 15712.0], [36.6, 15714.0], [36.7, 15723.0], [36.8, 15724.0], [36.9, 15724.0], [37.0, 15726.0], [37.1, 15726.0], [37.2, 15728.0], [37.3, 15729.0], [37.4, 15730.0], [37.5, 15732.0], [37.6, 15732.0], [37.7, 15733.0], [37.8, 15734.0], [37.9, 15735.0], [38.0, 15737.0], [38.1, 15737.0], [38.2, 15741.0], [38.3, 15746.0], [38.4, 15750.0], [38.5, 15751.0], [38.6, 15752.0], [38.7, 15752.0], [38.8, 15757.0], [38.9, 15758.0], [39.0, 15760.0], [39.1, 15764.0], [39.2, 15775.0], [39.3, 15779.0], [39.4, 15790.0], [39.5, 15799.0], [39.6, 15800.0], [39.7, 15804.0], [39.8, 15804.0], [39.9, 15805.0], [40.0, 15805.0], [40.1, 15806.0], [40.2, 15807.0], [40.3, 15807.0], [40.4, 15809.0], [40.5, 15811.0], [40.6, 15811.0], [40.7, 15813.0], [40.8, 15814.0], [40.9, 15814.0], [41.0, 15818.0], [41.1, 15820.0], [41.2, 15822.0], [41.3, 15832.0], [41.4, 15838.0], [41.5, 15839.0], [41.6, 15843.0], [41.7, 15847.0], [41.8, 15901.0], [41.9, 15928.0], [42.0, 15932.0], [42.1, 15945.0], [42.2, 15948.0], [42.3, 15987.0], [42.4, 16003.0], [42.5, 16024.0], [42.6, 16026.0], [42.7, 16057.0], [42.8, 16066.0], [42.9, 16080.0], [43.0, 16088.0], [43.1, 16089.0], [43.2, 16095.0], [43.3, 16097.0], [43.4, 16114.0], [43.5, 16115.0], [43.6, 16117.0], [43.7, 16118.0], [43.8, 16119.0], [43.9, 16123.0], [44.0, 16126.0], [44.1, 16131.0], [44.2, 16137.0], [44.3, 16187.0], [44.4, 16189.0], [44.5, 16190.0], [44.6, 16190.0], [44.7, 16191.0], [44.8, 16195.0], [44.9, 16197.0], [45.0, 16200.0], [45.1, 16215.0], [45.2, 16219.0], [45.3, 16226.0], [45.4, 16233.0], [45.5, 16234.0], [45.6, 16243.0], [45.7, 16244.0], [45.8, 16244.0], [45.9, 16245.0], [46.0, 16247.0], [46.1, 16248.0], [46.2, 16248.0], [46.3, 16249.0], [46.4, 16253.0], [46.5, 16254.0], [46.6, 16255.0], [46.7, 16256.0], [46.8, 16257.0], [46.9, 16259.0], [47.0, 16261.0], [47.1, 16261.0], [47.2, 16261.0], [47.3, 16263.0], [47.4, 16263.0], [47.5, 16264.0], [47.6, 16264.0], [47.7, 16265.0], [47.8, 16265.0], [47.9, 16265.0], [48.0, 16266.0], [48.1, 16267.0], [48.2, 16267.0], [48.3, 16267.0], [48.4, 16268.0], [48.5, 16268.0], [48.6, 16269.0], [48.7, 16269.0], [48.8, 16269.0], [48.9, 16270.0], [49.0, 16270.0], [49.1, 16272.0], [49.2, 16272.0], [49.3, 16272.0], [49.4, 16273.0], [49.5, 16274.0], [49.6, 16275.0], [49.7, 16275.0], [49.8, 16275.0], [49.9, 16276.0], [50.0, 16276.0], [50.1, 16276.0], [50.2, 16276.0], [50.3, 16277.0], [50.4, 16278.0], [50.5, 16279.0], [50.6, 16279.0], [50.7, 16279.0], [50.8, 16281.0], [50.9, 16285.0], [51.0, 16286.0], [51.1, 16289.0], [51.2, 16291.0], [51.3, 16292.0], [51.4, 16292.0], [51.5, 16293.0], [51.6, 16293.0], [51.7, 16298.0], [51.8, 16299.0], [51.9, 16299.0], [52.0, 16301.0], [52.1, 16302.0], [52.2, 16305.0], [52.3, 16310.0], [52.4, 16310.0], [52.5, 16313.0], [52.6, 16314.0], [52.7, 16343.0], [52.8, 16352.0], [52.9, 16352.0], [53.0, 16352.0], [53.1, 16352.0], [53.2, 16353.0], [53.3, 16355.0], [53.4, 16356.0], [53.5, 16360.0], [53.6, 16371.0], [53.7, 16371.0], [53.8, 16372.0], [53.9, 16372.0], [54.0, 16372.0], [54.1, 16372.0], [54.2, 16374.0], [54.3, 16374.0], [54.4, 16374.0], [54.5, 16374.0], [54.6, 16374.0], [54.7, 16375.0], [54.8, 16379.0], [54.9, 16380.0], [55.0, 16380.0], [55.1, 16381.0], [55.2, 16384.0], [55.3, 16386.0], [55.4, 16387.0], [55.5, 16389.0], [55.6, 16390.0], [55.7, 16392.0], [55.8, 16392.0], [55.9, 16392.0], [56.0, 16393.0], [56.1, 16394.0], [56.2, 16396.0], [56.3, 16397.0], [56.4, 16400.0], [56.5, 16401.0], [56.6, 16404.0], [56.7, 16406.0], [56.8, 16408.0], [56.9, 16413.0], [57.0, 16416.0], [57.1, 16419.0], [57.2, 16423.0], [57.3, 16424.0], [57.4, 16428.0], [57.5, 16430.0], [57.6, 16431.0], [57.7, 16451.0], [57.8, 16452.0], [57.9, 16453.0], [58.0, 16454.0], [58.1, 16454.0], [58.2, 16456.0], [58.3, 16458.0], [58.4, 16460.0], [58.5, 16463.0], [58.6, 16463.0], [58.7, 16463.0], [58.8, 16465.0], [58.9, 16465.0], [59.0, 16466.0], [59.1, 16466.0], [59.2, 16467.0], [59.3, 16467.0], [59.4, 16468.0], [59.5, 16469.0], [59.6, 16471.0], [59.7, 16472.0], [59.8, 16472.0], [59.9, 16472.0], [60.0, 16473.0], [60.1, 16474.0], [60.2, 16474.0], [60.3, 16475.0], [60.4, 16476.0], [60.5, 16478.0], [60.6, 16478.0], [60.7, 16479.0], [60.8, 16479.0], [60.9, 16481.0], [61.0, 16482.0], [61.1, 16482.0], [61.2, 16482.0], [61.3, 16483.0], [61.4, 16484.0], [61.5, 16484.0], [61.6, 16485.0], [61.7, 16486.0], [61.8, 16488.0], [61.9, 16488.0], [62.0, 16490.0], [62.1, 16491.0], [62.2, 16492.0], [62.3, 16492.0], [62.4, 16492.0], [62.5, 16494.0], [62.6, 16497.0], [62.7, 16498.0], [62.8, 16500.0], [62.9, 16502.0], [63.0, 16503.0], [63.1, 16503.0], [63.2, 16503.0], [63.3, 16505.0], [63.4, 16508.0], [63.5, 16509.0], [63.6, 16511.0], [63.7, 16514.0], [63.8, 16515.0], [63.9, 16515.0], [64.0, 16515.0], [64.1, 16516.0], [64.2, 16516.0], [64.3, 16516.0], [64.4, 16518.0], [64.5, 16518.0], [64.6, 16520.0], [64.7, 16521.0], [64.8, 16524.0], [64.9, 16524.0], [65.0, 16524.0], [65.1, 16525.0], [65.2, 16525.0], [65.3, 16525.0], [65.4, 16526.0], [65.5, 16527.0], [65.6, 16528.0], [65.7, 16528.0], [65.8, 16528.0], [65.9, 16531.0], [66.0, 16531.0], [66.1, 16531.0], [66.2, 16531.0], [66.3, 16531.0], [66.4, 16531.0], [66.5, 16531.0], [66.6, 16532.0], [66.7, 16532.0], [66.8, 16533.0], [66.9, 16533.0], [67.0, 16534.0], [67.1, 16534.0], [67.2, 16535.0], [67.3, 16535.0], [67.4, 16536.0], [67.5, 16537.0], [67.6, 16538.0], [67.7, 16539.0], [67.8, 16539.0], [67.9, 16540.0], [68.0, 16541.0], [68.1, 16542.0], [68.2, 16542.0], [68.3, 16544.0], [68.4, 16544.0], [68.5, 16545.0], [68.6, 16546.0], [68.7, 16546.0], [68.8, 16547.0], [68.9, 16547.0], [69.0, 16550.0], [69.1, 16550.0], [69.2, 16550.0], [69.3, 16550.0], [69.4, 16551.0], [69.5, 16552.0], [69.6, 16552.0], [69.7, 16554.0], [69.8, 16554.0], [69.9, 16561.0], [70.0, 16562.0], [70.1, 16562.0], [70.2, 16563.0], [70.3, 16569.0], [70.4, 16572.0], [70.5, 16579.0], [70.6, 16580.0], [70.7, 16580.0], [70.8, 16580.0], [70.9, 16583.0], [71.0, 16585.0], [71.1, 16585.0], [71.2, 16586.0], [71.3, 16586.0], [71.4, 16590.0], [71.5, 16591.0], [71.6, 16592.0], [71.7, 16592.0], [71.8, 16593.0], [71.9, 16596.0], [72.0, 16598.0], [72.1, 16604.0], [72.2, 16608.0], [72.3, 16646.0], [72.4, 16646.0], [72.5, 16646.0], [72.6, 16652.0], [72.7, 16653.0], [72.8, 16654.0], [72.9, 16662.0], [73.0, 16665.0], [73.1, 16669.0], [73.2, 16669.0], [73.3, 16671.0], [73.4, 16675.0], [73.5, 16676.0], [73.6, 16677.0], [73.7, 16678.0], [73.8, 16679.0], [73.9, 16680.0], [74.0, 16680.0], [74.1, 16681.0], [74.2, 16682.0], [74.3, 16682.0], [74.4, 16683.0], [74.5, 16687.0], [74.6, 16687.0], [74.7, 16688.0], [74.8, 16689.0], [74.9, 16693.0], [75.0, 16695.0], [75.1, 16696.0], [75.2, 16696.0], [75.3, 16700.0], [75.4, 16701.0], [75.5, 16704.0], [75.6, 16704.0], [75.7, 16707.0], [75.8, 16718.0], [75.9, 16721.0], [76.0, 16722.0], [76.1, 16723.0], [76.2, 16725.0], [76.3, 16725.0], [76.4, 16725.0], [76.5, 16726.0], [76.6, 16726.0], [76.7, 16727.0], [76.8, 16727.0], [76.9, 16736.0], [77.0, 16737.0], [77.1, 16739.0], [77.2, 16739.0], [77.3, 16742.0], [77.4, 16745.0], [77.5, 16747.0], [77.6, 16747.0], [77.7, 16749.0], [77.8, 16750.0], [77.9, 16750.0], [78.0, 16751.0], [78.1, 16751.0], [78.2, 16752.0], [78.3, 16752.0], [78.4, 16755.0], [78.5, 16755.0], [78.6, 16756.0], [78.7, 16758.0], [78.8, 16758.0], [78.9, 16759.0], [79.0, 16759.0], [79.1, 16761.0], [79.2, 16761.0], [79.3, 16762.0], [79.4, 16762.0], [79.5, 16762.0], [79.6, 16762.0], [79.7, 16763.0], [79.8, 16765.0], [79.9, 16766.0], [80.0, 16766.0], [80.1, 16766.0], [80.2, 16767.0], [80.3, 16768.0], [80.4, 16768.0], [80.5, 16768.0], [80.6, 16768.0], [80.7, 16768.0], [80.8, 16768.0], [80.9, 16769.0], [81.0, 16769.0], [81.1, 16769.0], [81.2, 16769.0], [81.3, 16770.0], [81.4, 16771.0], [81.5, 16772.0], [81.6, 16772.0], [81.7, 16773.0], [81.8, 16773.0], [81.9, 16773.0], [82.0, 16773.0], [82.1, 16773.0], [82.2, 16774.0], [82.3, 16774.0], [82.4, 16774.0], [82.5, 16775.0], [82.6, 16776.0], [82.7, 16778.0], [82.8, 16778.0], [82.9, 16780.0], [83.0, 16784.0], [83.1, 16784.0], [83.2, 16785.0], [83.3, 16786.0], [83.4, 16789.0], [83.5, 16789.0], [83.6, 16791.0], [83.7, 16791.0], [83.8, 16792.0], [83.9, 16793.0], [84.0, 16794.0], [84.1, 16796.0], [84.2, 16796.0], [84.3, 16797.0], [84.4, 16800.0], [84.5, 16800.0], [84.6, 16802.0], [84.7, 16808.0], [84.8, 16818.0], [84.9, 16821.0], [85.0, 16831.0], [85.1, 16835.0], [85.2, 16835.0], [85.3, 16837.0], [85.4, 16862.0], [85.5, 16869.0], [85.6, 16870.0], [85.7, 16873.0], [85.8, 16879.0], [85.9, 16881.0], [86.0, 16884.0], [86.1, 16885.0], [86.2, 16886.0], [86.3, 16886.0], [86.4, 16887.0], [86.5, 16887.0], [86.6, 16888.0], [86.7, 16890.0], [86.8, 16895.0], [86.9, 16896.0], [87.0, 16897.0], [87.1, 16912.0], [87.2, 16912.0], [87.3, 16914.0], [87.4, 16918.0], [87.5, 16924.0], [87.6, 16925.0], [87.7, 16925.0], [87.8, 16934.0], [87.9, 16949.0], [88.0, 16953.0], [88.1, 16977.0], [88.2, 16985.0], [88.3, 16985.0], [88.4, 16987.0], [88.5, 16989.0], [88.6, 16993.0], [88.7, 16993.0], [88.8, 16995.0], [88.9, 16995.0], [89.0, 16995.0], [89.1, 16996.0], [89.2, 16996.0], [89.3, 16996.0], [89.4, 16997.0], [89.5, 16997.0], [89.6, 16997.0], [89.7, 16997.0], [89.8, 16998.0], [89.9, 16998.0], [90.0, 16998.0], [90.1, 16998.0], [90.2, 16998.0], [90.3, 16998.0], [90.4, 16998.0], [90.5, 16999.0], [90.6, 16999.0], [90.7, 16999.0], [90.8, 17000.0], [90.9, 17000.0], [91.0, 17000.0], [91.1, 17001.0], [91.2, 17001.0], [91.3, 17002.0], [91.4, 17002.0], [91.5, 17002.0], [91.6, 17003.0], [91.7, 17003.0], [91.8, 17004.0], [91.9, 17005.0], [92.0, 17005.0], [92.1, 17005.0], [92.2, 17006.0], [92.3, 17006.0], [92.4, 17006.0], [92.5, 17006.0], [92.6, 17007.0], [92.7, 17007.0], [92.8, 17009.0], [92.9, 17009.0], [93.0, 17009.0], [93.1, 17010.0], [93.2, 17010.0], [93.3, 17010.0], [93.4, 17011.0], [93.5, 17013.0], [93.6, 17015.0], [93.7, 17016.0], [93.8, 17017.0], [93.9, 17019.0], [94.0, 17019.0], [94.1, 17020.0], [94.2, 17020.0], [94.3, 17020.0], [94.4, 17020.0], [94.5, 17021.0], [94.6, 17021.0], [94.7, 17021.0], [94.8, 17021.0], [94.9, 17021.0], [95.0, 17021.0], [95.1, 17021.0], [95.2, 17021.0], [95.3, 17021.0], [95.4, 17021.0], [95.5, 17022.0], [95.6, 17024.0], [95.7, 17024.0], [95.8, 17024.0], [95.9, 17024.0], [96.0, 17025.0], [96.1, 17026.0], [96.2, 17027.0], [96.3, 17028.0], [96.4, 17028.0], [96.5, 17030.0], [96.6, 17030.0], [96.7, 17030.0], [96.8, 17030.0], [96.9, 17031.0], [97.0, 17032.0], [97.1, 17033.0], [97.2, 17033.0], [97.3, 17035.0], [97.4, 17035.0], [97.5, 17037.0], [97.6, 17037.0], [97.7, 17038.0], [97.8, 17040.0], [97.9, 17044.0], [98.0, 17046.0], [98.1, 17046.0], [98.2, 17051.0], [98.3, 17056.0], [98.4, 17056.0], [98.5, 17058.0], [98.6, 17059.0], [98.7, 17060.0], [98.8, 17075.0], [98.9, 17079.0], [99.0, 17080.0], [99.1, 17106.0], [99.2, 17169.0], [99.3, 17172.0], [99.4, 17172.0], [99.5, 17177.0], [99.6, 17180.0], [99.7, 17180.0], [99.8, 17181.0], [99.9, 17190.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[0.0, 19348.0], [0.1, 19348.0], [0.2, 19358.0], [0.3, 19381.0], [0.4, 19381.0], [0.5, 19413.0], [0.6, 19414.0], [0.7, 19416.0], [0.8, 19416.0], [0.9, 19416.0], [1.0, 19419.0], [1.1, 19422.0], [1.2, 19422.0], [1.3, 19423.0], [1.4, 19423.0], [1.5, 19423.0], [1.6, 19424.0], [1.7, 19425.0], [1.8, 19428.0], [1.9, 19428.0], [2.0, 19428.0], [2.1, 19428.0], [2.2, 19430.0], [2.3, 19430.0], [2.4, 19431.0], [2.5, 19433.0], [2.6, 19435.0], [2.7, 19435.0], [2.8, 19436.0], [2.9, 19436.0], [3.0, 19436.0], [3.1, 19438.0], [3.2, 19439.0], [3.3, 19439.0], [3.4, 19439.0], [3.5, 19442.0], [3.6, 19447.0], [3.7, 19455.0], [3.8, 19455.0], [3.9, 19458.0], [4.0, 19464.0], [4.1, 19466.0], [4.2, 19466.0], [4.3, 19468.0], [4.4, 19480.0], [4.5, 19480.0], [4.6, 19487.0], [4.7, 19488.0], [4.8, 19491.0], [4.9, 19491.0], [5.0, 19494.0], [5.1, 19503.0], [5.2, 19532.0], [5.3, 19532.0], [5.4, 19540.0], [5.5, 19710.0], [5.6, 19710.0], [5.7, 19716.0], [5.8, 19742.0], [5.9, 19862.0], [6.0, 19862.0], [6.1, 19863.0], [6.2, 19866.0], [6.3, 19867.0], [6.4, 19867.0], [6.5, 19868.0], [6.6, 19868.0], [6.7, 19869.0], [6.8, 19869.0], [6.9, 19871.0], [7.0, 19872.0], [7.1, 19872.0], [7.2, 19875.0], [7.3, 19878.0], [7.4, 19878.0], [7.5, 19878.0], [7.6, 19888.0], [7.7, 19891.0], [7.8, 19999.0], [7.9, 19999.0], [8.0, 20003.0], [8.1, 20005.0], [8.2, 20007.0], [8.3, 20007.0], [8.4, 30384.0], [8.5, 30388.0], [8.6, 30388.0], [8.7, 30389.0], [8.8, 30391.0], [8.9, 30393.0], [9.0, 30393.0], [9.1, 30394.0], [9.2, 30407.0], [9.3, 30410.0], [9.4, 30410.0], [9.5, 30411.0], [9.6, 30418.0], [9.7, 30426.0], [9.8, 30426.0], [9.9, 30428.0], [10.0, 30429.0], [10.1, 30429.0], [10.2, 30430.0], [10.3, 30431.0], [10.4, 30497.0], [10.5, 30497.0], [10.6, 30499.0], [10.7, 30501.0], [10.8, 30503.0], [10.9, 30503.0], [11.0, 30508.0], [11.1, 30508.0], [11.2, 30508.0], [11.3, 30511.0], [11.4, 30511.0], [11.5, 30511.0], [11.6, 30511.0], [11.7, 30514.0], [11.8, 30522.0], [11.9, 30523.0], [12.0, 30523.0], [12.1, 30524.0], [12.2, 30524.0], [12.3, 30524.0], [12.4, 30524.0], [12.5, 30527.0], [12.6, 30529.0], [12.7, 30529.0], [12.8, 30530.0], [12.9, 30532.0], [13.0, 30533.0], [13.1, 30533.0], [13.2, 30534.0], [13.3, 30536.0], [13.4, 30536.0], [13.5, 30536.0], [13.6, 30537.0], [13.7, 30541.0], [13.8, 30545.0], [13.9, 30545.0], [14.0, 30546.0], [14.1, 30546.0], [14.2, 30546.0], [14.3, 30547.0], [14.4, 30548.0], [14.5, 30551.0], [14.6, 30551.0], [14.7, 30552.0], [14.8, 30562.0], [14.9, 30569.0], [15.0, 30569.0], [15.1, 30571.0], [15.2, 30578.0], [15.3, 30578.0], [15.4, 30580.0], [15.5, 30587.0], [15.6, 30587.0], [15.7, 30587.0], [15.8, 30595.0], [15.9, 30595.0], [16.0, 30596.0], [16.1, 30596.0], [16.2, 30604.0], [16.3, 30604.0], [16.4, 30604.0], [16.5, 30604.0], [16.6, 30605.0], [16.7, 30606.0], [16.8, 30606.0], [16.9, 30606.0], [17.0, 30610.0], [17.1, 30626.0], [17.2, 30626.0], [17.3, 30630.0], [17.4, 30637.0], [17.5, 30637.0], [17.6, 30637.0], [17.7, 30640.0], [17.8, 30725.0], [17.9, 30727.0], [18.0, 30727.0], [18.1, 30790.0], [18.2, 30796.0], [18.3, 30796.0], [18.4, 30829.0], [18.5, 30831.0], [18.6, 30832.0], [18.7, 30832.0], [18.8, 30839.0], [18.9, 30851.0], [19.0, 30865.0], [19.1, 30865.0], [19.2, 30879.0], [19.3, 30885.0], [19.4, 30891.0], [19.5, 30891.0], [19.6, 30892.0], [19.7, 30899.0], [19.8, 30899.0], [19.9, 30900.0], [20.0, 30901.0], [20.1, 30910.0], [20.2, 30910.0], [20.3, 30912.0], [20.4, 30913.0], [20.5, 30913.0], [20.6, 30913.0], [20.7, 30917.0], [20.8, 30921.0], [20.9, 30921.0], [21.0, 30928.0], [21.1, 30935.0], [21.2, 30936.0], [21.3, 30936.0], [21.4, 30940.0], [21.5, 30940.0], [21.6, 30947.0], [21.7, 30947.0], [21.8, 30953.0], [21.9, 30954.0], [22.0, 30957.0], [22.1, 30957.0], [22.2, 30962.0], [22.3, 30973.0], [22.4, 30973.0], [22.5, 30974.0], [22.6, 30979.0], [22.7, 30981.0], [22.8, 30981.0], [22.9, 30983.0], [23.0, 30986.0], [23.1, 31009.0], [23.2, 31009.0], [23.3, 31011.0], [23.4, 31012.0], [23.5, 31015.0], [23.6, 31015.0], [23.7, 31016.0], [23.8, 31018.0], [23.9, 31018.0], [24.0, 31023.0], [24.1, 31029.0], [24.2, 31030.0], [24.3, 31030.0], [24.4, 31038.0], [24.5, 31039.0], [24.6, 31039.0], [24.7, 31039.0], [24.8, 31040.0], [24.9, 31041.0], [25.0, 31041.0], [25.1, 31042.0], [25.2, 31044.0], [25.3, 31047.0], [25.4, 31047.0], [25.5, 31047.0], [25.6, 31052.0], [25.7, 31052.0], [25.8, 31052.0], [25.9, 31053.0], [26.0, 31054.0], [26.1, 31056.0], [26.2, 31056.0], [26.3, 31056.0], [26.4, 31057.0], [26.5, 31057.0], [26.6, 31058.0], [26.7, 31058.0], [26.8, 31059.0], [26.9, 31059.0], [27.0, 31059.0], [27.1, 31059.0], [27.2, 31060.0], [27.3, 31060.0], [27.4, 31060.0], [27.5, 31060.0], [27.6, 31061.0], [27.7, 31061.0], [27.8, 31061.0], [27.9, 31065.0], [28.0, 31065.0], [28.1, 31066.0], [28.2, 31066.0], [28.3, 31067.0], [28.4, 31067.0], [28.5, 31068.0], [28.6, 31069.0], [28.7, 31070.0], [28.8, 31070.0], [28.9, 31070.0], [29.0, 31071.0], [29.1, 31072.0], [29.2, 31072.0], [29.3, 31075.0], [29.4, 31077.0], [29.5, 31077.0], [29.6, 31081.0], [29.7, 31083.0], [29.8, 31083.0], [29.9, 31083.0], [30.0, 31083.0], [30.1, 31084.0], [30.2, 31088.0], [30.3, 31088.0], [30.4, 31089.0], [30.5, 31090.0], [30.6, 31090.0], [30.7, 31093.0], [30.8, 31094.0], [30.9, 31096.0], [31.0, 31096.0], [31.1, 31096.0], [31.2, 31099.0], [31.3, 31099.0], [31.4, 31099.0], [31.5, 31100.0], [31.6, 31100.0], [31.7, 31100.0], [31.8, 31100.0], [31.9, 31103.0], [32.0, 31112.0], [32.1, 31112.0], [32.2, 31118.0], [32.3, 31128.0], [32.4, 31130.0], [32.5, 31130.0], [32.6, 31131.0], [32.7, 31131.0], [32.8, 31132.0], [32.9, 31132.0], [33.0, 31135.0], [33.1, 31137.0], [33.2, 31138.0], [33.3, 31138.0], [33.4, 31139.0], [33.5, 31139.0], [33.6, 31139.0], [33.7, 31140.0], [33.8, 31142.0], [33.9, 31142.0], [34.0, 31142.0], [34.1, 31147.0], [34.2, 31147.0], [34.3, 31149.0], [34.4, 31149.0], [34.5, 31153.0], [34.6, 31153.0], [34.7, 31161.0], [34.8, 31161.0], [34.9, 31163.0], [35.0, 31164.0], [35.1, 31164.0], [35.2, 31165.0], [35.3, 31169.0], [35.4, 31169.0], [35.5, 31169.0], [35.6, 31169.0], [35.7, 31169.0], [35.8, 31170.0], [35.9, 31170.0], [36.0, 31170.0], [36.1, 31170.0], [36.2, 31170.0], [36.3, 31171.0], [36.4, 31171.0], [36.5, 31171.0], [36.6, 31171.0], [36.7, 31173.0], [36.8, 31174.0], [36.9, 31175.0], [37.0, 31175.0], [37.1, 31175.0], [37.2, 31176.0], [37.3, 31176.0], [37.4, 31176.0], [37.5, 31176.0], [37.6, 31177.0], [37.7, 31177.0], [37.8, 31177.0], [37.9, 31180.0], [38.0, 31182.0], [38.1, 31182.0], [38.2, 31182.0], [38.3, 31182.0], [38.4, 31183.0], [38.5, 31183.0], [38.6, 31184.0], [38.7, 31185.0], [38.8, 31188.0], [38.9, 31188.0], [39.0, 31188.0], [39.1, 31190.0], [39.2, 31190.0], [39.3, 31190.0], [39.4, 31192.0], [39.5, 31192.0], [39.6, 31192.0], [39.7, 31193.0], [39.8, 31194.0], [39.9, 31195.0], [40.0, 31195.0], [40.1, 31195.0], [40.2, 31199.0], [40.3, 31199.0], [40.4, 31200.0], [40.5, 31201.0], [40.6, 31202.0], [40.7, 31202.0], [40.8, 31204.0], [40.9, 31205.0], [41.0, 31205.0], [41.1, 31205.0], [41.2, 31205.0], [41.3, 31207.0], [41.4, 31208.0], [41.5, 31208.0], [41.6, 31208.0], [41.7, 31209.0], [41.8, 31209.0], [41.9, 31210.0], [42.0, 31210.0], [42.1, 31213.0], [42.2, 31213.0], [42.3, 31215.0], [42.4, 31215.0], [42.5, 31215.0], [42.6, 31215.0], [42.7, 31216.0], [42.8, 31216.0], [42.9, 31216.0], [43.0, 31216.0], [43.1, 31216.0], [43.2, 31217.0], [43.3, 31217.0], [43.4, 31217.0], [43.5, 31219.0], [43.6, 31219.0], [43.7, 31219.0], [43.8, 31220.0], [43.9, 31221.0], [44.0, 31221.0], [44.1, 31221.0], [44.2, 31222.0], [44.3, 31223.0], [44.4, 31223.0], [44.5, 31223.0], [44.6, 31223.0], [44.7, 31225.0], [44.8, 31225.0], [44.9, 31228.0], [45.0, 31229.0], [45.1, 31231.0], [45.2, 31231.0], [45.3, 31232.0], [45.4, 31232.0], [45.5, 31233.0], [45.6, 31233.0], [45.7, 31235.0], [45.8, 31237.0], [45.9, 31237.0], [46.0, 31237.0], [46.1, 31238.0], [46.2, 31239.0], [46.3, 31239.0], [46.4, 31240.0], [46.5, 31242.0], [46.6, 31242.0], [46.7, 31242.0], [46.8, 31243.0], [46.9, 31245.0], [47.0, 31245.0], [47.1, 31245.0], [47.2, 31245.0], [47.3, 31245.0], [47.4, 31245.0], [47.5, 31246.0], [47.6, 31248.0], [47.7, 31248.0], [47.8, 31248.0], [47.9, 31248.0], [48.0, 31250.0], [48.1, 31250.0], [48.2, 31250.0], [48.3, 31250.0], [48.4, 31250.0], [48.5, 31251.0], [48.6, 31251.0], [48.7, 31252.0], [48.8, 31253.0], [48.9, 31253.0], [49.0, 31253.0], [49.1, 31254.0], [49.2, 31256.0], [49.3, 31256.0], [49.4, 31257.0], [49.5, 31259.0], [49.6, 31260.0], [49.7, 31260.0], [49.8, 31261.0], [49.9, 31262.0], [50.0, 31263.0], [50.1, 31263.0], [50.2, 31263.0], [50.3, 31264.0], [50.4, 31264.0], [50.5, 31264.0], [50.6, 31265.0], [50.7, 31266.0], [50.8, 31266.0], [50.9, 31266.0], [51.0, 31267.0], [51.1, 31268.0], [51.2, 31268.0], [51.3, 31268.0], [51.4, 31269.0], [51.5, 31269.0], [51.6, 31271.0], [51.7, 31274.0], [51.8, 31275.0], [51.9, 31275.0], [52.0, 31275.0], [52.1, 31275.0], [52.2, 31276.0], [52.3, 31276.0], [52.4, 31276.0], [52.5, 31277.0], [52.6, 31278.0], [52.7, 31278.0], [52.8, 31278.0], [52.9, 31279.0], [53.0, 31279.0], [53.1, 31279.0], [53.2, 31280.0], [53.3, 31280.0], [53.4, 31280.0], [53.5, 31281.0], [53.6, 31281.0], [53.7, 31283.0], [53.8, 31283.0], [53.9, 31283.0], [54.0, 31286.0], [54.1, 31288.0], [54.2, 31288.0], [54.3, 31288.0], [54.4, 31288.0], [54.5, 31288.0], [54.6, 31288.0], [54.7, 31289.0], [54.8, 31289.0], [54.9, 31289.0], [55.0, 31291.0], [55.1, 31292.0], [55.2, 31293.0], [55.3, 31293.0], [55.4, 31296.0], [55.5, 31297.0], [55.6, 31297.0], [55.7, 31298.0], [55.8, 31298.0], [55.9, 31301.0], [56.0, 31301.0], [56.1, 31302.0], [56.2, 31302.0], [56.3, 31303.0], [56.4, 31303.0], [56.5, 31304.0], [56.6, 31305.0], [56.7, 31307.0], [56.8, 31307.0], [56.9, 31307.0], [57.0, 31307.0], [57.1, 31307.0], [57.2, 31309.0], [57.3, 31311.0], [57.4, 31312.0], [57.5, 31312.0], [57.6, 31312.0], [57.7, 31313.0], [57.8, 31314.0], [57.9, 31314.0], [58.0, 31314.0], [58.1, 31315.0], [58.2, 31316.0], [58.3, 31316.0], [58.4, 31316.0], [58.5, 31321.0], [58.6, 31321.0], [58.7, 31322.0], [58.8, 31322.0], [58.9, 31324.0], [59.0, 31324.0], [59.1, 31324.0], [59.2, 31325.0], [59.3, 31325.0], [59.4, 31325.0], [59.5, 31328.0], [59.6, 31328.0], [59.7, 31332.0], [59.8, 31332.0], [59.9, 31332.0], [60.0, 31335.0], [60.1, 31335.0], [60.2, 31336.0], [60.3, 31341.0], [60.4, 31346.0], [60.5, 31346.0], [60.6, 31347.0], [60.7, 31348.0], [60.8, 31349.0], [60.9, 31349.0], [61.0, 31381.0], [61.1, 31390.0], [61.2, 31390.0], [61.3, 31395.0], [61.4, 31397.0], [61.5, 31402.0], [61.6, 31402.0], [61.7, 31404.0], [61.8, 31404.0], [61.9, 31410.0], [62.0, 31410.0], [62.1, 31410.0], [62.2, 31411.0], [62.3, 31412.0], [62.4, 31412.0], [62.5, 31413.0], [62.6, 31414.0], [62.7, 31414.0], [62.8, 31415.0], [62.9, 31416.0], [63.0, 31417.0], [63.1, 31417.0], [63.2, 31418.0], [63.3, 31419.0], [63.4, 31419.0], [63.5, 31419.0], [63.6, 31419.0], [63.7, 31420.0], [63.8, 31420.0], [63.9, 31420.0], [64.0, 31421.0], [64.1, 31423.0], [64.2, 31423.0], [64.3, 31424.0], [64.4, 31426.0], [64.5, 31428.0], [64.6, 31428.0], [64.7, 31431.0], [64.8, 31433.0], [64.9, 31433.0], [65.0, 31433.0], [65.1, 31435.0], [65.2, 31435.0], [65.3, 31435.0], [65.4, 31441.0], [65.5, 31442.0], [65.6, 31442.0], [65.7, 31442.0], [65.8, 31444.0], [65.9, 31461.0], [66.0, 31462.0], [66.1, 31462.0], [66.2, 31463.0], [66.3, 31463.0], [66.4, 31465.0], [66.5, 31465.0], [66.6, 31466.0], [66.7, 31466.0], [66.8, 31466.0], [66.9, 31474.0], [67.0, 31477.0], [67.1, 31478.0], [67.2, 31478.0], [67.3, 31478.0], [67.4, 31481.0], [67.5, 31482.0], [67.6, 31482.0], [67.7, 31482.0], [67.8, 31482.0], [67.9, 31484.0], [68.0, 31484.0], [68.1, 31487.0], [68.2, 31488.0], [68.3, 31488.0], [68.4, 31488.0], [68.5, 31488.0], [68.6, 31490.0], [68.7, 31490.0], [68.8, 31491.0], [68.9, 31492.0], [69.0, 31492.0], [69.1, 31492.0], [69.2, 31493.0], [69.3, 31494.0], [69.4, 31494.0], [69.5, 31494.0], [69.6, 31495.0], [69.7, 31495.0], [69.8, 31495.0], [69.9, 31496.0], [70.0, 31496.0], [70.1, 31496.0], [70.2, 31496.0], [70.3, 31496.0], [70.4, 31497.0], [70.5, 31498.0], [70.6, 31498.0], [70.7, 31500.0], [70.8, 31500.0], [70.9, 31500.0], [71.0, 31501.0], [71.1, 31501.0], [71.2, 31505.0], [71.3, 31505.0], [71.4, 31506.0], [71.5, 31506.0], [71.6, 31506.0], [71.7, 31506.0], [71.8, 31506.0], [71.9, 31507.0], [72.0, 31507.0], [72.1, 31507.0], [72.2, 31507.0], [72.3, 31508.0], [72.4, 31508.0], [72.5, 31508.0], [72.6, 31509.0], [72.7, 31509.0], [72.8, 31509.0], [72.9, 31510.0], [73.0, 31510.0], [73.1, 31510.0], [73.2, 31510.0], [73.3, 31511.0], [73.4, 31511.0], [73.5, 31513.0], [73.6, 31513.0], [73.7, 31513.0], [73.8, 31513.0], [73.9, 31513.0], [74.0, 31514.0], [74.1, 31515.0], [74.2, 31516.0], [74.3, 31516.0], [74.4, 31516.0], [74.5, 31516.0], [74.6, 31517.0], [74.7, 31517.0], [74.8, 31518.0], [74.9, 31518.0], [75.0, 31518.0], [75.1, 31518.0], [75.2, 31520.0], [75.3, 31520.0], [75.4, 31520.0], [75.5, 31521.0], [75.6, 31522.0], [75.7, 31523.0], [75.8, 31523.0], [75.9, 31523.0], [76.0, 31523.0], [76.1, 31523.0], [76.2, 31523.0], [76.3, 31525.0], [76.4, 31526.0], [76.5, 31526.0], [76.6, 31527.0], [76.7, 31528.0], [76.8, 31528.0], [76.9, 31528.0], [77.0, 31529.0], [77.1, 31529.0], [77.2, 31530.0], [77.3, 31530.0], [77.4, 31534.0], [77.5, 31536.0], [77.6, 31537.0], [77.7, 31537.0], [77.8, 31538.0], [77.9, 31538.0], [78.0, 31538.0], [78.1, 31539.0], [78.2, 31551.0], [78.3, 31554.0], [78.4, 31554.0], [78.5, 31584.0], [78.6, 31585.0], [78.7, 31585.0], [78.8, 31585.0], [78.9, 31586.0], [79.0, 31588.0], [79.1, 31589.0], [79.2, 31589.0], [79.3, 31591.0], [79.4, 31591.0], [79.5, 31591.0], [79.6, 31592.0], [79.7, 31594.0], [79.8, 31600.0], [79.9, 31600.0], [80.0, 31603.0], [80.1, 31603.0], [80.2, 31603.0], [80.3, 31603.0], [80.4, 31606.0], [80.5, 31613.0], [80.6, 31613.0], [80.7, 31613.0], [80.8, 31615.0], [80.9, 31616.0], [81.0, 31616.0], [81.1, 31619.0], [81.2, 31621.0], [81.3, 31625.0], [81.4, 31625.0], [81.5, 31628.0], [81.6, 31641.0], [81.7, 31642.0], [81.8, 31642.0], [81.9, 31642.0], [82.0, 31643.0], [82.1, 31643.0], [82.2, 31647.0], [82.3, 31647.0], [82.4, 31651.0], [82.5, 31651.0], [82.6, 31652.0], [82.7, 31655.0], [82.8, 31657.0], [82.9, 31657.0], [83.0, 31665.0], [83.1, 31669.0], [83.2, 31677.0], [83.3, 31677.0], [83.4, 31679.0], [83.5, 31688.0], [83.6, 31688.0], [83.7, 31696.0], [83.8, 31698.0], [83.9, 31705.0], [84.0, 31705.0], [84.1, 31708.0], [84.2, 31709.0], [84.3, 31709.0], [84.4, 31709.0], [84.5, 31710.0], [84.6, 31710.0], [84.7, 31710.0], [84.8, 31710.0], [84.9, 31711.0], [85.0, 31712.0], [85.1, 31712.0], [85.2, 31712.0], [85.3, 31712.0], [85.4, 31713.0], [85.5, 31713.0], [85.6, 31713.0], [85.7, 31713.0], [85.8, 31713.0], [85.9, 31713.0], [86.0, 31714.0], [86.1, 31715.0], [86.2, 31715.0], [86.3, 31715.0], [86.4, 31715.0], [86.5, 31715.0], [86.6, 31715.0], [86.7, 31715.0], [86.8, 31715.0], [86.9, 31716.0], [87.0, 31716.0], [87.1, 31717.0], [87.2, 31718.0], [87.3, 31719.0], [87.4, 31719.0], [87.5, 31720.0], [87.6, 31721.0], [87.7, 31721.0], [87.8, 31721.0], [87.9, 31723.0], [88.0, 31724.0], [88.1, 31724.0], [88.2, 31727.0], [88.3, 31727.0], [88.4, 31727.0], [88.5, 31727.0], [88.6, 31728.0], [88.7, 31728.0], [88.8, 31729.0], [88.9, 31729.0], [89.0, 31732.0], [89.1, 31734.0], [89.2, 31734.0], [89.3, 31734.0], [89.4, 31735.0], [89.5, 31735.0], [89.6, 31735.0], [89.7, 31737.0], [89.8, 31737.0], [89.9, 31737.0], [90.0, 31737.0], [90.1, 31737.0], [90.2, 31737.0], [90.3, 31737.0], [90.4, 31738.0], [90.5, 31738.0], [90.6, 31739.0], [90.7, 31739.0], [90.8, 31739.0], [90.9, 31739.0], [91.0, 31740.0], [91.1, 31740.0], [91.2, 31740.0], [91.3, 31741.0], [91.4, 31741.0], [91.5, 31741.0], [91.6, 31741.0], [91.7, 31742.0], [91.8, 31742.0], [91.9, 31742.0], [92.0, 31742.0], [92.1, 31742.0], [92.2, 31742.0], [92.3, 31742.0], [92.4, 31743.0], [92.5, 31743.0], [92.6, 31743.0], [92.7, 31745.0], [92.8, 31745.0], [92.9, 31746.0], [93.0, 31746.0], [93.1, 31746.0], [93.2, 31747.0], [93.3, 31747.0], [93.4, 31747.0], [93.5, 31747.0], [93.6, 31749.0], [93.7, 31749.0], [93.8, 31749.0], [93.9, 31749.0], [94.0, 31749.0], [94.1, 31749.0], [94.2, 31750.0], [94.3, 31751.0], [94.4, 31751.0], [94.5, 31751.0], [94.6, 31751.0], [94.7, 31751.0], [94.8, 31751.0], [94.9, 31752.0], [95.0, 31752.0], [95.1, 31754.0], [95.2, 31754.0], [95.3, 31755.0], [95.4, 31756.0], [95.5, 31757.0], [95.6, 31757.0], [95.7, 31758.0], [95.8, 31758.0], [95.9, 31758.0], [96.0, 31759.0], [96.1, 31760.0], [96.2, 31760.0], [96.3, 31760.0], [96.4, 31760.0], [96.5, 31762.0], [96.6, 31766.0], [96.7, 31766.0], [96.8, 31769.0], [96.9, 31774.0], [97.0, 31775.0], [97.1, 31775.0], [97.2, 31777.0], [97.3, 31781.0], [97.4, 31781.0], [97.5, 31782.0], [97.6, 31784.0], [97.7, 31785.0], [97.8, 31785.0], [97.9, 31788.0], [98.0, 31789.0], [98.1, 31795.0], [98.2, 31795.0], [98.3, 31798.0], [98.4, 31798.0], [98.5, 31798.0], [98.6, 31798.0], [98.7, 31802.0], [98.8, 31809.0], [98.9, 31809.0], [99.0, 31819.0], [99.1, 31820.0], [99.2, 31823.0], [99.3, 31823.0], [99.4, 31837.0], [99.5, 31845.0], [99.6, 31868.0], [99.7, 31868.0], [99.8, 31951.0], [99.9, 31955.0], [100.0, 31955.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 114.0, "series": [{"data": [[600.0, 1.0], [11900.0, 5.0], [12000.0, 3.0], [11800.0, 2.0], [12600.0, 37.0], [12500.0, 8.0], [13300.0, 80.0], [13200.0, 87.0], [13100.0, 1.0], [13700.0, 49.0], [13600.0, 84.0], [13500.0, 65.0], [13400.0, 66.0], [14100.0, 65.0], [14000.0, 60.0], [13900.0, 75.0], [14300.0, 4.0], [14400.0, 16.0], [15200.0, 7.0], [16600.0, 16.0], [7600.0, 1.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[2100.0, 3.0], [600.0, 67.0], [700.0, 60.0], [800.0, 76.0], [900.0, 52.0], [4000.0, 4.0], [1000.0, 63.0], [4300.0, 43.0], [4200.0, 2.0], [16500.0, 1.0], [1100.0, 66.0], [1200.0, 78.0], [18500.0, 2.0], [1300.0, 80.0], [20700.0, 1.0], [1400.0, 68.0], [6000.0, 5.0], [6100.0, 2.0], [1500.0, 41.0], [400.0, 12.0], [28500.0, 1.0], [500.0, 4.0], [2000.0, 5.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[9600.0, 31.0], [9700.0, 28.0], [10200.0, 21.0], [10100.0, 13.0], [10000.0, 39.0], [9800.0, 29.0], [9900.0, 20.0], [10500.0, 30.0], [10400.0, 45.0], [10300.0, 15.0], [15700.0, 39.0], [15500.0, 6.0], [15600.0, 9.0], [15800.0, 22.0], [15900.0, 6.0], [16300.0, 44.0], [16000.0, 10.0], [16200.0, 70.0], [16100.0, 16.0], [16500.0, 93.0], [16400.0, 64.0], [17000.0, 83.0], [16900.0, 38.0], [16700.0, 91.0], [16800.0, 27.0], [16600.0, 32.0], [17100.0, 9.0], [1200.0, 1.0], [1400.0, 2.0], [2400.0, 21.0], [2500.0, 20.0], [2600.0, 2.0], [2700.0, 10.0], [2800.0, 6.0], [3000.0, 4.0], [6100.0, 2.0], [6200.0, 1.0], [6800.0, 1.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[19400.0, 34.0], [19300.0, 3.0], [19700.0, 3.0], [19800.0, 14.0], [19900.0, 1.0], [20000.0, 3.0], [19500.0, 3.0], [30500.0, 40.0], [30300.0, 6.0], [30400.0, 11.0], [30700.0, 4.0], [30600.0, 12.0], [30900.0, 24.0], [31100.0, 65.0], [31300.0, 41.0], [31200.0, 114.0], [31000.0, 61.0], [30800.0, 11.0], [31600.0, 30.0], [31700.0, 108.0], [31500.0, 67.0], [31400.0, 67.0], [31800.0, 8.0], [31900.0, 2.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 31900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 8.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 1827.0, "series": [{"data": [[0.0, 12.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 621.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 1827.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [[3.0, 8.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 605.9159226190478, "minX": 1.60773102E12, "maxY": 998.0150862068971, "series": [{"data": [[1.60773108E12, 605.9159226190478], [1.60773102E12, 998.0150862068971]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773108E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 647.0, "minX": 269.0, "maxY": 31868.0, "series": [{"data": [[271.0, 11954.0], [269.0, 647.0], [275.0, 11988.0], [286.0, 13219.0], [284.0, 13192.0], [283.0, 13221.5], [281.0, 13216.0], [280.0, 13214.0], [279.0, 11994.0], [278.0, 11995.0], [277.0, 11993.5], [274.0, 12002.0], [273.0, 11954.5], [302.0, 15231.5], [303.0, 13338.0], [300.0, 13822.0], [299.0, 13430.0], [297.0, 13231.0], [296.0, 14400.5], [294.0, 13842.5], [292.0, 13221.0], [291.0, 13218.5], [289.0, 13228.0], [288.0, 13225.5], [319.0, 14405.0], [317.0, 13821.0], [315.0, 13623.666666666666], [314.0, 13227.5], [310.0, 13278.0], [309.0, 14242.75], [308.0, 14014.0], [307.0, 15230.0], [333.0, 13213.0], [330.0, 14408.666666666666], [327.0, 13813.5], [326.0, 14399.0], [325.0, 14420.0], [323.0, 14421.0], [321.0, 14424.0], [351.0, 13366.0], [347.0, 13232.0], [346.0, 13624.333333333334], [343.0, 13226.0], [342.0, 13212.5], [341.0, 15267.0], [339.0, 13911.0], [336.0, 13515.75], [367.0, 13248.0], [364.0, 13239.333333333334], [362.0, 13233.0], [361.0, 13253.0], [359.0, 13310.75], [355.0, 13232.0], [352.0, 13232.0], [381.0, 13285.0], [382.0, 13280.0], [380.0, 13330.0], [378.0, 13263.5], [376.0, 13263.666666666666], [374.0, 13254.0], [372.0, 13272.0], [371.0, 13311.666666666666], [368.0, 13285.0], [396.0, 13280.333333333334], [398.0, 13280.5], [399.0, 13284.0], [397.0, 13273.0], [394.0, 13282.0], [393.0, 13263.0], [389.0, 13267.75], [388.0, 13281.0], [387.0, 13258.0], [386.0, 13270.0], [414.0, 13380.8], [413.0, 13330.0], [411.0, 13308.0], [408.0, 13321.0], [404.0, 13315.75], [403.0, 13277.0], [400.0, 13264.0], [426.0, 13349.0], [424.0, 13329.0], [422.0, 13334.666666666666], [420.0, 13338.0], [419.0, 13319.0], [416.0, 13315.5], [447.0, 13379.0], [446.0, 13536.0], [443.0, 13379.6], [441.0, 13372.0], [437.0, 13368.5], [436.0, 13368.0], [434.0, 13375.0], [433.0, 13364.714285714286], [461.0, 13363.666666666666], [458.0, 13355.0], [457.0, 13445.0], [456.0, 13602.0], [452.0, 13419.0], [451.0, 13394.0], [450.0, 13439.0], [449.0, 13737.0], [448.0, 13578.0], [478.0, 13392.0], [477.0, 13386.0], [473.0, 13383.0], [470.0, 13376.0], [468.0, 13372.0], [464.0, 13366.5], [494.0, 13396.0], [495.0, 13415.0], [493.0, 13400.0], [490.0, 13397.8], [489.0, 13401.0], [484.0, 13403.0], [483.0, 13405.0], [482.0, 13383.0], [480.0, 13409.285714285714], [511.0, 13439.0], [510.0, 13616.0], [508.0, 13425.5], [504.0, 13436.666666666666], [503.0, 13439.0], [500.0, 13416.0], [499.0, 13415.5], [497.0, 13403.0], [541.0, 13470.0], [543.0, 13476.5], [529.0, 13468.5], [528.0, 13497.0], [540.0, 13458.0], [539.0, 13463.0], [538.0, 13486.0], [536.0, 13483.5], [527.0, 13464.0], [517.0, 13453.5], [513.0, 13444.0], [512.0, 13443.0], [524.0, 13456.75], [534.0, 13494.0], [533.0, 13491.0], [532.0, 13465.0], [531.0, 13496.0], [573.0, 13558.0], [575.0, 13539.0], [561.0, 13528.0], [560.0, 13526.0], [572.0, 13531.0], [571.0, 13537.0], [570.0, 13530.0], [569.0, 13519.0], [568.0, 13518.5], [551.0, 13485.0], [550.0, 13495.0], [547.0, 13471.0], [546.0, 13487.0], [559.0, 13508.333333333334], [555.0, 13554.0], [567.0, 13547.5], [566.0, 13525.0], [606.0, 13612.5], [607.0, 13569.0], [605.0, 13574.0], [603.0, 13579.0], [601.0, 13565.5], [581.0, 13547.0], [580.0, 13547.0], [579.0, 13507.0], [577.0, 13545.0], [576.0, 13540.0], [591.0, 13581.0], [590.0, 13579.0], [589.0, 13588.0], [588.0, 13544.0], [585.0, 13518.0], [584.0, 13530.333333333334], [599.0, 13601.5], [596.0, 13547.0], [595.0, 13561.0], [593.0, 13613.0], [638.0, 13662.0], [639.0, 13622.0], [624.0, 13599.75], [628.0, 13596.5], [626.0, 13692.5], [637.0, 13609.0], [636.0, 13617.5], [634.0, 13621.0], [633.0, 13602.0], [632.0, 13618.0], [615.0, 13596.0], [614.0, 13574.0], [613.0, 13631.0], [611.0, 13583.0], [609.0, 13594.0], [608.0, 13600.0], [621.0, 13593.0], [619.0, 13620.333333333334], [617.0, 13602.5], [616.0, 13581.0], [631.0, 13616.0], [630.0, 13616.5], [670.0, 13655.0], [671.0, 13706.0], [668.0, 13698.0], [666.0, 13637.5], [664.0, 13648.0], [646.0, 13645.0], [645.0, 13626.0], [644.0, 13629.0], [643.0, 13662.0], [642.0, 13637.0], [641.0, 13655.0], [660.0, 13633.0], [657.0, 13628.0], [656.0, 13625.0], [655.0, 13635.2], [650.0, 13637.5], [649.0, 13636.5], [690.0, 13667.0], [703.0, 13685.0], [702.0, 13709.0], [698.0, 13706.0], [697.0, 13713.75], [686.0, 13648.0], [675.0, 13657.0], [674.0, 13684.0], [679.0, 13692.666666666666], [676.0, 13695.0], [685.0, 13644.0], [684.0, 13677.0], [683.0, 13687.5], [681.0, 13745.0], [695.0, 13679.0], [694.0, 13677.0], [692.0, 13702.0], [689.0, 13700.0], [688.0, 13645.0], [734.0, 13740.5], [735.0, 13744.0], [732.0, 13743.0], [731.0, 13739.5], [729.0, 13738.0], [711.0, 13716.0], [710.0, 13717.0], [709.0, 13686.0], [706.0, 13731.0], [705.0, 13708.8], [718.0, 13723.5], [716.0, 13749.0], [715.0, 13726.0], [713.0, 13719.0], [727.0, 13740.0], [725.0, 13737.0], [724.0, 13737.5], [722.0, 13730.0], [766.0, 13913.5], [767.0, 13951.0], [765.0, 13917.0], [762.0, 13917.0], [761.0, 13948.5], [760.0, 13942.666666666666], [750.0, 13942.0], [739.0, 13746.0], [738.0, 13746.0], [743.0, 13964.0], [741.0, 13924.5], [749.0, 13922.0], [746.0, 13912.0], [744.0, 13912.5], [758.0, 13931.5], [756.0, 13948.0], [754.0, 13959.25], [794.0, 13954.5], [798.0, 13971.0], [799.0, 13949.666666666666], [797.0, 13969.0], [793.0, 13980.333333333334], [792.0, 13957.0], [788.0, 13949.6], [784.0, 13954.0], [782.0, 13959.0], [771.0, 14154.0], [770.0, 13953.75], [781.0, 13946.75], [778.0, 13981.25], [777.0, 13949.0], [818.0, 14056.0], [830.0, 13995.0], [831.0, 13994.0], [817.0, 14000.5], [828.0, 14054.0], [826.0, 14045.0], [824.0, 13985.0], [807.0, 13977.25], [803.0, 13978.25], [814.0, 13997.2], [810.0, 13993.0], [808.0, 14068.0], [823.0, 14002.0], [822.0, 13984.0], [821.0, 13979.5], [849.0, 14061.0], [862.0, 14062.0], [863.0, 14061.0], [848.0, 14062.0], [861.0, 14062.0], [860.0, 14073.5], [859.0, 14061.0], [839.0, 14042.0], [837.0, 14040.666666666666], [836.0, 14034.0], [832.0, 14032.2], [845.0, 14054.5], [844.0, 14059.5], [841.0, 14064.0], [840.0, 14037.5], [855.0, 14060.666666666666], [854.0, 14062.0], [851.0, 14060.0], [882.0, 14099.0], [895.0, 14144.5], [893.0, 14122.0], [891.0, 14154.0], [890.0, 14127.666666666666], [879.0, 14098.666666666666], [865.0, 14069.0], [864.0, 14064.5], [868.0, 14075.0], [866.0, 14141.0], [878.0, 14103.0], [877.0, 14140.0], [876.0, 14092.0], [874.0, 14095.0], [872.0, 14099.75], [887.0, 14112.333333333334], [884.0, 14110.0], [883.0, 14103.5], [881.0, 14108.0], [926.0, 14150.0], [927.0, 14150.5], [923.0, 14150.0], [922.0, 14162.0], [921.0, 14151.0], [920.0, 14149.0], [911.0, 14150.0], [899.0, 14125.0], [898.0, 14127.0], [902.0, 14123.0], [900.0, 14117.0], [910.0, 14132.0], [909.0, 14142.0], [908.0, 14156.0], [905.0, 14143.0], [904.0, 14154.0], [919.0, 14150.0], [916.0, 14149.333333333334], [913.0, 14152.5], [946.0, 12597.25], [959.0, 12614.0], [956.0, 12617.0], [955.0, 12596.666666666666], [952.0, 12602.5], [941.0, 12605.5], [930.0, 14150.5], [928.0, 14150.0], [935.0, 14150.0], [932.0, 14150.0], [939.0, 7608.0], [938.0, 14158.0], [937.0, 14159.0], [936.0, 14149.0], [950.0, 12609.0], [948.0, 12588.0], [947.0, 12592.0], [944.0, 12587.0], [987.0, 16613.0], [988.0, 16619.0], [986.0, 16610.0], [984.0, 12633.0], [982.0, 12628.5], [980.0, 12629.5], [978.0, 12619.0], [977.0, 12621.0], [975.0, 12626.0], [960.0, 12606.0], [963.0, 12612.5], [961.0, 12610.0], [966.0, 12613.0], [965.0, 12634.5], [974.0, 12616.0], [973.0, 12613.0], [972.0, 12621.0], [971.0, 12615.0], [970.0, 12625.0], [1000.0, 16612.75], [996.0, 16606.75], [992.0, 16610.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[635.9986338797805, 13643.527322404378]], "isOverall": false, "label": "GET Home-Aggregated", "isController": false}, {"data": [[746.0, 28572.0], [939.0, 19313.0], [1000.0, 1374.0614754098353]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[999.40625, 1484.1358695652168]], "isOverall": false, "label": "POST Login-Aggregated", "isController": false}, {"data": [[1000.0, 13820.246999999998]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1000.0, 13820.246999999998]], "isOverall": false, "label": "GET Login-Aggregated", "isController": false}, {"data": [[271.0, 31626.5], [269.0, 31868.0], [275.0, 31264.0], [286.0, 31415.0], [284.0, 31802.0], [283.0, 31173.5], [281.0, 31521.0], [280.0, 31789.0], [279.0, 31254.0], [278.0, 31264.0], [277.0, 31261.5], [274.0, 31263.0], [273.0, 31629.0], [302.0, 31088.0], [303.0, 31760.0], [300.0, 31625.5], [299.0, 30953.0], [297.0, 31332.0], [296.0, 31204.0], [294.0, 31044.0], [292.0, 31346.0], [291.0, 31509.5], [289.0, 31314.0], [288.0, 31332.0], [319.0, 31646.0], [317.0, 31565.0], [315.0, 31444.0], [314.0, 31312.5], [310.0, 31237.0], [309.0, 31364.5], [308.0, 31823.0], [307.0, 31845.0], [333.0, 31517.0], [330.0, 31439.666666666668], [327.0, 31249.0], [326.0, 31677.0], [325.0, 31221.0], [323.0, 31342.333333333332], [321.0, 31710.0], [351.0, 31246.0], [347.0, 31518.0], [346.0, 31210.333333333332], [343.0, 31751.0], [342.0, 31637.0], [341.0, 30979.0], [339.0, 31145.333333333332], [336.0, 31352.0], [367.0, 31504.5], [364.0, 31194.0], [362.0, 31325.0], [361.0, 31288.0], [359.0, 31315.75], [355.0, 31339.666666666668], [352.0, 31406.666666666668], [381.0, 31208.0], [382.0, 31210.0], [380.0, 31363.0], [378.0, 31526.0], [376.0, 31258.333333333332], [374.0, 31507.0], [372.0, 31286.0], [371.0, 31246.333333333332], [368.0, 31361.0], [396.0, 31498.333333333332], [398.0, 31382.5], [399.0, 31139.0], [397.0, 31433.0], [394.0, 31507.0], [393.0, 31325.0], [389.0, 31600.0], [388.0, 31525.0], [387.0, 31431.0], [386.0, 31311.0], [414.0, 31323.0], [413.0, 31009.0], [411.0, 31576.0], [408.0, 31624.5], [404.0, 31207.0], [403.0, 31176.0], [400.0, 31142.0], [426.0, 31258.0], [424.0, 31458.5], [422.0, 31325.666666666668], [420.0, 31513.0], [419.0, 31292.5], [416.0, 30979.5], [447.0, 30913.0], [446.0, 31472.0], [443.0, 31283.8], [441.0, 31192.0], [437.0, 31182.0], [436.0, 31011.0], [434.0, 31205.0], [433.0, 31346.285714285714], [461.0, 31282.666666666668], [458.0, 31177.0], [457.0, 31788.0], [456.0, 31760.0], [452.0, 31303.0], [451.0, 31798.0], [450.0, 31513.0], [449.0, 31784.0], [448.0, 31419.0], [478.0, 31652.0], [477.0, 31379.0], [473.0, 31385.5], [470.0, 31131.333333333332], [468.0, 31386.0], [464.0, 31105.5], [494.0, 31516.0], [495.0, 31268.0], [493.0, 31535.0], [490.0, 31381.8], [489.0, 31665.0], [484.0, 31245.0], [483.0, 31246.0], [482.0, 31353.0], [480.0, 31488.0], [511.0, 31514.0], [510.0, 31410.0], [508.0, 31481.25], [504.0, 31729.333333333332], [503.0, 31647.0], [500.0, 31254.5], [499.0, 31338.5], [497.0, 31236.5], [541.0, 31279.0], [543.0, 31368.5], [529.0, 31403.0], [528.0, 31655.0], [540.0, 31239.0], [539.0, 31428.0], [538.0, 31781.0], [536.0, 31509.5], [527.0, 31644.666666666668], [517.0, 31540.5], [513.0, 31382.5], [512.0, 31298.0], [524.0, 31461.75], [534.0, 31642.0], [533.0, 31528.5], [532.0, 31614.0], [531.0, 31515.0], [573.0, 31516.5], [575.0, 31395.5], [561.0, 31412.0], [560.0, 31231.0], [572.0, 31253.0], [571.0, 31233.0], [570.0, 31413.0], [569.0, 31298.0], [568.0, 31613.0], [551.0, 31477.14285714286], [550.0, 31504.0], [547.0, 31501.0], [546.0, 31522.0], [559.0, 31321.333333333332], [555.0, 31589.0], [567.0, 31340.5], [566.0, 31288.0], [606.0, 31586.5], [607.0, 31268.0], [605.0, 31220.0], [603.0, 31436.0], [601.0, 31618.0], [581.0, 31355.0], [580.0, 31289.0], [579.0, 31754.0], [577.0, 31436.5], [576.0, 31417.0], [591.0, 31511.0], [590.0, 31777.0], [589.0, 31643.0], [588.0, 31334.333333333332], [585.0, 31529.0], [584.0, 31336.0], [599.0, 31507.5], [596.0, 31261.0], [595.0, 31275.0], [593.0, 31385.0], [638.0, 31746.0], [639.0, 31463.0], [624.0, 31343.0], [628.0, 31444.0], [626.0, 31634.5], [637.0, 31510.0], [636.0, 31474.5], [634.0, 31628.0], [633.0, 31240.0], [632.0, 31737.0], [615.0, 31238.0], [614.0, 31463.0], [613.0, 31758.0], [611.0, 31205.0], [609.0, 31420.0], [608.0, 31275.0], [621.0, 31327.5], [619.0, 31492.666666666668], [617.0, 31356.5], [616.0, 31482.0], [631.0, 31488.0], [630.0, 31239.5], [670.0, 31671.5], [671.0, 31750.0], [668.0, 31738.0], [666.0, 31581.5], [664.0, 31490.25], [646.0, 31501.0], [645.0, 31245.0], [644.0, 31756.0], [643.0, 31737.0], [642.0, 31497.5], [641.0, 31625.0], [660.0, 31544.666666666668], [657.0, 31404.0], [656.0, 31606.0], [655.0, 31418.8], [650.0, 31683.0], [649.0, 31537.0], [690.0, 31639.0], [703.0, 31712.0], [702.0, 31749.0], [698.0, 31585.0], [697.0, 31725.75], [686.0, 31737.0], [675.0, 31645.5], [674.0, 31591.0], [679.0, 31641.333333333332], [676.0, 31733.5], [685.0, 31742.0], [684.0, 31715.0], [683.0, 31653.5], [681.0, 31739.0], [695.0, 31715.0], [694.0, 31669.0], [692.0, 31641.0], [689.0, 31717.0], [688.0, 31743.0], [734.0, 31721.5], [735.0, 31688.0], [732.0, 31728.0], [731.0, 31671.5], [729.0, 31665.0], [711.0, 31758.0], [710.0, 31752.0], [709.0, 31725.666666666668], [706.0, 31741.0], [705.0, 31707.6], [718.0, 31670.5], [716.0, 31710.0], [715.0, 31721.0], [713.0, 31752.0], [727.0, 31281.5], [725.0, 31740.0], [724.0, 31721.5], [722.0, 31504.25], [766.0, 30923.5], [767.0, 31014.0], [765.0, 31070.0], [762.0, 31182.0], [761.0, 31007.5], [760.0, 30879.333333333332], [750.0, 30899.0], [739.0, 31696.0], [738.0, 31711.333333333332], [743.0, 31083.0], [741.0, 30847.0], [749.0, 30606.0], [746.0, 31122.5], [744.0, 30861.0], [758.0, 31162.5], [756.0, 31083.0], [754.0, 30992.25], [794.0, 30954.5], [798.0, 31058.0], [799.0, 30647.0], [797.0, 31182.0], [793.0, 30882.333333333332], [792.0, 31069.0], [788.0, 30916.0], [784.0, 30431.0], [782.0, 30748.5], [771.0, 31201.0], [770.0, 30782.0], [781.0, 30754.5], [778.0, 30941.75], [777.0, 31174.0], [818.0, 30817.5], [830.0, 31039.0], [831.0, 31067.0], [817.0, 30828.5], [828.0, 31058.0], [826.0, 30910.0], [824.0, 31070.0], [807.0, 31078.5], [803.0, 30959.5], [814.0, 31016.0], [810.0, 31056.0], [808.0, 31328.0], [823.0, 31169.0], [822.0, 31138.0], [821.0, 31141.5], [849.0, 31056.0], [862.0, 30912.0], [863.0, 31190.0], [848.0, 30815.5], [861.0, 31147.0], [860.0, 30479.0], [859.0, 31050.5], [839.0, 31041.0], [837.0, 31003.333333333332], [836.0, 31051.5], [832.0, 31128.2], [845.0, 30951.0], [844.0, 30861.5], [841.0, 30391.0], [840.0, 31078.0], [855.0, 30763.666666666668], [854.0, 31190.0], [851.0, 31039.0], [882.0, 31053.0], [895.0, 30460.5], [893.0, 30737.5], [891.0, 30533.0], [890.0, 30941.0], [879.0, 30936.0], [865.0, 31184.0], [864.0, 31107.5], [868.0, 31018.0], [866.0, 30411.0], [878.0, 31153.0], [877.0, 30410.0], [876.0, 31149.0], [874.0, 31129.0], [872.0, 30825.0], [887.0, 30918.666666666668], [884.0, 31052.0], [883.0, 31072.0], [881.0, 31040.0], [926.0, 30552.0], [927.0, 30536.5], [923.0, 30548.0], [922.0, 30511.0], [921.0, 30545.0], [920.0, 30524.0], [911.0, 30467.5], [899.0, 31102.0], [898.0, 30457.5], [902.0, 31253.0], [900.0, 31044.0], [910.0, 30796.0], [909.0, 30519.5], [908.0, 31252.0], [905.0, 30815.0], [904.0, 30551.0], [919.0, 30784.666666666668], [916.0, 30806.666666666668], [913.0, 30936.0], [946.0, 19442.5], [959.0, 19429.666666666668], [956.0, 19433.0], [955.0, 19486.333333333332], [952.0, 19398.5], [941.0, 19498.5], [930.0, 30564.5], [928.0, 30499.0], [935.0, 30394.0], [932.0, 30909.5], [939.0, 31132.0], [938.0, 30511.0], [937.0, 30530.5], [936.0, 31295.5], [950.0, 19425.0], [948.0, 19358.0], [947.0, 19455.0], [944.0, 19468.0], [987.0, 19888.0], [988.0, 19878.0], [986.0, 19884.5], [984.0, 19870.5], [982.0, 19425.5], [980.0, 19435.0], [978.0, 19450.0], [977.0, 19430.0], [975.0, 19439.0], [960.0, 20007.0], [963.0, 19429.5], [961.0, 19466.0], [966.0, 19464.0], [965.0, 19726.0], [974.0, 19480.0], [973.0, 19458.0], [972.0, 19436.0], [971.0, 19419.0], [970.0, 19576.5], [1000.0, 19826.75], [996.0, 19869.25], [992.0, 19830.75]], "isOverall": false, "label": "Login", "isController": true}, {"data": [[635.9986338797805, 30312.792349726755]], "isOverall": false, "label": "Login-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4455.333333333333, "minX": 1.60773102E12, "maxY": 149360.05, "series": [{"data": [[1.60773108E12, 149360.05], [1.60773102E12, 69876.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60773108E12, 4455.333333333333], [1.60773102E12, 19119.266666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773108E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1420.92234332425, "minX": 1.60773102E12, "maxY": 31287.433681073, "series": [{"data": [[1.60773108E12, 13641.874813710885], [1.60773102E12, 13661.70491803279]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60773108E12, 24683.5], [1.60773102E12, 1420.92234332425]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60773102E12, 13820.246999999998]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60773108E12, 31287.433681073], [1.60773102E12, 19591.737704918032]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773108E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1362.625340599454, "minX": 1.60773102E12, "maxY": 31081.09388971685, "series": [{"data": [[1.60773108E12, 13578.560357675105], [1.60773102E12, 13653.229508196722]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60773108E12, 24588.5], [1.60773102E12, 1362.625340599454]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60773102E12, 13737.619999999992]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60773108E12, 31081.09388971685], [1.60773102E12, 19524.606557377054]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773108E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.60773102E12, "maxY": 2344.393442622952, "series": [{"data": [[1.60773108E12, 4.3159463487332355], [1.60773102E12, 0.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60773108E12, 0.0], [1.60773102E12, 0.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60773102E12, 1912.4779999999996]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60773108E12, 2344.393442622952], [1.60773102E12, 682.2459016393444]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773108E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 439.0, "minX": 1.60773102E12, "maxY": 28572.0, "series": [{"data": [[1.60773108E12, 28572.0], [1.60773102E12, 18572.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60773108E12, 11994.0], [1.60773102E12, 527.7259462571146]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60773108E12, 11994.0], [1.60773102E12, 641.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60773108E12, 11994.0], [1.60773102E12, 640.4329731285571]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.60773108E12, 647.0], [1.60773102E12, 439.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60773108E12, 13624.5], [1.60773102E12, 9923.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773108E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1271.0, "minX": 1.0, "maxY": 20795.0, "series": [{"data": [[4.0, 5142.0], [271.0, 10078.0], [1.0, 20795.0], [68.0, 2497.5], [71.0, 12617.0], [660.0, 16534.0], [661.0, 13627.5], [11.0, 2771.5], [45.0, 4324.0], [3.0, 1482.0], [432.0, 1271.0], [226.0, 16253.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[661.0, 7608.0], [226.0, 6076.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 661.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 20715.0, "series": [{"data": [[4.0, 5098.0], [271.0, 9978.0], [1.0, 20715.0], [68.0, 2417.0], [71.0, 12617.0], [660.0, 16479.0], [661.0, 13565.0], [11.0, 2771.5], [45.0, 4324.0], [3.0, 1482.0], [432.0, 1271.0], [226.0, 16183.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[661.0, 0.0], [226.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 661.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.60773102E12, "maxY": 41.1, "series": [{"data": [[1.60773108E12, 0.03333333333333333], [1.60773102E12, 41.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773108E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.60773102E12, "maxY": 29.8, "series": [{"data": [[1.60773108E12, 11.2], [1.60773102E12, 29.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.60773108E12, 0.016666666666666666], [1.60773102E12, 0.11666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773108E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.60773102E12, "maxY": 16.666666666666668, "series": [{"data": [[1.60773108E12, 11.166666666666666], [1.60773102E12, 1.0166666666666666]], "isOverall": false, "label": "GET Home-success", "isController": false}, {"data": [[1.60773102E12, 16.666666666666668]], "isOverall": false, "label": "GET Login-success", "isController": false}, {"data": [[1.60773108E12, 0.016666666666666666]], "isOverall": false, "label": "GET Home-failure", "isController": false}, {"data": [[1.60773108E12, 0.03333333333333333], [1.60773102E12, 12.116666666666667]], "isOverall": false, "label": "POST Login-success", "isController": false}, {"data": [[1.60773102E12, 0.11666666666666667]], "isOverall": false, "label": "POST Login-failure", "isController": false}, {"data": [[1.60773108E12, 11.05], [1.60773102E12, 1.0166666666666666]], "isOverall": false, "label": "Login-success", "isController": true}, {"data": [[1.60773108E12, 0.13333333333333333]], "isOverall": false, "label": "Login-failure", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773108E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.60773102E12, "maxY": 30.816666666666666, "series": [{"data": [[1.60773108E12, 22.25], [1.60773102E12, 30.816666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.60773108E12, 0.15], [1.60773102E12, 0.11666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773108E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

