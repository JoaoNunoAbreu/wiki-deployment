/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 152.0, "minX": 0.0, "maxY": 8137.0, "series": [{"data": [[0.0, 2245.0], [0.1, 2245.0], [0.2, 2245.0], [0.3, 2245.0], [0.4, 2248.0], [0.5, 2248.0], [0.6, 2248.0], [0.7, 2248.0], [0.8, 2251.0], [0.9, 2251.0], [1.0, 2251.0], [1.1, 2251.0], [1.2, 2251.0], [1.3, 2252.0], [1.4, 2252.0], [1.5, 2252.0], [1.6, 2253.0], [1.7, 2253.0], [1.8, 2253.0], [1.9, 2253.0], [2.0, 2253.0], [2.1, 2253.0], [2.2, 2253.0], [2.3, 2253.0], [2.4, 2253.0], [2.5, 2253.0], [2.6, 2253.0], [2.7, 2253.0], [2.8, 2256.0], [2.9, 2256.0], [3.0, 2256.0], [3.1, 2256.0], [3.2, 2256.0], [3.3, 2256.0], [3.4, 2256.0], [3.5, 2256.0], [3.6, 2256.0], [3.7, 2256.0], [3.8, 2256.0], [3.9, 2256.0], [4.0, 2258.0], [4.1, 2258.0], [4.2, 2258.0], [4.3, 2258.0], [4.4, 2258.0], [4.5, 2258.0], [4.6, 2258.0], [4.7, 2258.0], [4.8, 2261.0], [4.9, 2261.0], [5.0, 2261.0], [5.1, 2261.0], [5.2, 2261.0], [5.3, 2261.0], [5.4, 2261.0], [5.5, 2261.0], [5.6, 2261.0], [5.7, 2261.0], [5.8, 2261.0], [5.9, 2261.0], [6.0, 2262.0], [6.1, 2262.0], [6.2, 2262.0], [6.3, 2262.0], [6.4, 2264.0], [6.5, 2264.0], [6.6, 2264.0], [6.7, 2264.0], [6.8, 2264.0], [6.9, 2265.0], [7.0, 2265.0], [7.1, 2265.0], [7.2, 2265.0], [7.3, 2265.0], [7.4, 2265.0], [7.5, 2265.0], [7.6, 2265.0], [7.7, 2266.0], [7.8, 2266.0], [7.9, 2266.0], [8.0, 2266.0], [8.1, 2266.0], [8.2, 2266.0], [8.3, 2266.0], [8.4, 2266.0], [8.5, 2266.0], [8.6, 2266.0], [8.7, 2266.0], [8.8, 2267.0], [8.9, 2267.0], [9.0, 2267.0], [9.1, 2267.0], [9.2, 2267.0], [9.3, 2267.0], [9.4, 2267.0], [9.5, 2267.0], [9.6, 2267.0], [9.7, 2267.0], [9.8, 2267.0], [9.9, 2267.0], [10.0, 2267.0], [10.1, 2267.0], [10.2, 2267.0], [10.3, 2267.0], [10.4, 2267.0], [10.5, 2267.0], [10.6, 2267.0], [10.7, 2267.0], [10.8, 2268.0], [10.9, 2268.0], [11.0, 2268.0], [11.1, 2268.0], [11.2, 2268.0], [11.3, 2271.0], [11.4, 2271.0], [11.5, 2271.0], [11.6, 2271.0], [11.7, 2271.0], [11.8, 2271.0], [11.9, 2271.0], [12.0, 2271.0], [12.1, 2271.0], [12.2, 2271.0], [12.3, 2271.0], [12.4, 2272.0], [12.5, 2272.0], [12.6, 2272.0], [12.7, 2272.0], [12.8, 3494.0], [12.9, 3494.0], [13.0, 3494.0], [13.1, 3494.0], [13.2, 3494.0], [13.3, 3496.0], [13.4, 3496.0], [13.5, 3496.0], [13.6, 3496.0], [13.7, 3499.0], [13.8, 3499.0], [13.9, 3499.0], [14.0, 3499.0], [14.1, 3501.0], [14.2, 3501.0], [14.3, 3501.0], [14.4, 3501.0], [14.5, 3502.0], [14.6, 3502.0], [14.7, 3502.0], [14.8, 3502.0], [14.9, 3504.0], [15.0, 3504.0], [15.1, 3504.0], [15.2, 3504.0], [15.3, 3506.0], [15.4, 3506.0], [15.5, 3506.0], [15.6, 3506.0], [15.7, 3509.0], [15.8, 3509.0], [15.9, 3509.0], [16.0, 3509.0], [16.1, 3510.0], [16.2, 3510.0], [16.3, 3510.0], [16.4, 3510.0], [16.5, 3511.0], [16.6, 3511.0], [16.7, 3511.0], [16.8, 3515.0], [16.9, 3515.0], [17.0, 3515.0], [17.1, 3515.0], [17.2, 3517.0], [17.3, 3517.0], [17.4, 3517.0], [17.5, 3517.0], [17.6, 3521.0], [17.7, 3521.0], [17.8, 3521.0], [17.9, 3521.0], [18.0, 3522.0], [18.1, 3522.0], [18.2, 3522.0], [18.3, 3522.0], [18.4, 3523.0], [18.5, 3523.0], [18.6, 3523.0], [18.7, 3523.0], [18.8, 3524.0], [18.9, 3524.0], [19.0, 3524.0], [19.1, 3524.0], [19.2, 3525.0], [19.3, 3525.0], [19.4, 3525.0], [19.5, 3525.0], [19.6, 3526.0], [19.7, 3526.0], [19.8, 3526.0], [19.9, 3526.0], [20.0, 3528.0], [20.1, 3528.0], [20.2, 3528.0], [20.3, 3528.0], [20.4, 3529.0], [20.5, 3529.0], [20.6, 3529.0], [20.7, 3529.0], [20.8, 3531.0], [20.9, 3531.0], [21.0, 3531.0], [21.1, 3531.0], [21.2, 3532.0], [21.3, 3532.0], [21.4, 3532.0], [21.5, 3532.0], [21.6, 3534.0], [21.7, 3534.0], [21.8, 3534.0], [21.9, 3534.0], [22.0, 3535.0], [22.1, 3535.0], [22.2, 3535.0], [22.3, 3535.0], [22.4, 3536.0], [22.5, 3536.0], [22.6, 3536.0], [22.7, 3536.0], [22.8, 3537.0], [22.9, 3537.0], [23.0, 3537.0], [23.1, 3537.0], [23.2, 3539.0], [23.3, 3539.0], [23.4, 3539.0], [23.5, 3539.0], [23.6, 3550.0], [23.7, 3550.0], [23.8, 3550.0], [23.9, 3550.0], [24.0, 3552.0], [24.1, 3552.0], [24.2, 3552.0], [24.3, 3552.0], [24.4, 3556.0], [24.5, 3556.0], [24.6, 3556.0], [24.7, 3556.0], [24.8, 3556.0], [24.9, 3556.0], [25.0, 3556.0], [25.1, 3556.0], [25.2, 3556.0], [25.3, 3556.0], [25.4, 3556.0], [25.5, 3556.0], [25.6, 3557.0], [25.7, 3557.0], [25.8, 3557.0], [25.9, 3557.0], [26.0, 3558.0], [26.1, 3558.0], [26.2, 3558.0], [26.3, 3558.0], [26.4, 3559.0], [26.5, 3559.0], [26.6, 3559.0], [26.7, 3559.0], [26.8, 3560.0], [26.9, 3560.0], [27.0, 3560.0], [27.1, 3560.0], [27.2, 3562.0], [27.3, 3562.0], [27.4, 3562.0], [27.5, 3562.0], [27.6, 3563.0], [27.7, 3563.0], [27.8, 3563.0], [27.9, 3563.0], [28.0, 3566.0], [28.1, 3566.0], [28.2, 3566.0], [28.3, 3566.0], [28.4, 3567.0], [28.5, 3567.0], [28.6, 3567.0], [28.7, 3567.0], [28.8, 3569.0], [28.9, 3569.0], [29.0, 3569.0], [29.1, 3569.0], [29.2, 3570.0], [29.3, 3570.0], [29.4, 3570.0], [29.5, 3570.0], [29.6, 3570.0], [29.7, 3570.0], [29.8, 3570.0], [29.9, 3570.0], [30.0, 3572.0], [30.1, 3572.0], [30.2, 3572.0], [30.3, 3572.0], [30.4, 3574.0], [30.5, 3574.0], [30.6, 3574.0], [30.7, 3574.0], [30.8, 3576.0], [30.9, 3576.0], [31.0, 3576.0], [31.1, 3576.0], [31.2, 3577.0], [31.3, 3577.0], [31.4, 3577.0], [31.5, 3577.0], [31.6, 3578.0], [31.7, 3578.0], [31.8, 3578.0], [31.9, 3578.0], [32.0, 3578.0], [32.1, 3578.0], [32.2, 3578.0], [32.3, 3578.0], [32.4, 3581.0], [32.5, 3581.0], [32.6, 3581.0], [32.7, 3581.0], [32.8, 3582.0], [32.9, 3582.0], [33.0, 3582.0], [33.1, 3582.0], [33.2, 3584.0], [33.3, 3584.0], [33.4, 3584.0], [33.5, 3584.0], [33.6, 3586.0], [33.7, 3586.0], [33.8, 3586.0], [33.9, 3586.0], [34.0, 3587.0], [34.1, 3587.0], [34.2, 3587.0], [34.3, 3587.0], [34.4, 3587.0], [34.5, 3587.0], [34.6, 3587.0], [34.7, 3587.0], [34.8, 3588.0], [34.9, 3588.0], [35.0, 3588.0], [35.1, 3588.0], [35.2, 3588.0], [35.3, 3588.0], [35.4, 3588.0], [35.5, 3588.0], [35.6, 3590.0], [35.7, 3590.0], [35.8, 3590.0], [35.9, 3590.0], [36.0, 3591.0], [36.1, 3591.0], [36.2, 3591.0], [36.3, 3591.0], [36.4, 3591.0], [36.5, 3591.0], [36.6, 3591.0], [36.7, 3591.0], [36.8, 3591.0], [36.9, 3591.0], [37.0, 3591.0], [37.1, 3591.0], [37.2, 3591.0], [37.3, 3591.0], [37.4, 3591.0], [37.5, 3591.0], [37.6, 3591.0], [37.7, 3591.0], [37.8, 3591.0], [37.9, 3591.0], [38.0, 3591.0], [38.1, 3591.0], [38.2, 3591.0], [38.3, 3591.0], [38.4, 3591.0], [38.5, 3591.0], [38.6, 3591.0], [38.7, 3591.0], [38.8, 3592.0], [38.9, 3592.0], [39.0, 3592.0], [39.1, 3592.0], [39.2, 3592.0], [39.3, 3592.0], [39.4, 3592.0], [39.5, 3592.0], [39.6, 3593.0], [39.7, 3593.0], [39.8, 3593.0], [39.9, 3593.0], [40.0, 3593.0], [40.1, 3593.0], [40.2, 3593.0], [40.3, 3593.0], [40.4, 3593.0], [40.5, 3593.0], [40.6, 3593.0], [40.7, 3593.0], [40.8, 3593.0], [40.9, 3593.0], [41.0, 3593.0], [41.1, 3593.0], [41.2, 3594.0], [41.3, 3594.0], [41.4, 3594.0], [41.5, 3594.0], [41.6, 3594.0], [41.7, 3594.0], [41.8, 3594.0], [41.9, 3594.0], [42.0, 3594.0], [42.1, 3594.0], [42.2, 3594.0], [42.3, 3594.0], [42.4, 3594.0], [42.5, 3594.0], [42.6, 3594.0], [42.7, 3594.0], [42.8, 3597.0], [42.9, 3597.0], [43.0, 3597.0], [43.1, 3597.0], [43.2, 3597.0], [43.3, 3597.0], [43.4, 3597.0], [43.5, 3597.0], [43.6, 3598.0], [43.7, 3598.0], [43.8, 3598.0], [43.9, 3598.0], [44.0, 3599.0], [44.1, 3599.0], [44.2, 3599.0], [44.3, 3599.0], [44.4, 3600.0], [44.5, 3600.0], [44.6, 3600.0], [44.7, 3600.0], [44.8, 3600.0], [44.9, 3600.0], [45.0, 3600.0], [45.1, 3600.0], [45.2, 3601.0], [45.3, 3601.0], [45.4, 3601.0], [45.5, 3601.0], [45.6, 3601.0], [45.7, 3601.0], [45.8, 3601.0], [45.9, 3601.0], [46.0, 3602.0], [46.1, 3602.0], [46.2, 3602.0], [46.3, 3602.0], [46.4, 3602.0], [46.5, 3602.0], [46.6, 3602.0], [46.7, 3602.0], [46.8, 3603.0], [46.9, 3603.0], [47.0, 3603.0], [47.1, 3603.0], [47.2, 3604.0], [47.3, 3604.0], [47.4, 3604.0], [47.5, 3604.0], [47.6, 3604.0], [47.7, 3604.0], [47.8, 3604.0], [47.9, 3604.0], [48.0, 3605.0], [48.1, 3605.0], [48.2, 3605.0], [48.3, 3605.0], [48.4, 3607.0], [48.5, 3607.0], [48.6, 3607.0], [48.7, 3607.0], [48.8, 3608.0], [48.9, 3608.0], [49.0, 3608.0], [49.1, 3608.0], [49.2, 3610.0], [49.3, 3610.0], [49.4, 3610.0], [49.5, 3610.0], [49.6, 3611.0], [49.7, 3611.0], [49.8, 3611.0], [49.9, 3611.0], [50.0, 3613.0], [50.1, 3613.0], [50.2, 3613.0], [50.3, 3613.0], [50.4, 3614.0], [50.5, 3614.0], [50.6, 3614.0], [50.7, 3614.0], [50.8, 3616.0], [50.9, 3616.0], [51.0, 3616.0], [51.1, 3616.0], [51.2, 3617.0], [51.3, 3617.0], [51.4, 3617.0], [51.5, 3617.0], [51.6, 3617.0], [51.7, 3617.0], [51.8, 3617.0], [51.9, 3617.0], [52.0, 3619.0], [52.1, 3619.0], [52.2, 3619.0], [52.3, 3619.0], [52.4, 3619.0], [52.5, 3619.0], [52.6, 3619.0], [52.7, 3619.0], [52.8, 3620.0], [52.9, 3620.0], [53.0, 3620.0], [53.1, 3620.0], [53.2, 3620.0], [53.3, 3620.0], [53.4, 3620.0], [53.5, 3620.0], [53.6, 3622.0], [53.7, 3622.0], [53.8, 3622.0], [53.9, 3622.0], [54.0, 3623.0], [54.1, 3623.0], [54.2, 3623.0], [54.3, 3623.0], [54.4, 3624.0], [54.5, 3624.0], [54.6, 3624.0], [54.7, 3624.0], [54.8, 3625.0], [54.9, 3625.0], [55.0, 3625.0], [55.1, 3625.0], [55.2, 3626.0], [55.3, 3626.0], [55.4, 3626.0], [55.5, 3626.0], [55.6, 3628.0], [55.7, 3628.0], [55.8, 3628.0], [55.9, 3628.0], [56.0, 3628.0], [56.1, 3628.0], [56.2, 3628.0], [56.3, 3628.0], [56.4, 3628.0], [56.5, 3628.0], [56.6, 3628.0], [56.7, 3628.0], [56.8, 3630.0], [56.9, 3630.0], [57.0, 3630.0], [57.1, 3630.0], [57.2, 3631.0], [57.3, 3631.0], [57.4, 3631.0], [57.5, 3631.0], [57.6, 3631.0], [57.7, 3631.0], [57.8, 3631.0], [57.9, 3631.0], [58.0, 3634.0], [58.1, 3634.0], [58.2, 3634.0], [58.3, 3634.0], [58.4, 3634.0], [58.5, 3634.0], [58.6, 3634.0], [58.7, 3634.0], [58.8, 3636.0], [58.9, 3636.0], [59.0, 3636.0], [59.1, 3636.0], [59.2, 3636.0], [59.3, 3636.0], [59.4, 3636.0], [59.5, 3636.0], [59.6, 3637.0], [59.7, 3637.0], [59.8, 3637.0], [59.9, 3637.0], [60.0, 3638.0], [60.1, 3638.0], [60.2, 3638.0], [60.3, 3638.0], [60.4, 3638.0], [60.5, 3638.0], [60.6, 3638.0], [60.7, 3638.0], [60.8, 3638.0], [60.9, 3638.0], [61.0, 3638.0], [61.1, 3638.0], [61.2, 3641.0], [61.3, 3641.0], [61.4, 3641.0], [61.5, 3641.0], [61.6, 3642.0], [61.7, 3642.0], [61.8, 3642.0], [61.9, 3642.0], [62.0, 3642.0], [62.1, 3642.0], [62.2, 3642.0], [62.3, 3642.0], [62.4, 3643.0], [62.5, 3643.0], [62.6, 3643.0], [62.7, 3643.0], [62.8, 3646.0], [62.9, 3646.0], [63.0, 3646.0], [63.1, 3646.0], [63.2, 3647.0], [63.3, 3647.0], [63.4, 3647.0], [63.5, 3647.0], [63.6, 3648.0], [63.7, 3648.0], [63.8, 3648.0], [63.9, 3648.0], [64.0, 3649.0], [64.1, 3649.0], [64.2, 3649.0], [64.3, 3649.0], [64.4, 3651.0], [64.5, 3651.0], [64.6, 3651.0], [64.7, 3651.0], [64.8, 3651.0], [64.9, 3651.0], [65.0, 3651.0], [65.1, 3651.0], [65.2, 3653.0], [65.3, 3653.0], [65.4, 3653.0], [65.5, 3653.0], [65.6, 3653.0], [65.7, 3653.0], [65.8, 3653.0], [65.9, 3653.0], [66.0, 3656.0], [66.1, 3656.0], [66.2, 3656.0], [66.3, 3656.0], [66.4, 3656.0], [66.5, 3656.0], [66.6, 3656.0], [66.7, 3656.0], [66.8, 3659.0], [66.9, 3659.0], [67.0, 3659.0], [67.1, 3659.0], [67.2, 3662.0], [67.3, 3662.0], [67.4, 3662.0], [67.5, 3662.0], [67.6, 3663.0], [67.7, 3663.0], [67.8, 3663.0], [67.9, 3663.0], [68.0, 3664.0], [68.1, 3664.0], [68.2, 3664.0], [68.3, 3664.0], [68.4, 3665.0], [68.5, 3665.0], [68.6, 3665.0], [68.7, 3665.0], [68.8, 3666.0], [68.9, 3666.0], [69.0, 3666.0], [69.1, 3666.0], [69.2, 3887.0], [69.3, 3887.0], [69.4, 3887.0], [69.5, 3887.0], [69.6, 3890.0], [69.7, 3890.0], [69.8, 3890.0], [69.9, 3890.0], [70.0, 3891.0], [70.1, 3891.0], [70.2, 3891.0], [70.3, 3891.0], [70.4, 3891.0], [70.5, 3891.0], [70.6, 3891.0], [70.7, 3891.0], [70.8, 3893.0], [70.9, 3893.0], [71.0, 3893.0], [71.1, 3893.0], [71.2, 3894.0], [71.3, 3894.0], [71.4, 3894.0], [71.5, 3894.0], [71.6, 3894.0], [71.7, 3894.0], [71.8, 3894.0], [71.9, 3894.0], [72.0, 3896.0], [72.1, 3896.0], [72.2, 3896.0], [72.3, 3896.0], [72.4, 3898.0], [72.5, 3898.0], [72.6, 3898.0], [72.7, 3898.0], [72.8, 3900.0], [72.9, 3900.0], [73.0, 3900.0], [73.1, 3900.0], [73.2, 3901.0], [73.3, 3901.0], [73.4, 3901.0], [73.5, 3901.0], [73.6, 3901.0], [73.7, 3901.0], [73.8, 3901.0], [73.9, 3901.0], [74.0, 3903.0], [74.1, 3903.0], [74.2, 3903.0], [74.3, 3903.0], [74.4, 3906.0], [74.5, 3906.0], [74.6, 3906.0], [74.7, 3906.0], [74.8, 3908.0], [74.9, 3908.0], [75.0, 3908.0], [75.1, 3908.0], [75.2, 3910.0], [75.3, 3910.0], [75.4, 3910.0], [75.5, 3910.0], [75.6, 3912.0], [75.7, 3912.0], [75.8, 3912.0], [75.9, 3912.0], [76.0, 3916.0], [76.1, 3916.0], [76.2, 3916.0], [76.3, 3916.0], [76.4, 3916.0], [76.5, 3916.0], [76.6, 3916.0], [76.7, 3916.0], [76.8, 3917.0], [76.9, 3917.0], [77.0, 3917.0], [77.1, 3917.0], [77.2, 3917.0], [77.3, 3917.0], [77.4, 3917.0], [77.5, 3917.0], [77.6, 3919.0], [77.7, 3919.0], [77.8, 3919.0], [77.9, 3919.0], [78.0, 3920.0], [78.1, 3920.0], [78.2, 3920.0], [78.3, 3920.0], [78.4, 3920.0], [78.5, 3920.0], [78.6, 3920.0], [78.7, 3920.0], [78.8, 3920.0], [78.9, 3920.0], [79.0, 3920.0], [79.1, 3920.0], [79.2, 3921.0], [79.3, 3921.0], [79.4, 3921.0], [79.5, 3921.0], [79.6, 3922.0], [79.7, 3922.0], [79.8, 3922.0], [79.9, 3922.0], [80.0, 3922.0], [80.1, 3922.0], [80.2, 3922.0], [80.3, 3922.0], [80.4, 3925.0], [80.5, 3925.0], [80.6, 3925.0], [80.7, 3925.0], [80.8, 3926.0], [80.9, 3926.0], [81.0, 3926.0], [81.1, 3926.0], [81.2, 3926.0], [81.3, 3926.0], [81.4, 3926.0], [81.5, 3926.0], [81.6, 3926.0], [81.7, 3926.0], [81.8, 3926.0], [81.9, 3926.0], [82.0, 3927.0], [82.1, 3927.0], [82.2, 3927.0], [82.3, 3927.0], [82.4, 3928.0], [82.5, 3928.0], [82.6, 3928.0], [82.7, 3928.0], [82.8, 3928.0], [82.9, 3928.0], [83.0, 3928.0], [83.1, 3928.0], [83.2, 3929.0], [83.3, 3929.0], [83.4, 3929.0], [83.5, 3929.0], [83.6, 3931.0], [83.7, 3931.0], [83.8, 3931.0], [83.9, 3931.0], [84.0, 3931.0], [84.1, 3931.0], [84.2, 3931.0], [84.3, 3931.0], [84.4, 3934.0], [84.5, 3934.0], [84.6, 3934.0], [84.7, 3934.0], [84.8, 3934.0], [84.9, 3934.0], [85.0, 3934.0], [85.1, 3934.0], [85.2, 3935.0], [85.3, 3935.0], [85.4, 3935.0], [85.5, 3935.0], [85.6, 3935.0], [85.7, 3935.0], [85.8, 3935.0], [85.9, 3935.0], [86.0, 3935.0], [86.1, 3935.0], [86.2, 3935.0], [86.3, 3935.0], [86.4, 3935.0], [86.5, 3935.0], [86.6, 3935.0], [86.7, 3935.0], [86.8, 3935.0], [86.9, 3935.0], [87.0, 3935.0], [87.1, 3935.0], [87.2, 3935.0], [87.3, 3935.0], [87.4, 3935.0], [87.5, 3935.0], [87.6, 3935.0], [87.7, 3935.0], [87.8, 3935.0], [87.9, 3935.0], [88.0, 3948.0], [88.1, 3948.0], [88.2, 3948.0], [88.3, 3948.0], [88.4, 3948.0], [88.5, 3948.0], [88.6, 3948.0], [88.7, 3948.0], [88.8, 3949.0], [88.9, 3949.0], [89.0, 3949.0], [89.1, 3949.0], [89.2, 3952.0], [89.3, 3952.0], [89.4, 3952.0], [89.5, 3952.0], [89.6, 3952.0], [89.7, 3952.0], [89.8, 3952.0], [89.9, 3952.0], [90.0, 3954.0], [90.1, 3954.0], [90.2, 3954.0], [90.3, 3954.0], [90.4, 3955.0], [90.5, 3955.0], [90.6, 3955.0], [90.7, 3955.0], [90.8, 3956.0], [90.9, 3956.0], [91.0, 3956.0], [91.1, 3956.0], [91.2, 3957.0], [91.3, 3957.0], [91.4, 3957.0], [91.5, 3957.0], [91.6, 3958.0], [91.7, 3958.0], [91.8, 3958.0], [91.9, 3958.0], [92.0, 3959.0], [92.1, 3959.0], [92.2, 3959.0], [92.3, 3959.0], [92.4, 3960.0], [92.5, 3960.0], [92.6, 3960.0], [92.7, 3960.0], [92.8, 3960.0], [92.9, 3962.0], [93.0, 3962.0], [93.1, 3962.0], [93.2, 3962.0], [93.3, 3964.0], [93.4, 3964.0], [93.5, 3964.0], [93.6, 3964.0], [93.7, 3965.0], [93.8, 3965.0], [93.9, 3965.0], [94.0, 3965.0], [94.1, 3966.0], [94.2, 3966.0], [94.3, 3966.0], [94.4, 3966.0], [94.5, 3968.0], [94.6, 3968.0], [94.7, 3968.0], [94.8, 3968.0], [94.9, 3970.0], [95.0, 3970.0], [95.1, 3970.0], [95.2, 3970.0], [95.3, 3971.0], [95.4, 3971.0], [95.5, 3971.0], [95.6, 3971.0], [95.7, 4094.0], [95.8, 4094.0], [95.9, 4094.0], [96.0, 4094.0], [96.1, 4208.0], [96.2, 4208.0], [96.3, 4208.0], [96.4, 4208.0], [96.5, 4209.0], [96.6, 4209.0], [96.7, 4209.0], [96.8, 4209.0], [96.9, 4209.0], [97.0, 4209.0], [97.1, 4209.0], [97.2, 4209.0], [97.3, 4210.0], [97.4, 4210.0], [97.5, 4210.0], [97.6, 4210.0], [97.7, 4210.0], [97.8, 4210.0], [97.9, 4210.0], [98.0, 4210.0], [98.1, 4210.0], [98.2, 4210.0], [98.3, 4210.0], [98.4, 4210.0], [98.5, 4211.0], [98.6, 4211.0], [98.7, 4211.0], [98.8, 4211.0], [98.9, 4211.0], [99.0, 4211.0], [99.1, 4211.0], [99.2, 4211.0], [99.3, 4223.0], [99.4, 4223.0], [99.5, 4223.0], [99.6, 4223.0], [99.7, 4223.0], [99.8, 4223.0], [99.9, 4223.0], [100.0, 4223.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[0.0, 152.0], [0.1, 152.0], [0.2, 152.0], [0.3, 152.0], [0.4, 276.0], [0.5, 276.0], [0.6, 276.0], [0.7, 276.0], [0.8, 276.0], [0.9, 276.0], [1.0, 276.0], [1.1, 276.0], [1.2, 276.0], [1.3, 277.0], [1.4, 277.0], [1.5, 277.0], [1.6, 277.0], [1.7, 277.0], [1.8, 277.0], [1.9, 277.0], [2.0, 277.0], [2.1, 277.0], [2.2, 277.0], [2.3, 277.0], [2.4, 277.0], [2.5, 278.0], [2.6, 278.0], [2.7, 278.0], [2.8, 278.0], [2.9, 284.0], [3.0, 284.0], [3.1, 284.0], [3.2, 285.0], [3.3, 285.0], [3.4, 285.0], [3.5, 285.0], [3.6, 428.0], [3.7, 428.0], [3.8, 428.0], [3.9, 428.0], [4.0, 432.0], [4.1, 432.0], [4.2, 432.0], [4.3, 432.0], [4.4, 679.0], [4.5, 679.0], [4.6, 679.0], [4.7, 679.0], [4.8, 679.0], [4.9, 680.0], [5.0, 680.0], [5.1, 680.0], [5.2, 680.0], [5.3, 682.0], [5.4, 682.0], [5.5, 682.0], [5.6, 682.0], [5.7, 683.0], [5.8, 683.0], [5.9, 683.0], [6.0, 683.0], [6.1, 685.0], [6.2, 685.0], [6.3, 685.0], [6.4, 685.0], [6.5, 686.0], [6.6, 686.0], [6.7, 686.0], [6.8, 686.0], [6.9, 687.0], [7.0, 687.0], [7.1, 687.0], [7.2, 687.0], [7.3, 690.0], [7.4, 690.0], [7.5, 690.0], [7.6, 690.0], [7.7, 690.0], [7.8, 690.0], [7.9, 690.0], [8.0, 690.0], [8.1, 691.0], [8.2, 691.0], [8.3, 691.0], [8.4, 691.0], [8.5, 693.0], [8.6, 693.0], [8.7, 693.0], [8.8, 693.0], [8.9, 694.0], [9.0, 694.0], [9.1, 694.0], [9.2, 694.0], [9.3, 694.0], [9.4, 694.0], [9.5, 694.0], [9.6, 694.0], [9.7, 695.0], [9.8, 695.0], [9.9, 695.0], [10.0, 695.0], [10.1, 695.0], [10.2, 695.0], [10.3, 695.0], [10.4, 695.0], [10.5, 696.0], [10.6, 696.0], [10.7, 696.0], [10.8, 696.0], [10.9, 697.0], [11.0, 697.0], [11.1, 697.0], [11.2, 697.0], [11.3, 697.0], [11.4, 697.0], [11.5, 697.0], [11.6, 697.0], [11.7, 699.0], [11.8, 699.0], [11.9, 699.0], [12.0, 699.0], [12.1, 700.0], [12.2, 700.0], [12.3, 700.0], [12.4, 700.0], [12.5, 702.0], [12.6, 702.0], [12.7, 702.0], [12.8, 702.0], [12.9, 702.0], [13.0, 702.0], [13.1, 702.0], [13.2, 702.0], [13.3, 702.0], [13.4, 702.0], [13.5, 702.0], [13.6, 702.0], [13.7, 702.0], [13.8, 702.0], [13.9, 702.0], [14.0, 702.0], [14.1, 702.0], [14.2, 702.0], [14.3, 702.0], [14.4, 702.0], [14.5, 702.0], [14.6, 702.0], [14.7, 702.0], [14.8, 702.0], [14.9, 703.0], [15.0, 703.0], [15.1, 703.0], [15.2, 703.0], [15.3, 703.0], [15.4, 703.0], [15.5, 703.0], [15.6, 703.0], [15.7, 704.0], [15.8, 704.0], [15.9, 704.0], [16.0, 704.0], [16.1, 705.0], [16.2, 705.0], [16.3, 705.0], [16.4, 705.0], [16.5, 707.0], [16.6, 707.0], [16.7, 707.0], [16.8, 707.0], [16.9, 707.0], [17.0, 707.0], [17.1, 707.0], [17.2, 707.0], [17.3, 707.0], [17.4, 707.0], [17.5, 707.0], [17.6, 707.0], [17.7, 707.0], [17.8, 707.0], [17.9, 707.0], [18.0, 707.0], [18.1, 707.0], [18.2, 707.0], [18.3, 707.0], [18.4, 707.0], [18.5, 708.0], [18.6, 708.0], [18.7, 708.0], [18.8, 708.0], [18.9, 708.0], [19.0, 708.0], [19.1, 708.0], [19.2, 708.0], [19.3, 708.0], [19.4, 708.0], [19.5, 708.0], [19.6, 708.0], [19.7, 708.0], [19.8, 708.0], [19.9, 708.0], [20.0, 708.0], [20.1, 709.0], [20.2, 709.0], [20.3, 709.0], [20.4, 709.0], [20.5, 709.0], [20.6, 709.0], [20.7, 709.0], [20.8, 709.0], [20.9, 710.0], [21.0, 710.0], [21.1, 710.0], [21.2, 710.0], [21.3, 711.0], [21.4, 711.0], [21.5, 711.0], [21.6, 711.0], [21.7, 711.0], [21.8, 711.0], [21.9, 711.0], [22.0, 711.0], [22.1, 714.0], [22.2, 714.0], [22.3, 714.0], [22.4, 714.0], [22.5, 715.0], [22.6, 715.0], [22.7, 715.0], [22.8, 715.0], [22.9, 716.0], [23.0, 716.0], [23.1, 716.0], [23.2, 716.0], [23.3, 718.0], [23.4, 718.0], [23.5, 718.0], [23.6, 720.0], [23.7, 720.0], [23.8, 720.0], [23.9, 720.0], [24.0, 721.0], [24.1, 721.0], [24.2, 721.0], [24.3, 721.0], [24.4, 721.0], [24.5, 721.0], [24.6, 721.0], [24.7, 721.0], [24.8, 722.0], [24.9, 722.0], [25.0, 722.0], [25.1, 722.0], [25.2, 726.0], [25.3, 726.0], [25.4, 726.0], [25.5, 726.0], [25.6, 727.0], [25.7, 727.0], [25.8, 727.0], [25.9, 727.0], [26.0, 732.0], [26.1, 732.0], [26.2, 732.0], [26.3, 732.0], [26.4, 734.0], [26.5, 734.0], [26.6, 734.0], [26.7, 734.0], [26.8, 734.0], [26.9, 734.0], [27.0, 734.0], [27.1, 734.0], [27.2, 736.0], [27.3, 736.0], [27.4, 736.0], [27.5, 736.0], [27.6, 737.0], [27.7, 737.0], [27.8, 737.0], [27.9, 737.0], [28.0, 738.0], [28.1, 738.0], [28.2, 738.0], [28.3, 738.0], [28.4, 740.0], [28.5, 740.0], [28.6, 740.0], [28.7, 740.0], [28.8, 742.0], [28.9, 742.0], [29.0, 742.0], [29.1, 742.0], [29.2, 743.0], [29.3, 743.0], [29.4, 743.0], [29.5, 743.0], [29.6, 744.0], [29.7, 744.0], [29.8, 744.0], [29.9, 744.0], [30.0, 745.0], [30.1, 745.0], [30.2, 745.0], [30.3, 745.0], [30.4, 745.0], [30.5, 745.0], [30.6, 745.0], [30.7, 745.0], [30.8, 861.0], [30.9, 861.0], [31.0, 861.0], [31.1, 861.0], [31.2, 863.0], [31.3, 863.0], [31.4, 863.0], [31.5, 863.0], [31.6, 864.0], [31.7, 864.0], [31.8, 864.0], [31.9, 864.0], [32.0, 866.0], [32.1, 866.0], [32.2, 866.0], [32.3, 866.0], [32.4, 866.0], [32.5, 866.0], [32.6, 866.0], [32.7, 866.0], [32.8, 867.0], [32.9, 867.0], [33.0, 867.0], [33.1, 867.0], [33.2, 868.0], [33.3, 868.0], [33.4, 868.0], [33.5, 868.0], [33.6, 868.0], [33.7, 868.0], [33.8, 868.0], [33.9, 868.0], [34.0, 871.0], [34.1, 871.0], [34.2, 871.0], [34.3, 871.0], [34.4, 871.0], [34.5, 871.0], [34.6, 871.0], [34.7, 871.0], [34.8, 874.0], [34.9, 874.0], [35.0, 874.0], [35.1, 874.0], [35.2, 876.0], [35.3, 876.0], [35.4, 876.0], [35.5, 876.0], [35.6, 876.0], [35.7, 876.0], [35.8, 876.0], [35.9, 876.0], [36.0, 877.0], [36.1, 877.0], [36.2, 877.0], [36.3, 877.0], [36.4, 879.0], [36.5, 879.0], [36.6, 879.0], [36.7, 879.0], [36.8, 881.0], [36.9, 881.0], [37.0, 881.0], [37.1, 881.0], [37.2, 881.0], [37.3, 881.0], [37.4, 881.0], [37.5, 881.0], [37.6, 882.0], [37.7, 882.0], [37.8, 882.0], [37.9, 882.0], [38.0, 883.0], [38.1, 883.0], [38.2, 883.0], [38.3, 883.0], [38.4, 884.0], [38.5, 884.0], [38.6, 884.0], [38.7, 884.0], [38.8, 884.0], [38.9, 884.0], [39.0, 884.0], [39.1, 884.0], [39.2, 887.0], [39.3, 887.0], [39.4, 887.0], [39.5, 887.0], [39.6, 888.0], [39.7, 888.0], [39.8, 888.0], [39.9, 888.0], [40.0, 889.0], [40.1, 889.0], [40.2, 889.0], [40.3, 889.0], [40.4, 890.0], [40.5, 890.0], [40.6, 890.0], [40.7, 890.0], [40.8, 891.0], [40.9, 891.0], [41.0, 891.0], [41.1, 891.0], [41.2, 893.0], [41.3, 893.0], [41.4, 893.0], [41.5, 893.0], [41.6, 893.0], [41.7, 893.0], [41.8, 893.0], [41.9, 893.0], [42.0, 897.0], [42.1, 897.0], [42.2, 897.0], [42.3, 897.0], [42.4, 897.0], [42.5, 897.0], [42.6, 897.0], [42.7, 897.0], [42.8, 897.0], [42.9, 897.0], [43.0, 897.0], [43.1, 897.0], [43.2, 899.0], [43.3, 899.0], [43.4, 899.0], [43.5, 899.0], [43.6, 900.0], [43.7, 900.0], [43.8, 900.0], [43.9, 900.0], [44.0, 902.0], [44.1, 902.0], [44.2, 902.0], [44.3, 902.0], [44.4, 905.0], [44.5, 905.0], [44.6, 905.0], [44.7, 905.0], [44.8, 912.0], [44.9, 912.0], [45.0, 912.0], [45.1, 912.0], [45.2, 912.0], [45.3, 912.0], [45.4, 912.0], [45.5, 912.0], [45.6, 919.0], [45.7, 919.0], [45.8, 919.0], [45.9, 919.0], [46.0, 920.0], [46.1, 920.0], [46.2, 920.0], [46.3, 920.0], [46.4, 921.0], [46.5, 921.0], [46.6, 921.0], [46.7, 921.0], [46.8, 922.0], [46.9, 922.0], [47.0, 922.0], [47.1, 922.0], [47.2, 922.0], [47.3, 922.0], [47.4, 922.0], [47.5, 922.0], [47.6, 922.0], [47.7, 922.0], [47.8, 922.0], [47.9, 922.0], [48.0, 922.0], [48.1, 922.0], [48.2, 922.0], [48.3, 922.0], [48.4, 922.0], [48.5, 922.0], [48.6, 922.0], [48.7, 922.0], [48.8, 923.0], [48.9, 923.0], [49.0, 923.0], [49.1, 923.0], [49.2, 923.0], [49.3, 923.0], [49.4, 923.0], [49.5, 923.0], [49.6, 923.0], [49.7, 923.0], [49.8, 923.0], [49.9, 923.0], [50.0, 923.0], [50.1, 923.0], [50.2, 923.0], [50.3, 923.0], [50.4, 923.0], [50.5, 923.0], [50.6, 923.0], [50.7, 923.0], [50.8, 924.0], [50.9, 924.0], [51.0, 924.0], [51.1, 924.0], [51.2, 925.0], [51.3, 925.0], [51.4, 925.0], [51.5, 925.0], [51.6, 925.0], [51.7, 925.0], [51.8, 925.0], [51.9, 925.0], [52.0, 925.0], [52.1, 925.0], [52.2, 925.0], [52.3, 925.0], [52.4, 927.0], [52.5, 927.0], [52.6, 927.0], [52.7, 927.0], [52.8, 928.0], [52.9, 928.0], [53.0, 928.0], [53.1, 928.0], [53.2, 928.0], [53.3, 928.0], [53.4, 928.0], [53.5, 928.0], [53.6, 928.0], [53.7, 928.0], [53.8, 928.0], [53.9, 928.0], [54.0, 930.0], [54.1, 930.0], [54.2, 930.0], [54.3, 930.0], [54.4, 930.0], [54.5, 930.0], [54.6, 930.0], [54.7, 930.0], [54.8, 930.0], [54.9, 930.0], [55.0, 930.0], [55.1, 930.0], [55.2, 930.0], [55.3, 930.0], [55.4, 930.0], [55.5, 930.0], [55.6, 931.0], [55.7, 931.0], [55.8, 931.0], [55.9, 931.0], [56.0, 932.0], [56.1, 932.0], [56.2, 932.0], [56.3, 932.0], [56.4, 933.0], [56.5, 933.0], [56.6, 933.0], [56.7, 933.0], [56.8, 933.0], [56.9, 933.0], [57.0, 933.0], [57.1, 933.0], [57.2, 935.0], [57.3, 935.0], [57.4, 935.0], [57.5, 935.0], [57.6, 935.0], [57.7, 935.0], [57.8, 935.0], [57.9, 935.0], [58.0, 935.0], [58.1, 935.0], [58.2, 935.0], [58.3, 935.0], [58.4, 939.0], [58.5, 939.0], [58.6, 939.0], [58.7, 939.0], [58.8, 940.0], [58.9, 940.0], [59.0, 940.0], [59.1, 940.0], [59.2, 942.0], [59.3, 942.0], [59.4, 942.0], [59.5, 942.0], [59.6, 942.0], [59.7, 942.0], [59.8, 942.0], [59.9, 942.0], [60.0, 943.0], [60.1, 943.0], [60.2, 943.0], [60.3, 943.0], [60.4, 945.0], [60.5, 945.0], [60.6, 945.0], [60.7, 945.0], [60.8, 946.0], [60.9, 946.0], [61.0, 946.0], [61.1, 946.0], [61.2, 949.0], [61.3, 949.0], [61.4, 949.0], [61.5, 949.0], [61.6, 949.0], [61.7, 949.0], [61.8, 949.0], [61.9, 949.0], [62.0, 951.0], [62.1, 951.0], [62.2, 951.0], [62.3, 951.0], [62.4, 952.0], [62.5, 952.0], [62.6, 952.0], [62.7, 952.0], [62.8, 954.0], [62.9, 954.0], [63.0, 954.0], [63.1, 954.0], [63.2, 955.0], [63.3, 955.0], [63.4, 955.0], [63.5, 955.0], [63.6, 956.0], [63.7, 956.0], [63.8, 956.0], [63.9, 956.0], [64.0, 957.0], [64.1, 957.0], [64.2, 957.0], [64.3, 957.0], [64.4, 958.0], [64.5, 958.0], [64.6, 958.0], [64.7, 958.0], [64.8, 959.0], [64.9, 959.0], [65.0, 959.0], [65.1, 959.0], [65.2, 960.0], [65.3, 960.0], [65.4, 960.0], [65.5, 960.0], [65.6, 963.0], [65.7, 963.0], [65.8, 963.0], [65.9, 963.0], [66.0, 964.0], [66.1, 964.0], [66.2, 964.0], [66.3, 964.0], [66.4, 973.0], [66.5, 973.0], [66.6, 973.0], [66.7, 973.0], [66.8, 976.0], [66.9, 976.0], [67.0, 976.0], [67.1, 976.0], [67.2, 976.0], [67.3, 976.0], [67.4, 976.0], [67.5, 976.0], [67.6, 980.0], [67.7, 980.0], [67.8, 980.0], [67.9, 980.0], [68.0, 981.0], [68.1, 981.0], [68.2, 981.0], [68.3, 981.0], [68.4, 982.0], [68.5, 982.0], [68.6, 982.0], [68.7, 982.0], [68.8, 983.0], [68.9, 983.0], [69.0, 983.0], [69.1, 983.0], [69.2, 984.0], [69.3, 984.0], [69.4, 984.0], [69.5, 984.0], [69.6, 985.0], [69.7, 985.0], [69.8, 985.0], [69.9, 985.0], [70.0, 987.0], [70.1, 987.0], [70.2, 987.0], [70.3, 987.0], [70.4, 987.0], [70.5, 987.0], [70.6, 987.0], [70.7, 987.0], [70.8, 988.0], [70.9, 988.0], [71.0, 988.0], [71.1, 988.0], [71.2, 988.0], [71.3, 988.0], [71.4, 988.0], [71.5, 988.0], [71.6, 990.0], [71.7, 990.0], [71.8, 990.0], [71.9, 990.0], [72.0, 992.0], [72.1, 992.0], [72.2, 992.0], [72.3, 992.0], [72.4, 997.0], [72.5, 997.0], [72.6, 997.0], [72.7, 997.0], [72.8, 997.0], [72.9, 997.0], [73.0, 997.0], [73.1, 997.0], [73.2, 1001.0], [73.3, 1001.0], [73.4, 1001.0], [73.5, 1001.0], [73.6, 1002.0], [73.7, 1002.0], [73.8, 1002.0], [73.9, 1002.0], [74.0, 1005.0], [74.1, 1005.0], [74.2, 1005.0], [74.3, 1005.0], [74.4, 1006.0], [74.5, 1006.0], [74.6, 1006.0], [74.7, 1006.0], [74.8, 1006.0], [74.9, 1006.0], [75.0, 1006.0], [75.1, 1006.0], [75.2, 1008.0], [75.3, 1008.0], [75.4, 1008.0], [75.5, 1008.0], [75.6, 1008.0], [75.7, 1013.0], [75.8, 1013.0], [75.9, 1013.0], [76.0, 1013.0], [76.1, 1014.0], [76.2, 1014.0], [76.3, 1014.0], [76.4, 1014.0], [76.5, 1015.0], [76.6, 1015.0], [76.7, 1015.0], [76.8, 1015.0], [76.9, 1017.0], [77.0, 1017.0], [77.1, 1017.0], [77.2, 1017.0], [77.3, 1017.0], [77.4, 1017.0], [77.5, 1017.0], [77.6, 1017.0], [77.7, 1017.0], [77.8, 1017.0], [77.9, 1017.0], [78.0, 1017.0], [78.1, 1019.0], [78.2, 1019.0], [78.3, 1019.0], [78.4, 1019.0], [78.5, 1021.0], [78.6, 1021.0], [78.7, 1021.0], [78.8, 1021.0], [78.9, 1022.0], [79.0, 1022.0], [79.1, 1022.0], [79.2, 1022.0], [79.3, 1023.0], [79.4, 1023.0], [79.5, 1023.0], [79.6, 1023.0], [79.7, 1025.0], [79.8, 1025.0], [79.9, 1025.0], [80.0, 1025.0], [80.1, 1026.0], [80.2, 1026.0], [80.3, 1026.0], [80.4, 1026.0], [80.5, 1028.0], [80.6, 1028.0], [80.7, 1028.0], [80.8, 1028.0], [80.9, 1029.0], [81.0, 1029.0], [81.1, 1029.0], [81.2, 1029.0], [81.3, 1031.0], [81.4, 1031.0], [81.5, 1031.0], [81.6, 1031.0], [81.7, 1033.0], [81.8, 1033.0], [81.9, 1033.0], [82.0, 1033.0], [82.1, 1034.0], [82.2, 1034.0], [82.3, 1034.0], [82.4, 1034.0], [82.5, 1035.0], [82.6, 1035.0], [82.7, 1035.0], [82.8, 1035.0], [82.9, 1035.0], [83.0, 1035.0], [83.1, 1035.0], [83.2, 1035.0], [83.3, 1036.0], [83.4, 1036.0], [83.5, 1036.0], [83.6, 1036.0], [83.7, 1037.0], [83.8, 1037.0], [83.9, 1037.0], [84.0, 1037.0], [84.1, 1038.0], [84.2, 1038.0], [84.3, 1038.0], [84.4, 1038.0], [84.5, 1040.0], [84.6, 1040.0], [84.7, 1040.0], [84.8, 1040.0], [84.9, 1042.0], [85.0, 1042.0], [85.1, 1042.0], [85.2, 1042.0], [85.3, 1042.0], [85.4, 1042.0], [85.5, 1042.0], [85.6, 1042.0], [85.7, 1044.0], [85.8, 1044.0], [85.9, 1044.0], [86.0, 1044.0], [86.1, 1044.0], [86.2, 1044.0], [86.3, 1044.0], [86.4, 1044.0], [86.5, 1046.0], [86.6, 1046.0], [86.7, 1046.0], [86.8, 1046.0], [86.9, 1046.0], [87.0, 1046.0], [87.1, 1046.0], [87.2, 1046.0], [87.3, 1957.0], [87.4, 1957.0], [87.5, 1957.0], [87.6, 1957.0], [87.7, 1959.0], [87.8, 1959.0], [87.9, 1959.0], [88.0, 1959.0], [88.1, 1961.0], [88.2, 1961.0], [88.3, 1961.0], [88.4, 1961.0], [88.5, 1961.0], [88.6, 1961.0], [88.7, 1961.0], [88.8, 1961.0], [88.9, 1961.0], [89.0, 1961.0], [89.1, 1961.0], [89.2, 1961.0], [89.3, 1963.0], [89.4, 1963.0], [89.5, 1963.0], [89.6, 1963.0], [89.7, 1963.0], [89.8, 1963.0], [89.9, 1963.0], [90.0, 1963.0], [90.1, 1964.0], [90.2, 1964.0], [90.3, 1964.0], [90.4, 1964.0], [90.5, 1965.0], [90.6, 1965.0], [90.7, 1965.0], [90.8, 1965.0], [90.9, 1968.0], [91.0, 1968.0], [91.1, 1968.0], [91.2, 1968.0], [91.3, 1968.0], [91.4, 1968.0], [91.5, 1968.0], [91.6, 1968.0], [91.7, 1969.0], [91.8, 1969.0], [91.9, 1969.0], [92.0, 1969.0], [92.1, 1970.0], [92.2, 1970.0], [92.3, 1970.0], [92.4, 1970.0], [92.5, 1971.0], [92.6, 1971.0], [92.7, 1971.0], [92.8, 1971.0], [92.9, 1974.0], [93.0, 1974.0], [93.1, 1974.0], [93.2, 1974.0], [93.3, 1974.0], [93.4, 1974.0], [93.5, 1974.0], [93.6, 1974.0], [93.7, 1974.0], [93.8, 1974.0], [93.9, 1974.0], [94.0, 1974.0], [94.1, 1975.0], [94.2, 1975.0], [94.3, 1975.0], [94.4, 1975.0], [94.5, 1976.0], [94.6, 1976.0], [94.7, 1976.0], [94.8, 1976.0], [94.9, 1977.0], [95.0, 1977.0], [95.1, 1977.0], [95.2, 1977.0], [95.3, 1979.0], [95.4, 1979.0], [95.5, 1979.0], [95.6, 1979.0], [95.7, 1980.0], [95.8, 1980.0], [95.9, 1980.0], [96.0, 1980.0], [96.1, 1980.0], [96.2, 1980.0], [96.3, 1980.0], [96.4, 1980.0], [96.5, 1982.0], [96.6, 1982.0], [96.7, 1982.0], [96.8, 1982.0], [96.9, 1984.0], [97.0, 1984.0], [97.1, 1984.0], [97.2, 1984.0], [97.3, 1986.0], [97.4, 1986.0], [97.5, 1986.0], [97.6, 1986.0], [97.7, 1988.0], [97.8, 1988.0], [97.9, 1988.0], [98.0, 1988.0], [98.1, 1988.0], [98.2, 1988.0], [98.3, 1988.0], [98.4, 1988.0], [98.5, 1990.0], [98.6, 1990.0], [98.7, 1990.0], [98.8, 1990.0], [98.9, 1990.0], [99.0, 1990.0], [99.1, 1990.0], [99.2, 1990.0], [99.3, 1991.0], [99.4, 1991.0], [99.5, 1991.0], [99.6, 1991.0], [99.7, 1991.0], [99.8, 1991.0], [99.9, 1991.0], [100.0, 1991.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[0.0, 249.0], [0.1, 249.0], [0.2, 249.0], [0.3, 249.0], [0.4, 249.0], [0.5, 249.0], [0.6, 249.0], [0.7, 249.0], [0.8, 691.0], [0.9, 691.0], [1.0, 691.0], [1.1, 691.0], [1.2, 691.0], [1.3, 705.0], [1.4, 705.0], [1.5, 705.0], [1.6, 705.0], [1.7, 705.0], [1.8, 705.0], [1.9, 705.0], [2.0, 708.0], [2.1, 708.0], [2.2, 708.0], [2.3, 708.0], [2.4, 710.0], [2.5, 710.0], [2.6, 710.0], [2.7, 710.0], [2.8, 716.0], [2.9, 716.0], [3.0, 716.0], [3.1, 716.0], [3.2, 716.0], [3.3, 716.0], [3.4, 716.0], [3.5, 716.0], [3.6, 717.0], [3.7, 717.0], [3.8, 717.0], [3.9, 717.0], [4.0, 718.0], [4.1, 718.0], [4.2, 718.0], [4.3, 718.0], [4.4, 719.0], [4.5, 719.0], [4.6, 719.0], [4.7, 719.0], [4.8, 719.0], [4.9, 719.0], [5.0, 719.0], [5.1, 719.0], [5.2, 720.0], [5.3, 720.0], [5.4, 720.0], [5.5, 720.0], [5.6, 721.0], [5.7, 721.0], [5.8, 721.0], [5.9, 721.0], [6.0, 722.0], [6.1, 722.0], [6.2, 722.0], [6.3, 722.0], [6.4, 722.0], [6.5, 722.0], [6.6, 722.0], [6.7, 722.0], [6.8, 722.0], [6.9, 722.0], [7.0, 722.0], [7.1, 722.0], [7.2, 723.0], [7.3, 723.0], [7.4, 723.0], [7.5, 723.0], [7.6, 723.0], [7.7, 723.0], [7.8, 723.0], [7.9, 723.0], [8.0, 724.0], [8.1, 724.0], [8.2, 724.0], [8.3, 724.0], [8.4, 724.0], [8.5, 724.0], [8.6, 724.0], [8.7, 724.0], [8.8, 724.0], [8.9, 724.0], [9.0, 724.0], [9.1, 724.0], [9.2, 724.0], [9.3, 724.0], [9.4, 724.0], [9.5, 724.0], [9.6, 724.0], [9.7, 724.0], [9.8, 724.0], [9.9, 724.0], [10.0, 725.0], [10.1, 725.0], [10.2, 725.0], [10.3, 725.0], [10.4, 725.0], [10.5, 725.0], [10.6, 725.0], [10.7, 725.0], [10.8, 725.0], [10.9, 725.0], [11.0, 725.0], [11.1, 725.0], [11.2, 726.0], [11.3, 726.0], [11.4, 726.0], [11.5, 726.0], [11.6, 726.0], [11.7, 726.0], [11.8, 726.0], [11.9, 726.0], [12.0, 727.0], [12.1, 727.0], [12.2, 727.0], [12.3, 727.0], [12.4, 727.0], [12.5, 727.0], [12.6, 727.0], [12.7, 727.0], [12.8, 727.0], [12.9, 727.0], [13.0, 727.0], [13.1, 727.0], [13.2, 729.0], [13.3, 729.0], [13.4, 729.0], [13.5, 729.0], [13.6, 2347.0], [13.7, 2347.0], [13.8, 2347.0], [13.9, 2347.0], [14.0, 2368.0], [14.1, 2368.0], [14.2, 2368.0], [14.3, 2368.0], [14.4, 2373.0], [14.5, 2373.0], [14.6, 2373.0], [14.7, 2373.0], [14.8, 2377.0], [14.9, 2377.0], [15.0, 2377.0], [15.1, 2377.0], [15.2, 2377.0], [15.3, 2378.0], [15.4, 2378.0], [15.5, 2378.0], [15.6, 2378.0], [15.7, 2383.0], [15.8, 2383.0], [15.9, 2383.0], [16.0, 2386.0], [16.1, 2386.0], [16.2, 2386.0], [16.3, 2386.0], [16.4, 2393.0], [16.5, 2393.0], [16.6, 2393.0], [16.7, 2393.0], [16.8, 2396.0], [16.9, 2396.0], [17.0, 2396.0], [17.1, 2396.0], [17.2, 2397.0], [17.3, 2397.0], [17.4, 2397.0], [17.5, 2397.0], [17.6, 2398.0], [17.7, 2398.0], [17.8, 2398.0], [17.9, 2398.0], [18.0, 2401.0], [18.1, 2401.0], [18.2, 2401.0], [18.3, 2401.0], [18.4, 2411.0], [18.5, 2411.0], [18.6, 2411.0], [18.7, 2411.0], [18.8, 2413.0], [18.9, 2413.0], [19.0, 2413.0], [19.1, 2413.0], [19.2, 2418.0], [19.3, 2418.0], [19.4, 2418.0], [19.5, 2418.0], [19.6, 2419.0], [19.7, 2419.0], [19.8, 2419.0], [19.9, 2419.0], [20.0, 2420.0], [20.1, 2420.0], [20.2, 2420.0], [20.3, 2420.0], [20.4, 2428.0], [20.5, 2428.0], [20.6, 2428.0], [20.7, 2428.0], [20.8, 2431.0], [20.9, 2431.0], [21.0, 2431.0], [21.1, 2431.0], [21.2, 2438.0], [21.3, 2438.0], [21.4, 2438.0], [21.5, 2438.0], [21.6, 2440.0], [21.7, 2440.0], [21.8, 2440.0], [21.9, 2440.0], [22.0, 2450.0], [22.1, 2450.0], [22.2, 2450.0], [22.3, 2450.0], [22.4, 2450.0], [22.5, 2450.0], [22.6, 2450.0], [22.7, 2450.0], [22.8, 2450.0], [22.9, 2450.0], [23.0, 2450.0], [23.1, 2450.0], [23.2, 2453.0], [23.3, 2453.0], [23.4, 2453.0], [23.5, 2453.0], [23.6, 2454.0], [23.7, 2454.0], [23.8, 2454.0], [23.9, 2454.0], [24.0, 2457.0], [24.1, 2457.0], [24.2, 2457.0], [24.3, 2457.0], [24.4, 2462.0], [24.5, 2462.0], [24.6, 2462.0], [24.7, 2462.0], [24.8, 2468.0], [24.9, 2468.0], [25.0, 2468.0], [25.1, 2468.0], [25.2, 2470.0], [25.3, 2470.0], [25.4, 2470.0], [25.5, 2470.0], [25.6, 2480.0], [25.7, 2480.0], [25.8, 2480.0], [25.9, 2480.0], [26.0, 2481.0], [26.1, 2481.0], [26.2, 2481.0], [26.3, 2481.0], [26.4, 2484.0], [26.5, 2484.0], [26.6, 2484.0], [26.7, 2484.0], [26.8, 2497.0], [26.9, 2497.0], [27.0, 2497.0], [27.1, 2497.0], [27.2, 2497.0], [27.3, 2497.0], [27.4, 2497.0], [27.5, 2497.0], [27.6, 2501.0], [27.7, 2501.0], [27.8, 2501.0], [27.9, 2501.0], [28.0, 2503.0], [28.1, 2503.0], [28.2, 2503.0], [28.3, 2503.0], [28.4, 2503.0], [28.5, 2503.0], [28.6, 2503.0], [28.7, 2503.0], [28.8, 2506.0], [28.9, 2506.0], [29.0, 2506.0], [29.1, 2506.0], [29.2, 2508.0], [29.3, 2508.0], [29.4, 2508.0], [29.5, 2508.0], [29.6, 2513.0], [29.7, 2513.0], [29.8, 2513.0], [29.9, 2513.0], [30.0, 2518.0], [30.1, 2518.0], [30.2, 2518.0], [30.3, 2518.0], [30.4, 2520.0], [30.5, 2520.0], [30.6, 2520.0], [30.7, 2520.0], [30.8, 2523.0], [30.9, 2523.0], [31.0, 2523.0], [31.1, 2523.0], [31.2, 2526.0], [31.3, 2526.0], [31.4, 2526.0], [31.5, 2526.0], [31.6, 2527.0], [31.7, 2527.0], [31.8, 2527.0], [31.9, 2527.0], [32.0, 2532.0], [32.1, 2532.0], [32.2, 2532.0], [32.3, 2532.0], [32.4, 2549.0], [32.5, 2549.0], [32.6, 2549.0], [32.7, 2549.0], [32.8, 2551.0], [32.9, 2551.0], [33.0, 2551.0], [33.1, 2551.0], [33.2, 2556.0], [33.3, 2556.0], [33.4, 2556.0], [33.5, 2556.0], [33.6, 2560.0], [33.7, 2560.0], [33.8, 2560.0], [33.9, 2560.0], [34.0, 2569.0], [34.1, 2569.0], [34.2, 2569.0], [34.3, 2569.0], [34.4, 2570.0], [34.5, 2570.0], [34.6, 2570.0], [34.7, 2570.0], [34.8, 2571.0], [34.9, 2571.0], [35.0, 2571.0], [35.1, 2571.0], [35.2, 2577.0], [35.3, 2577.0], [35.4, 2577.0], [35.5, 2577.0], [35.6, 2579.0], [35.7, 2579.0], [35.8, 2579.0], [35.9, 2579.0], [36.0, 2580.0], [36.1, 2580.0], [36.2, 2580.0], [36.3, 2580.0], [36.4, 2587.0], [36.5, 2587.0], [36.6, 2587.0], [36.7, 2587.0], [36.8, 2587.0], [36.9, 2587.0], [37.0, 2587.0], [37.1, 2587.0], [37.2, 2588.0], [37.3, 2588.0], [37.4, 2588.0], [37.5, 2588.0], [37.6, 2594.0], [37.7, 2594.0], [37.8, 2594.0], [37.9, 2594.0], [38.0, 2605.0], [38.1, 2605.0], [38.2, 2605.0], [38.3, 2605.0], [38.4, 2608.0], [38.5, 2608.0], [38.6, 2608.0], [38.7, 2608.0], [38.8, 2610.0], [38.9, 2610.0], [39.0, 2610.0], [39.1, 2610.0], [39.2, 2610.0], [39.3, 2610.0], [39.4, 2610.0], [39.5, 2610.0], [39.6, 2614.0], [39.7, 2614.0], [39.8, 2614.0], [39.9, 2614.0], [40.0, 2629.0], [40.1, 2629.0], [40.2, 2629.0], [40.3, 2629.0], [40.4, 2629.0], [40.5, 2629.0], [40.6, 2629.0], [40.7, 2629.0], [40.8, 2632.0], [40.9, 2632.0], [41.0, 2632.0], [41.1, 2632.0], [41.2, 2636.0], [41.3, 2636.0], [41.4, 2636.0], [41.5, 2636.0], [41.6, 2636.0], [41.7, 2636.0], [41.8, 2636.0], [41.9, 2636.0], [42.0, 2636.0], [42.1, 2636.0], [42.2, 2636.0], [42.3, 2636.0], [42.4, 2636.0], [42.5, 2636.0], [42.6, 2636.0], [42.7, 2636.0], [42.8, 2643.0], [42.9, 2643.0], [43.0, 2643.0], [43.1, 2643.0], [43.2, 2650.0], [43.3, 2650.0], [43.4, 2650.0], [43.5, 2650.0], [43.6, 2657.0], [43.7, 2657.0], [43.8, 2657.0], [43.9, 2657.0], [44.0, 2658.0], [44.1, 2658.0], [44.2, 2658.0], [44.3, 2658.0], [44.4, 2661.0], [44.5, 2661.0], [44.6, 2661.0], [44.7, 2661.0], [44.8, 2662.0], [44.9, 2662.0], [45.0, 2662.0], [45.1, 2662.0], [45.2, 2665.0], [45.3, 2665.0], [45.4, 2665.0], [45.5, 2665.0], [45.6, 2671.0], [45.7, 2671.0], [45.8, 2671.0], [45.9, 2671.0], [46.0, 2674.0], [46.1, 2674.0], [46.2, 2674.0], [46.3, 2674.0], [46.4, 2678.0], [46.5, 2678.0], [46.6, 2678.0], [46.7, 2678.0], [46.8, 2678.0], [46.9, 2678.0], [47.0, 2678.0], [47.1, 2678.0], [47.2, 2694.0], [47.3, 2694.0], [47.4, 2694.0], [47.5, 2694.0], [47.6, 2694.0], [47.7, 2694.0], [47.8, 2694.0], [47.9, 2694.0], [48.0, 2696.0], [48.1, 2696.0], [48.2, 2696.0], [48.3, 2696.0], [48.4, 2698.0], [48.5, 2698.0], [48.6, 2698.0], [48.7, 2698.0], [48.8, 2706.0], [48.9, 2706.0], [49.0, 2706.0], [49.1, 2706.0], [49.2, 2708.0], [49.3, 2708.0], [49.4, 2708.0], [49.5, 2708.0], [49.6, 2712.0], [49.7, 2712.0], [49.8, 2712.0], [49.9, 2712.0], [50.0, 2713.0], [50.1, 2713.0], [50.2, 2713.0], [50.3, 2713.0], [50.4, 2716.0], [50.5, 2716.0], [50.6, 2716.0], [50.7, 2716.0], [50.8, 2717.0], [50.9, 2717.0], [51.0, 2717.0], [51.1, 2717.0], [51.2, 2725.0], [51.3, 2725.0], [51.4, 2725.0], [51.5, 2725.0], [51.6, 2744.0], [51.7, 2744.0], [51.8, 2744.0], [51.9, 2744.0], [52.0, 2747.0], [52.1, 2747.0], [52.2, 2747.0], [52.3, 2747.0], [52.4, 2747.0], [52.5, 2747.0], [52.6, 2747.0], [52.7, 2747.0], [52.8, 2748.0], [52.9, 2748.0], [53.0, 2748.0], [53.1, 2748.0], [53.2, 2749.0], [53.3, 2749.0], [53.4, 2749.0], [53.5, 2749.0], [53.6, 2750.0], [53.7, 2750.0], [53.8, 2750.0], [53.9, 2750.0], [54.0, 2751.0], [54.1, 2751.0], [54.2, 2751.0], [54.3, 2751.0], [54.4, 2755.0], [54.5, 2755.0], [54.6, 2755.0], [54.7, 2755.0], [54.8, 2755.0], [54.9, 2755.0], [55.0, 2755.0], [55.1, 2755.0], [55.2, 2759.0], [55.3, 2759.0], [55.4, 2759.0], [55.5, 2759.0], [55.6, 2761.0], [55.7, 2761.0], [55.8, 2761.0], [55.9, 2761.0], [56.0, 2763.0], [56.1, 2763.0], [56.2, 2763.0], [56.3, 2763.0], [56.4, 2765.0], [56.5, 2765.0], [56.6, 2765.0], [56.7, 2765.0], [56.8, 2769.0], [56.9, 2769.0], [57.0, 2769.0], [57.1, 2769.0], [57.2, 2770.0], [57.3, 2770.0], [57.4, 2770.0], [57.5, 2770.0], [57.6, 2770.0], [57.7, 2770.0], [57.8, 2770.0], [57.9, 2770.0], [58.0, 2775.0], [58.1, 2775.0], [58.2, 2775.0], [58.3, 2775.0], [58.4, 2776.0], [58.5, 2776.0], [58.6, 2776.0], [58.7, 2776.0], [58.8, 2783.0], [58.9, 2783.0], [59.0, 2783.0], [59.1, 2783.0], [59.2, 2785.0], [59.3, 2785.0], [59.4, 2785.0], [59.5, 2785.0], [59.6, 2790.0], [59.7, 2790.0], [59.8, 2790.0], [59.9, 2790.0], [60.0, 2791.0], [60.1, 2791.0], [60.2, 2791.0], [60.3, 2791.0], [60.4, 2802.0], [60.5, 2802.0], [60.6, 2802.0], [60.7, 2802.0], [60.8, 2804.0], [60.9, 2804.0], [61.0, 2804.0], [61.1, 2804.0], [61.2, 2806.0], [61.3, 2806.0], [61.4, 2806.0], [61.5, 2806.0], [61.6, 2811.0], [61.7, 2811.0], [61.8, 2811.0], [61.9, 2811.0], [62.0, 2811.0], [62.1, 2811.0], [62.2, 2811.0], [62.3, 2811.0], [62.4, 2812.0], [62.5, 2812.0], [62.6, 2812.0], [62.7, 2812.0], [62.8, 2823.0], [62.9, 2823.0], [63.0, 2823.0], [63.1, 2823.0], [63.2, 2826.0], [63.3, 2826.0], [63.4, 2826.0], [63.5, 2826.0], [63.6, 2828.0], [63.7, 2828.0], [63.8, 2828.0], [63.9, 2828.0], [64.0, 2829.0], [64.1, 2829.0], [64.2, 2829.0], [64.3, 2829.0], [64.4, 2834.0], [64.5, 2834.0], [64.6, 2834.0], [64.7, 2834.0], [64.8, 2838.0], [64.9, 2838.0], [65.0, 2838.0], [65.1, 2838.0], [65.2, 2841.0], [65.3, 2841.0], [65.4, 2841.0], [65.5, 2841.0], [65.6, 2847.0], [65.7, 2847.0], [65.8, 2847.0], [65.9, 2847.0], [66.0, 2853.0], [66.1, 2853.0], [66.2, 2853.0], [66.3, 2853.0], [66.4, 2859.0], [66.5, 2859.0], [66.6, 2859.0], [66.7, 2859.0], [66.8, 2864.0], [66.9, 2864.0], [67.0, 2864.0], [67.1, 2864.0], [67.2, 2865.0], [67.3, 2865.0], [67.4, 2865.0], [67.5, 2865.0], [67.6, 2869.0], [67.7, 2869.0], [67.8, 2869.0], [67.9, 2869.0], [68.0, 2872.0], [68.1, 2872.0], [68.2, 2872.0], [68.3, 2872.0], [68.4, 2874.0], [68.5, 2874.0], [68.6, 2874.0], [68.7, 2874.0], [68.8, 2875.0], [68.9, 2875.0], [69.0, 2875.0], [69.1, 2875.0], [69.2, 2910.0], [69.3, 2910.0], [69.4, 2910.0], [69.5, 2910.0], [69.6, 2916.0], [69.7, 2916.0], [69.8, 2916.0], [69.9, 2916.0], [70.0, 2917.0], [70.1, 2917.0], [70.2, 2917.0], [70.3, 2917.0], [70.4, 3216.0], [70.5, 3216.0], [70.6, 3216.0], [70.7, 3216.0], [70.8, 3229.0], [70.9, 3229.0], [71.0, 3229.0], [71.1, 3229.0], [71.2, 3229.0], [71.3, 3229.0], [71.4, 3229.0], [71.5, 3229.0], [71.6, 3233.0], [71.7, 3233.0], [71.8, 3233.0], [71.9, 3233.0], [72.0, 3233.0], [72.1, 3233.0], [72.2, 3233.0], [72.3, 3233.0], [72.4, 3234.0], [72.5, 3234.0], [72.6, 3234.0], [72.7, 3234.0], [72.8, 3238.0], [72.9, 3238.0], [73.0, 3238.0], [73.1, 3238.0], [73.2, 3240.0], [73.3, 3240.0], [73.4, 3240.0], [73.5, 3240.0], [73.6, 3240.0], [73.7, 3240.0], [73.8, 3240.0], [73.9, 3240.0], [74.0, 3241.0], [74.1, 3241.0], [74.2, 3241.0], [74.3, 3241.0], [74.4, 3244.0], [74.5, 3244.0], [74.6, 3244.0], [74.7, 3244.0], [74.8, 3248.0], [74.9, 3248.0], [75.0, 3248.0], [75.1, 3248.0], [75.2, 3249.0], [75.3, 3249.0], [75.4, 3249.0], [75.5, 3249.0], [75.6, 3255.0], [75.7, 3255.0], [75.8, 3255.0], [75.9, 3255.0], [76.0, 3257.0], [76.1, 3257.0], [76.2, 3257.0], [76.3, 3257.0], [76.4, 3259.0], [76.5, 3259.0], [76.6, 3259.0], [76.7, 3259.0], [76.8, 3264.0], [76.9, 3264.0], [77.0, 3264.0], [77.1, 3264.0], [77.2, 3269.0], [77.3, 3269.0], [77.4, 3269.0], [77.5, 3269.0], [77.6, 3269.0], [77.7, 3269.0], [77.8, 3269.0], [77.9, 3269.0], [78.0, 3273.0], [78.1, 3273.0], [78.2, 3273.0], [78.3, 3273.0], [78.4, 3279.0], [78.5, 3279.0], [78.6, 3279.0], [78.7, 3279.0], [78.8, 3282.0], [78.9, 3282.0], [79.0, 3282.0], [79.1, 3282.0], [79.2, 3285.0], [79.3, 3285.0], [79.4, 3285.0], [79.5, 3285.0], [79.6, 3285.0], [79.7, 3289.0], [79.8, 3289.0], [79.9, 3289.0], [80.0, 3289.0], [80.1, 3293.0], [80.2, 3293.0], [80.3, 3293.0], [80.4, 3293.0], [80.5, 3301.0], [80.6, 3301.0], [80.7, 3301.0], [80.8, 3301.0], [80.9, 3312.0], [81.0, 3312.0], [81.1, 3312.0], [81.2, 3312.0], [81.3, 3313.0], [81.4, 3313.0], [81.5, 3313.0], [81.6, 3313.0], [81.7, 3317.0], [81.8, 3317.0], [81.9, 3317.0], [82.0, 3317.0], [82.1, 3318.0], [82.2, 3318.0], [82.3, 3318.0], [82.4, 3318.0], [82.5, 3319.0], [82.6, 3319.0], [82.7, 3319.0], [82.8, 3319.0], [82.9, 3319.0], [83.0, 3319.0], [83.1, 3319.0], [83.2, 3319.0], [83.3, 3324.0], [83.4, 3324.0], [83.5, 3324.0], [83.6, 3324.0], [83.7, 3325.0], [83.8, 3325.0], [83.9, 3325.0], [84.0, 3325.0], [84.1, 3326.0], [84.2, 3326.0], [84.3, 3326.0], [84.4, 3326.0], [84.5, 3329.0], [84.6, 3329.0], [84.7, 3329.0], [84.8, 3329.0], [84.9, 3330.0], [85.0, 3330.0], [85.1, 3330.0], [85.2, 3330.0], [85.3, 3331.0], [85.4, 3331.0], [85.5, 3331.0], [85.6, 3331.0], [85.7, 3331.0], [85.8, 3331.0], [85.9, 3331.0], [86.0, 3331.0], [86.1, 3336.0], [86.2, 3336.0], [86.3, 3336.0], [86.4, 3336.0], [86.5, 3342.0], [86.6, 3342.0], [86.7, 3342.0], [86.8, 3342.0], [86.9, 3347.0], [87.0, 3347.0], [87.1, 3347.0], [87.2, 3347.0], [87.3, 3363.0], [87.4, 3363.0], [87.5, 3363.0], [87.6, 3363.0], [87.7, 3366.0], [87.8, 3366.0], [87.9, 3366.0], [88.0, 3366.0], [88.1, 3369.0], [88.2, 3369.0], [88.3, 3369.0], [88.4, 3369.0], [88.5, 3376.0], [88.6, 3376.0], [88.7, 3376.0], [88.8, 3376.0], [88.9, 3380.0], [89.0, 3380.0], [89.1, 3380.0], [89.2, 3380.0], [89.3, 3381.0], [89.4, 3381.0], [89.5, 3381.0], [89.6, 3381.0], [89.7, 3386.0], [89.8, 3386.0], [89.9, 3386.0], [90.0, 3386.0], [90.1, 3388.0], [90.2, 3388.0], [90.3, 3388.0], [90.4, 3388.0], [90.5, 3389.0], [90.6, 3389.0], [90.7, 3389.0], [90.8, 3389.0], [90.9, 3391.0], [91.0, 3391.0], [91.1, 3391.0], [91.2, 3391.0], [91.3, 3393.0], [91.4, 3393.0], [91.5, 3393.0], [91.6, 3393.0], [91.7, 3397.0], [91.8, 3397.0], [91.9, 3397.0], [92.0, 3397.0], [92.1, 3397.0], [92.2, 3397.0], [92.3, 3397.0], [92.4, 3397.0], [92.5, 3400.0], [92.6, 3400.0], [92.7, 3400.0], [92.8, 3400.0], [92.9, 3406.0], [93.0, 3406.0], [93.1, 3406.0], [93.2, 3406.0], [93.3, 3418.0], [93.4, 3418.0], [93.5, 3418.0], [93.6, 3418.0], [93.7, 3425.0], [93.8, 3425.0], [93.9, 3425.0], [94.0, 3425.0], [94.1, 3440.0], [94.2, 3440.0], [94.3, 3440.0], [94.4, 3440.0], [94.5, 3441.0], [94.6, 3441.0], [94.7, 3441.0], [94.8, 3441.0], [94.9, 3445.0], [95.0, 3445.0], [95.1, 3445.0], [95.2, 3445.0], [95.3, 3445.0], [95.4, 3445.0], [95.5, 3445.0], [95.6, 3445.0], [95.7, 3446.0], [95.8, 3446.0], [95.9, 3446.0], [96.0, 3446.0], [96.1, 3468.0], [96.2, 3468.0], [96.3, 3468.0], [96.4, 3468.0], [96.5, 3468.0], [96.6, 3468.0], [96.7, 3468.0], [96.8, 3468.0], [96.9, 3471.0], [97.0, 3471.0], [97.1, 3471.0], [97.2, 3471.0], [97.3, 3477.0], [97.4, 3477.0], [97.5, 3477.0], [97.6, 3477.0], [97.7, 3483.0], [97.8, 3483.0], [97.9, 3483.0], [98.0, 3483.0], [98.1, 3487.0], [98.2, 3487.0], [98.3, 3487.0], [98.4, 3487.0], [98.5, 3488.0], [98.6, 3488.0], [98.7, 3488.0], [98.8, 3488.0], [98.9, 3492.0], [99.0, 3492.0], [99.1, 3492.0], [99.2, 3492.0], [99.3, 3497.0], [99.4, 3497.0], [99.5, 3497.0], [99.6, 3497.0], [99.7, 3501.0], [99.8, 3501.0], [99.9, 3501.0], [100.0, 3501.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[0.0, 4900.0], [0.1, 4900.0], [0.2, 4900.0], [0.3, 4900.0], [0.4, 4904.0], [0.5, 4904.0], [0.6, 4904.0], [0.7, 4904.0], [0.8, 4919.0], [0.9, 4919.0], [1.0, 4919.0], [1.1, 4919.0], [1.2, 4919.0], [1.3, 4931.0], [1.4, 4931.0], [1.5, 4931.0], [1.6, 4936.0], [1.7, 4936.0], [1.8, 4936.0], [1.9, 4936.0], [2.0, 4944.0], [2.1, 4944.0], [2.2, 4944.0], [2.3, 4944.0], [2.4, 4944.0], [2.5, 4944.0], [2.6, 4944.0], [2.7, 4944.0], [2.8, 4946.0], [2.9, 4946.0], [3.0, 4946.0], [3.1, 4946.0], [3.2, 4946.0], [3.3, 4946.0], [3.4, 4946.0], [3.5, 4946.0], [3.6, 4947.0], [3.7, 4947.0], [3.8, 4947.0], [3.9, 4947.0], [4.0, 4948.0], [4.1, 4948.0], [4.2, 4948.0], [4.3, 4948.0], [4.4, 4949.0], [4.5, 4949.0], [4.6, 4949.0], [4.7, 4949.0], [4.8, 4949.0], [4.9, 4949.0], [5.0, 4949.0], [5.1, 4949.0], [5.2, 4949.0], [5.3, 4949.0], [5.4, 4949.0], [5.5, 4949.0], [5.6, 4953.0], [5.7, 4953.0], [5.8, 4953.0], [5.9, 4953.0], [6.0, 4953.0], [6.1, 4953.0], [6.2, 4953.0], [6.3, 4953.0], [6.4, 4954.0], [6.5, 4954.0], [6.6, 4954.0], [6.7, 4954.0], [6.8, 4958.0], [6.9, 4958.0], [7.0, 4958.0], [7.1, 4958.0], [7.2, 4961.0], [7.3, 4961.0], [7.4, 4961.0], [7.5, 4961.0], [7.6, 4961.0], [7.7, 4962.0], [7.8, 4962.0], [7.9, 4962.0], [8.0, 4962.0], [8.1, 4962.0], [8.2, 4962.0], [8.3, 4962.0], [8.4, 4963.0], [8.5, 4963.0], [8.6, 4963.0], [8.7, 4963.0], [8.8, 4965.0], [8.9, 4965.0], [9.0, 4965.0], [9.1, 4965.0], [9.2, 4965.0], [9.3, 4965.0], [9.4, 4965.0], [9.5, 4965.0], [9.6, 4965.0], [9.7, 4965.0], [9.8, 4965.0], [9.9, 4965.0], [10.0, 4965.0], [10.1, 4965.0], [10.2, 4965.0], [10.3, 4965.0], [10.4, 4966.0], [10.5, 4966.0], [10.6, 4966.0], [10.7, 4966.0], [10.8, 4966.0], [10.9, 4966.0], [11.0, 4966.0], [11.1, 4966.0], [11.2, 4966.0], [11.3, 4967.0], [11.4, 4967.0], [11.5, 4967.0], [11.6, 4967.0], [11.7, 4967.0], [11.8, 4967.0], [11.9, 4967.0], [12.0, 4967.0], [12.1, 4968.0], [12.2, 4968.0], [12.3, 4968.0], [12.4, 4968.0], [12.5, 4969.0], [12.6, 4969.0], [12.7, 4969.0], [12.8, 4969.0], [12.9, 4970.0], [13.0, 4970.0], [13.1, 4970.0], [13.2, 4970.0], [13.3, 4970.0], [13.4, 4970.0], [13.5, 4970.0], [13.6, 4970.0], [13.7, 6862.0], [13.8, 6862.0], [13.9, 6862.0], [14.0, 6862.0], [14.1, 6883.0], [14.2, 6883.0], [14.3, 6883.0], [14.4, 6883.0], [14.5, 6892.0], [14.6, 6892.0], [14.7, 6892.0], [14.8, 6892.0], [14.9, 6900.0], [15.0, 6900.0], [15.1, 6900.0], [15.2, 6900.0], [15.3, 6906.0], [15.4, 6906.0], [15.5, 6906.0], [15.6, 6906.0], [15.7, 6909.0], [15.8, 6909.0], [15.9, 6909.0], [16.0, 6909.0], [16.1, 6911.0], [16.2, 6911.0], [16.3, 6911.0], [16.4, 6911.0], [16.5, 6912.0], [16.6, 6912.0], [16.7, 6912.0], [16.8, 6928.0], [16.9, 6928.0], [17.0, 6928.0], [17.1, 6928.0], [17.2, 6928.0], [17.3, 6928.0], [17.4, 6928.0], [17.5, 6928.0], [17.6, 6933.0], [17.7, 6933.0], [17.8, 6933.0], [17.9, 6933.0], [18.0, 6942.0], [18.1, 6942.0], [18.2, 6942.0], [18.3, 6942.0], [18.4, 6942.0], [18.5, 6942.0], [18.6, 6942.0], [18.7, 6942.0], [18.8, 6943.0], [18.9, 6943.0], [19.0, 6943.0], [19.1, 6943.0], [19.2, 6954.0], [19.3, 6954.0], [19.4, 6954.0], [19.5, 6954.0], [19.6, 6963.0], [19.7, 6963.0], [19.8, 6963.0], [19.9, 6963.0], [20.0, 6966.0], [20.1, 6966.0], [20.2, 6966.0], [20.3, 6966.0], [20.4, 6966.0], [20.5, 6966.0], [20.6, 6966.0], [20.7, 6966.0], [20.8, 6969.0], [20.9, 6969.0], [21.0, 6969.0], [21.1, 6969.0], [21.2, 6986.0], [21.3, 6986.0], [21.4, 6986.0], [21.5, 6986.0], [21.6, 6995.0], [21.7, 6995.0], [21.8, 6995.0], [21.9, 6995.0], [22.0, 6997.0], [22.1, 6997.0], [22.2, 6997.0], [22.3, 6997.0], [22.4, 7015.0], [22.5, 7015.0], [22.6, 7015.0], [22.7, 7015.0], [22.8, 7016.0], [22.9, 7016.0], [23.0, 7016.0], [23.1, 7016.0], [23.2, 7017.0], [23.3, 7017.0], [23.4, 7017.0], [23.5, 7017.0], [23.6, 7020.0], [23.7, 7020.0], [23.8, 7020.0], [23.9, 7020.0], [24.0, 7025.0], [24.1, 7025.0], [24.2, 7025.0], [24.3, 7025.0], [24.4, 7029.0], [24.5, 7029.0], [24.6, 7029.0], [24.7, 7029.0], [24.8, 7030.0], [24.9, 7030.0], [25.0, 7030.0], [25.1, 7030.0], [25.2, 7031.0], [25.3, 7031.0], [25.4, 7031.0], [25.5, 7031.0], [25.6, 7035.0], [25.7, 7035.0], [25.8, 7035.0], [25.9, 7035.0], [26.0, 7037.0], [26.1, 7037.0], [26.2, 7037.0], [26.3, 7037.0], [26.4, 7039.0], [26.5, 7039.0], [26.6, 7039.0], [26.7, 7039.0], [26.8, 7040.0], [26.9, 7040.0], [27.0, 7040.0], [27.1, 7040.0], [27.2, 7041.0], [27.3, 7041.0], [27.4, 7041.0], [27.5, 7041.0], [27.6, 7043.0], [27.7, 7043.0], [27.8, 7043.0], [27.9, 7043.0], [28.0, 7046.0], [28.1, 7046.0], [28.2, 7046.0], [28.3, 7046.0], [28.4, 7058.0], [28.5, 7058.0], [28.6, 7058.0], [28.7, 7058.0], [28.8, 7062.0], [28.9, 7062.0], [29.0, 7062.0], [29.1, 7062.0], [29.2, 7063.0], [29.3, 7063.0], [29.4, 7063.0], [29.5, 7063.0], [29.6, 7065.0], [29.7, 7065.0], [29.8, 7065.0], [29.9, 7065.0], [30.0, 7077.0], [30.1, 7077.0], [30.2, 7077.0], [30.3, 7077.0], [30.4, 7085.0], [30.5, 7085.0], [30.6, 7085.0], [30.7, 7085.0], [30.8, 7086.0], [30.9, 7086.0], [31.0, 7086.0], [31.1, 7086.0], [31.2, 7087.0], [31.3, 7087.0], [31.4, 7087.0], [31.5, 7087.0], [31.6, 7097.0], [31.7, 7097.0], [31.8, 7097.0], [31.9, 7097.0], [32.0, 7098.0], [32.1, 7098.0], [32.2, 7098.0], [32.3, 7098.0], [32.4, 7101.0], [32.5, 7101.0], [32.6, 7101.0], [32.7, 7101.0], [32.8, 7102.0], [32.9, 7102.0], [33.0, 7102.0], [33.1, 7102.0], [33.2, 7104.0], [33.3, 7104.0], [33.4, 7104.0], [33.5, 7104.0], [33.6, 7105.0], [33.7, 7105.0], [33.8, 7105.0], [33.9, 7105.0], [34.0, 7108.0], [34.1, 7108.0], [34.2, 7108.0], [34.3, 7108.0], [34.4, 7109.0], [34.5, 7109.0], [34.6, 7109.0], [34.7, 7109.0], [34.8, 7113.0], [34.9, 7113.0], [35.0, 7113.0], [35.1, 7113.0], [35.2, 7117.0], [35.3, 7117.0], [35.4, 7117.0], [35.5, 7117.0], [35.6, 7118.0], [35.7, 7118.0], [35.8, 7118.0], [35.9, 7118.0], [36.0, 7122.0], [36.1, 7122.0], [36.2, 7122.0], [36.3, 7122.0], [36.4, 7125.0], [36.5, 7125.0], [36.6, 7125.0], [36.7, 7125.0], [36.8, 7126.0], [36.9, 7126.0], [37.0, 7126.0], [37.1, 7126.0], [37.2, 7127.0], [37.3, 7127.0], [37.4, 7127.0], [37.5, 7127.0], [37.6, 7142.0], [37.7, 7142.0], [37.8, 7142.0], [37.9, 7142.0], [38.0, 7142.0], [38.1, 7142.0], [38.2, 7142.0], [38.3, 7142.0], [38.4, 7145.0], [38.5, 7145.0], [38.6, 7145.0], [38.7, 7145.0], [38.8, 7146.0], [38.9, 7146.0], [39.0, 7146.0], [39.1, 7146.0], [39.2, 7147.0], [39.3, 7147.0], [39.4, 7147.0], [39.5, 7147.0], [39.6, 7150.0], [39.7, 7150.0], [39.8, 7150.0], [39.9, 7150.0], [40.0, 7150.0], [40.1, 7150.0], [40.2, 7150.0], [40.3, 7150.0], [40.4, 7152.0], [40.5, 7152.0], [40.6, 7152.0], [40.7, 7152.0], [40.8, 7159.0], [40.9, 7159.0], [41.0, 7159.0], [41.1, 7159.0], [41.2, 7166.0], [41.3, 7166.0], [41.4, 7166.0], [41.5, 7166.0], [41.6, 7171.0], [41.7, 7171.0], [41.8, 7171.0], [41.9, 7171.0], [42.0, 7173.0], [42.1, 7173.0], [42.2, 7173.0], [42.3, 7173.0], [42.4, 7176.0], [42.5, 7176.0], [42.6, 7176.0], [42.7, 7176.0], [42.8, 7179.0], [42.9, 7179.0], [43.0, 7179.0], [43.1, 7179.0], [43.2, 7184.0], [43.3, 7184.0], [43.4, 7184.0], [43.5, 7184.0], [43.6, 7188.0], [43.7, 7188.0], [43.8, 7188.0], [43.9, 7188.0], [44.0, 7188.0], [44.1, 7188.0], [44.2, 7188.0], [44.3, 7188.0], [44.4, 7198.0], [44.5, 7198.0], [44.6, 7198.0], [44.7, 7198.0], [44.8, 7201.0], [44.9, 7201.0], [45.0, 7201.0], [45.1, 7201.0], [45.2, 7208.0], [45.3, 7208.0], [45.4, 7208.0], [45.5, 7208.0], [45.6, 7213.0], [45.7, 7213.0], [45.8, 7213.0], [45.9, 7213.0], [46.0, 7214.0], [46.1, 7214.0], [46.2, 7214.0], [46.3, 7214.0], [46.4, 7218.0], [46.5, 7218.0], [46.6, 7218.0], [46.7, 7218.0], [46.8, 7219.0], [46.9, 7219.0], [47.0, 7219.0], [47.1, 7219.0], [47.2, 7223.0], [47.3, 7223.0], [47.4, 7223.0], [47.5, 7223.0], [47.6, 7226.0], [47.7, 7226.0], [47.8, 7226.0], [47.9, 7226.0], [48.0, 7229.0], [48.1, 7229.0], [48.2, 7229.0], [48.3, 7229.0], [48.4, 7232.0], [48.5, 7232.0], [48.6, 7232.0], [48.7, 7232.0], [48.8, 7232.0], [48.9, 7232.0], [49.0, 7232.0], [49.1, 7232.0], [49.2, 7236.0], [49.3, 7236.0], [49.4, 7236.0], [49.5, 7236.0], [49.6, 7241.0], [49.7, 7241.0], [49.8, 7241.0], [49.9, 7241.0], [50.0, 7257.0], [50.1, 7257.0], [50.2, 7257.0], [50.3, 7257.0], [50.4, 7260.0], [50.5, 7260.0], [50.6, 7260.0], [50.7, 7260.0], [50.8, 7261.0], [50.9, 7261.0], [51.0, 7261.0], [51.1, 7261.0], [51.2, 7264.0], [51.3, 7264.0], [51.4, 7264.0], [51.5, 7264.0], [51.6, 7264.0], [51.7, 7264.0], [51.8, 7264.0], [51.9, 7264.0], [52.0, 7268.0], [52.1, 7268.0], [52.2, 7268.0], [52.3, 7268.0], [52.4, 7271.0], [52.5, 7271.0], [52.6, 7271.0], [52.7, 7271.0], [52.8, 7277.0], [52.9, 7277.0], [53.0, 7277.0], [53.1, 7277.0], [53.2, 7278.0], [53.3, 7278.0], [53.4, 7278.0], [53.5, 7278.0], [53.6, 7280.0], [53.7, 7280.0], [53.8, 7280.0], [53.9, 7280.0], [54.0, 7284.0], [54.1, 7284.0], [54.2, 7284.0], [54.3, 7284.0], [54.4, 7285.0], [54.5, 7285.0], [54.6, 7285.0], [54.7, 7285.0], [54.8, 7288.0], [54.9, 7288.0], [55.0, 7288.0], [55.1, 7288.0], [55.2, 7290.0], [55.3, 7290.0], [55.4, 7290.0], [55.5, 7290.0], [55.6, 7292.0], [55.7, 7292.0], [55.8, 7292.0], [55.9, 7292.0], [56.0, 7293.0], [56.1, 7293.0], [56.2, 7293.0], [56.3, 7293.0], [56.4, 7295.0], [56.5, 7295.0], [56.6, 7295.0], [56.7, 7295.0], [56.8, 7302.0], [56.9, 7302.0], [57.0, 7302.0], [57.1, 7302.0], [57.2, 7306.0], [57.3, 7306.0], [57.4, 7306.0], [57.5, 7306.0], [57.6, 7307.0], [57.7, 7307.0], [57.8, 7307.0], [57.9, 7307.0], [58.0, 7312.0], [58.1, 7312.0], [58.2, 7312.0], [58.3, 7312.0], [58.4, 7317.0], [58.5, 7317.0], [58.6, 7317.0], [58.7, 7317.0], [58.8, 7323.0], [58.9, 7323.0], [59.0, 7323.0], [59.1, 7323.0], [59.2, 7327.0], [59.3, 7327.0], [59.4, 7327.0], [59.5, 7327.0], [59.6, 7327.0], [59.7, 7327.0], [59.8, 7327.0], [59.9, 7327.0], [60.0, 7328.0], [60.1, 7328.0], [60.2, 7328.0], [60.3, 7328.0], [60.4, 7334.0], [60.5, 7334.0], [60.6, 7334.0], [60.7, 7334.0], [60.8, 7335.0], [60.9, 7335.0], [61.0, 7335.0], [61.1, 7335.0], [61.2, 7337.0], [61.3, 7337.0], [61.4, 7337.0], [61.5, 7337.0], [61.6, 7338.0], [61.7, 7338.0], [61.8, 7338.0], [61.9, 7338.0], [62.0, 7348.0], [62.1, 7348.0], [62.2, 7348.0], [62.3, 7348.0], [62.4, 7356.0], [62.5, 7356.0], [62.6, 7356.0], [62.7, 7356.0], [62.8, 7356.0], [62.9, 7356.0], [63.0, 7356.0], [63.1, 7356.0], [63.2, 7358.0], [63.3, 7358.0], [63.4, 7358.0], [63.5, 7358.0], [63.6, 7360.0], [63.7, 7360.0], [63.8, 7360.0], [63.9, 7360.0], [64.0, 7364.0], [64.1, 7364.0], [64.2, 7364.0], [64.3, 7364.0], [64.4, 7373.0], [64.5, 7373.0], [64.6, 7373.0], [64.7, 7373.0], [64.8, 7374.0], [64.9, 7374.0], [65.0, 7374.0], [65.1, 7374.0], [65.2, 7375.0], [65.3, 7375.0], [65.4, 7375.0], [65.5, 7375.0], [65.6, 7385.0], [65.7, 7385.0], [65.8, 7385.0], [65.9, 7385.0], [66.0, 7387.0], [66.1, 7387.0], [66.2, 7387.0], [66.3, 7387.0], [66.4, 7390.0], [66.5, 7390.0], [66.6, 7390.0], [66.7, 7390.0], [66.8, 7391.0], [66.9, 7391.0], [67.0, 7391.0], [67.1, 7391.0], [67.2, 7395.0], [67.3, 7395.0], [67.4, 7395.0], [67.5, 7395.0], [67.6, 7399.0], [67.7, 7399.0], [67.8, 7399.0], [67.9, 7399.0], [68.0, 7400.0], [68.1, 7400.0], [68.2, 7400.0], [68.3, 7400.0], [68.4, 7401.0], [68.5, 7401.0], [68.6, 7401.0], [68.7, 7401.0], [68.8, 7408.0], [68.9, 7408.0], [69.0, 7408.0], [69.1, 7408.0], [69.2, 7436.0], [69.3, 7436.0], [69.4, 7436.0], [69.5, 7436.0], [69.6, 7440.0], [69.7, 7440.0], [69.8, 7440.0], [69.9, 7440.0], [70.0, 7440.0], [70.1, 7440.0], [70.2, 7440.0], [70.3, 7440.0], [70.4, 7716.0], [70.5, 7716.0], [70.6, 7716.0], [70.7, 7716.0], [70.8, 7720.0], [70.9, 7720.0], [71.0, 7720.0], [71.1, 7720.0], [71.2, 7722.0], [71.3, 7722.0], [71.4, 7722.0], [71.5, 7722.0], [71.6, 7726.0], [71.7, 7726.0], [71.8, 7726.0], [71.9, 7726.0], [72.0, 7731.0], [72.1, 7731.0], [72.2, 7731.0], [72.3, 7731.0], [72.4, 7736.0], [72.5, 7736.0], [72.6, 7736.0], [72.7, 7736.0], [72.8, 7742.0], [72.9, 7742.0], [73.0, 7742.0], [73.1, 7742.0], [73.2, 7745.0], [73.3, 7745.0], [73.4, 7745.0], [73.5, 7745.0], [73.6, 7867.0], [73.7, 7867.0], [73.8, 7867.0], [73.9, 7867.0], [74.0, 7867.0], [74.1, 7867.0], [74.2, 7867.0], [74.3, 7867.0], [74.4, 7872.0], [74.5, 7872.0], [74.6, 7872.0], [74.7, 7872.0], [74.8, 7873.0], [74.9, 7873.0], [75.0, 7873.0], [75.1, 7873.0], [75.2, 7875.0], [75.3, 7875.0], [75.4, 7875.0], [75.5, 7875.0], [75.6, 7885.0], [75.7, 7885.0], [75.8, 7885.0], [75.9, 7885.0], [76.0, 7888.0], [76.1, 7888.0], [76.2, 7888.0], [76.3, 7888.0], [76.4, 7891.0], [76.5, 7891.0], [76.6, 7891.0], [76.7, 7891.0], [76.8, 7901.0], [76.9, 7901.0], [77.0, 7901.0], [77.1, 7901.0], [77.2, 7911.0], [77.3, 7911.0], [77.4, 7911.0], [77.5, 7911.0], [77.6, 7911.0], [77.7, 7913.0], [77.8, 7913.0], [77.9, 7913.0], [78.0, 7913.0], [78.1, 7914.0], [78.2, 7914.0], [78.3, 7914.0], [78.4, 7914.0], [78.5, 7914.0], [78.6, 7914.0], [78.7, 7914.0], [78.8, 7914.0], [78.9, 7915.0], [79.0, 7915.0], [79.1, 7915.0], [79.2, 7915.0], [79.3, 7916.0], [79.4, 7916.0], [79.5, 7916.0], [79.6, 7916.0], [79.7, 7919.0], [79.8, 7919.0], [79.9, 7919.0], [80.0, 7919.0], [80.1, 7922.0], [80.2, 7922.0], [80.3, 7922.0], [80.4, 7922.0], [80.5, 7928.0], [80.6, 7928.0], [80.7, 7928.0], [80.8, 7928.0], [80.9, 7940.0], [81.0, 7940.0], [81.1, 7940.0], [81.2, 7940.0], [81.3, 7943.0], [81.4, 7943.0], [81.5, 7943.0], [81.6, 7943.0], [81.7, 7946.0], [81.8, 7946.0], [81.9, 7946.0], [82.0, 7946.0], [82.1, 7955.0], [82.2, 7955.0], [82.3, 7955.0], [82.4, 7955.0], [82.5, 7960.0], [82.6, 7960.0], [82.7, 7960.0], [82.8, 7960.0], [82.9, 7960.0], [83.0, 7960.0], [83.1, 7960.0], [83.2, 7960.0], [83.3, 7962.0], [83.4, 7962.0], [83.5, 7962.0], [83.6, 7962.0], [83.7, 7966.0], [83.8, 7966.0], [83.9, 7966.0], [84.0, 7966.0], [84.1, 7968.0], [84.2, 7968.0], [84.3, 7968.0], [84.4, 7968.0], [84.5, 7970.0], [84.6, 7970.0], [84.7, 7970.0], [84.8, 7970.0], [84.9, 7973.0], [85.0, 7973.0], [85.1, 7973.0], [85.2, 7973.0], [85.3, 7979.0], [85.4, 7979.0], [85.5, 7979.0], [85.6, 7979.0], [85.7, 7979.0], [85.8, 7979.0], [85.9, 7979.0], [86.0, 7979.0], [86.1, 7981.0], [86.2, 7981.0], [86.3, 7981.0], [86.4, 7981.0], [86.5, 7986.0], [86.6, 7986.0], [86.7, 7986.0], [86.8, 7986.0], [86.9, 7992.0], [87.0, 7992.0], [87.1, 7992.0], [87.2, 7992.0], [87.3, 8004.0], [87.4, 8004.0], [87.5, 8004.0], [87.6, 8004.0], [87.7, 8006.0], [87.8, 8006.0], [87.9, 8006.0], [88.0, 8006.0], [88.1, 8009.0], [88.2, 8009.0], [88.3, 8009.0], [88.4, 8009.0], [88.5, 8017.0], [88.6, 8017.0], [88.7, 8017.0], [88.8, 8017.0], [88.9, 8017.0], [89.0, 8017.0], [89.1, 8017.0], [89.2, 8017.0], [89.3, 8021.0], [89.4, 8021.0], [89.5, 8021.0], [89.6, 8021.0], [89.7, 8022.0], [89.8, 8022.0], [89.9, 8022.0], [90.0, 8022.0], [90.1, 8025.0], [90.2, 8025.0], [90.3, 8025.0], [90.4, 8025.0], [90.5, 8029.0], [90.6, 8029.0], [90.7, 8029.0], [90.8, 8029.0], [90.9, 8033.0], [91.0, 8033.0], [91.1, 8033.0], [91.2, 8033.0], [91.3, 8037.0], [91.4, 8037.0], [91.5, 8037.0], [91.6, 8037.0], [91.7, 8043.0], [91.8, 8043.0], [91.9, 8043.0], [92.0, 8043.0], [92.1, 8048.0], [92.2, 8048.0], [92.3, 8048.0], [92.4, 8048.0], [92.5, 8049.0], [92.6, 8049.0], [92.7, 8049.0], [92.8, 8049.0], [92.9, 8049.0], [93.0, 8049.0], [93.1, 8049.0], [93.2, 8049.0], [93.3, 8056.0], [93.4, 8056.0], [93.5, 8056.0], [93.6, 8056.0], [93.7, 8071.0], [93.8, 8071.0], [93.9, 8071.0], [94.0, 8071.0], [94.1, 8075.0], [94.2, 8075.0], [94.3, 8075.0], [94.4, 8075.0], [94.5, 8076.0], [94.6, 8076.0], [94.7, 8076.0], [94.8, 8076.0], [94.9, 8076.0], [95.0, 8076.0], [95.1, 8076.0], [95.2, 8076.0], [95.3, 8077.0], [95.4, 8077.0], [95.5, 8077.0], [95.6, 8077.0], [95.7, 8095.0], [95.8, 8095.0], [95.9, 8095.0], [96.0, 8095.0], [96.1, 8099.0], [96.2, 8099.0], [96.3, 8099.0], [96.4, 8099.0], [96.5, 8100.0], [96.6, 8100.0], [96.7, 8100.0], [96.8, 8100.0], [96.9, 8105.0], [97.0, 8105.0], [97.1, 8105.0], [97.2, 8105.0], [97.3, 8108.0], [97.4, 8108.0], [97.5, 8108.0], [97.6, 8108.0], [97.7, 8113.0], [97.8, 8113.0], [97.9, 8113.0], [98.0, 8113.0], [98.1, 8121.0], [98.2, 8121.0], [98.3, 8121.0], [98.4, 8121.0], [98.5, 8124.0], [98.6, 8124.0], [98.7, 8124.0], [98.8, 8124.0], [98.9, 8126.0], [99.0, 8126.0], [99.1, 8126.0], [99.2, 8126.0], [99.3, 8129.0], [99.4, 8129.0], [99.5, 8129.0], [99.6, 8129.0], [99.7, 8137.0], [99.8, 8137.0], [99.9, 8137.0], [100.0, 8137.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 76.0, "series": [{"data": [[4200.0, 10.0], [2200.0, 32.0], [3400.0, 3.0], [3500.0, 76.0], [3600.0, 62.0], [3800.0, 9.0], [3900.0, 57.0], [4000.0, 1.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[600.0, 19.0], [700.0, 47.0], [400.0, 2.0], [100.0, 1.0], [800.0, 32.0], [200.0, 8.0], [900.0, 74.0], [1900.0, 32.0], [1000.0, 35.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[2300.0, 11.0], [600.0, 1.0], [2400.0, 24.0], [2500.0, 26.0], [2600.0, 27.0], [700.0, 31.0], [2800.0, 22.0], [2700.0, 29.0], [2900.0, 3.0], [200.0, 2.0], [3200.0, 25.0], [3300.0, 30.0], [3400.0, 18.0], [3500.0, 1.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[4900.0, 34.0], [6900.0, 19.0], [6800.0, 3.0], [7100.0, 31.0], [7000.0, 25.0], [7300.0, 28.0], [7400.0, 6.0], [7200.0, 30.0], [7700.0, 8.0], [7900.0, 26.0], [7800.0, 8.0], [8000.0, 23.0], [8100.0, 9.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 13.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 498.0, "series": [{"data": [[0.0, 13.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 239.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 498.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 186.67634854771774, "minX": 1.6077309E12, "maxY": 203.80555555555554, "series": [{"data": [[1.6077309E12, 203.80555555555554], [1.60773096E12, 186.67634854771774]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 249.0, "minX": 1.0, "maxY": 8125.0, "series": [{"data": [[2.0, 3891.0], [4.0, 3919.0], [6.0, 3897.5], [8.0, 3903.5], [10.0, 3889.0], [13.0, 3912.0], [14.0, 3894.0], [19.0, 3908.4], [22.0, 3899.6666666666665], [23.0, 3903.0], [24.0, 3919.0], [25.0, 3920.0], [26.0, 3920.0], [29.0, 3922.3333333333335], [31.0, 3926.5], [32.0, 3928.0], [35.0, 3928.0], [34.0, 3929.0], [38.0, 3927.6666666666665], [44.0, 3934.166666666667], [47.0, 3941.5], [49.0, 3952.0], [51.0, 3948.0], [50.0, 3934.6666666666665], [55.0, 3952.75], [59.0, 3957.0], [63.0, 3957.5], [66.0, 3965.625], [64.0, 3958.0], [71.0, 4210.0], [70.0, 4211.0], [69.0, 4210.0], [74.0, 4209.0], [73.0, 4209.0], [77.0, 3600.0], [76.0, 3599.5], [83.0, 3613.0], [82.0, 3609.6666666666665], [81.0, 3604.0], [86.0, 3608.0], [91.0, 3622.0], [90.0, 3611.0], [88.0, 3610.4], [93.0, 3620.0], [99.0, 3623.5], [97.0, 3628.0], [96.0, 3617.3333333333335], [102.0, 3556.0], [101.0, 3529.0], [107.0, 3494.0], [106.0, 3506.0], [105.0, 3502.0], [111.0, 3554.3333333333335], [108.0, 3506.6666666666665], [114.0, 3504.5], [113.0, 3501.0], [118.0, 3519.25], [123.0, 3527.0], [122.0, 3526.0], [120.0, 3528.0], [126.0, 3529.0], [124.0, 3535.0], [134.0, 3535.6666666666665], [135.0, 3567.0], [131.0, 3556.0], [129.0, 3597.0], [128.0, 3564.6666666666665], [143.0, 3556.0], [140.0, 3555.0], [138.0, 3557.6666666666665], [151.0, 3566.0], [149.0, 3587.0], [146.0, 3586.0], [144.0, 3562.0], [155.0, 3569.0], [154.0, 3573.0], [167.0, 3593.5], [165.0, 3607.75], [163.0, 3578.6], [162.0, 3578.2], [160.0, 3559.0], [175.0, 3592.0], [170.0, 3590.6666666666665], [183.0, 3634.0], [182.0, 3604.0], [180.0, 3654.5], [177.0, 3638.0], [188.0, 3610.5], [186.0, 3591.5], [197.0, 3631.4], [195.0, 3620.0], [194.0, 3606.5], [192.0, 3594.0], [205.0, 3649.0], [204.0, 3637.0], [203.0, 3636.6666666666665], [215.0, 3657.375], [214.0, 3651.0], [212.0, 3601.0], [208.0, 3646.0], [221.0, 2261.3333333333335], [219.0, 2265.0], [217.0, 2266.0], [216.0, 4094.0], [230.0, 2268.0], [228.0, 2258.0], [224.0, 2258.6666666666665], [237.0, 2261.0], [235.0, 2264.5], [233.0, 2251.75], [247.0, 2267.0], [246.0, 2271.0], [244.0, 2263.5], [242.0, 2256.0], [240.0, 2265.0], [250.0, 4223.0], [249.0, 4223.0], [248.0, 2266.0], [1.0, 3901.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[127.90399999999998, 3536.3720000000003]], "isOverall": false, "label": "GET Home-Aggregated", "isController": false}, {"data": [[201.0, 430.0], [250.0, 993.5403225806451]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[249.60799999999998, 989.0320000000004]], "isOverall": false, "label": "POST Login-Aggregated", "isController": false}, {"data": [[92.0, 249.0], [210.0, 719.2], [211.0, 719.875], [212.0, 717.0], [213.0, 727.0], [250.0, 2876.1759259259293]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[243.73999999999995, 2579.144000000002]], "isOverall": false, "label": "GET Login-Aggregated", "isController": false}, {"data": [[2.0, 8017.0], [4.0, 8125.0], [6.0, 8019.0], [8.0, 7985.0], [10.0, 8112.5], [13.0, 7913.333333333333], [14.0, 8105.0], [19.0, 7969.6], [22.0, 8099.666666666667], [23.0, 7946.0], [24.0, 8075.0], [25.0, 7914.0], [26.0, 8108.0], [29.0, 7969.0], [31.0, 7905.0], [32.0, 7960.0], [35.0, 7955.0], [34.0, 8071.0], [38.0, 7971.333333333333], [44.0, 7949.166666666667], [47.0, 8021.0], [49.0, 8076.0], [51.0, 7979.0], [50.0, 7947.0], [55.0, 7975.0], [59.0, 8048.0], [63.0, 7954.0], [66.0, 8006.249999999999], [64.0, 7913.0], [71.0, 7742.0], [70.0, 7720.0], [69.0, 7732.333333333333], [74.0, 7722.0], [73.0, 7728.5], [77.0, 7198.0], [76.0, 7130.5], [83.0, 7101.0], [82.0, 7141.666666666667], [81.0, 7223.0], [86.0, 7062.0], [91.0, 7109.0], [90.0, 7212.5], [88.0, 7132.0], [93.0, 7307.5], [99.0, 7138.0], [97.0, 7214.0], [96.0, 7198.333333333333], [102.0, 7236.0], [101.0, 7128.0], [107.0, 7257.0], [106.0, 6995.0], [105.0, 7118.0], [111.0, 6965.0], [108.0, 7199.333333333333], [114.0, 7032.0], [113.0, 7213.0], [118.0, 7098.75], [123.0, 7056.5], [122.0, 7219.0], [120.0, 7226.0], [126.0, 7142.0], [124.0, 7166.0], [134.0, 7042.666666666667], [135.0, 7173.0], [131.0, 6900.0], [129.0, 7030.0], [128.0, 7276.666666666667], [143.0, 7016.0], [140.0, 7004.5], [138.0, 7018.0], [151.0, 7176.0], [149.0, 6997.0], [146.0, 7037.0], [144.0, 7179.0], [154.0, 7059.5], [155.0, 7125.0], [167.0, 7058.5], [165.0, 7205.375], [163.0, 7054.0], [162.0, 7130.8], [160.0, 6966.0], [175.0, 7062.0], [170.0, 7041.0], [183.0, 7440.0], [182.0, 7152.0], [180.0, 7379.25], [177.0, 7290.0], [188.0, 7179.0], [186.0, 7174.5], [197.0, 7329.6], [195.0, 7277.0], [194.0, 7248.5], [192.0, 7046.0], [204.0, 7436.0], [205.0, 7373.5], [203.0, 7338.666666666667], [215.0, 7357.125], [214.0, 7324.5], [212.0, 7264.0], [208.0, 7295.0], [221.0, 4966.666666666667], [219.0, 4969.0], [217.0, 4970.0], [216.0, 6942.0], [230.0, 4966.0], [228.0, 4960.0], [224.0, 4956.666666666667], [237.0, 4950.0], [235.0, 4963.5], [233.0, 4964.25], [247.0, 4949.0], [246.0, 4946.0], [244.0, 4936.5], [242.0, 4936.0], [240.0, 4953.0], [250.0, 4900.0], [249.0, 4904.0], [248.0, 4949.0], [1.0, 8124.0]], "isOverall": false, "label": "Login", "isController": true}, {"data": [[127.90399999999998, 7104.548000000001]], "isOverall": false, "label": "Login-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 250.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 257.73333333333335, "minX": 1.6077309E12, "maxY": 69969.05, "series": [{"data": [[1.6077309E12, 1356.8], [1.60773096E12, 69969.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6077309E12, 257.73333333333335], [1.60773096E12, 7208.933333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 430.0, "minX": 1.6077309E12, "maxY": 7104.548000000001, "series": [{"data": [[1.60773096E12, 3536.3720000000003]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.6077309E12, 430.0], [1.60773096E12, 993.5403225806451]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.6077309E12, 692.1176470588235], [1.60773096E12, 2876.1759259259293]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60773096E12, 7104.548000000001]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 430.0, "minX": 1.6077309E12, "maxY": 6990.508, "series": [{"data": [[1.60773096E12, 3503.768]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.6077309E12, 430.0], [1.60773096E12, 993.5241935483875]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.6077309E12, 691.9411764705883], [1.60773096E12, 2781.967592592594]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60773096E12, 6990.508]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6077309E12, "maxY": 93.82352941176471, "series": [{"data": [[1.60773096E12, 0.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.6077309E12, 0.0], [1.60773096E12, 0.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.6077309E12, 93.82352941176471], [1.60773096E12, 44.787037037037074]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60773096E12, 51.456000000000024]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 152.0, "minX": 1.6077309E12, "maxY": 4223.0, "series": [{"data": [[1.6077309E12, 729.0], [1.60773096E12, 4223.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6077309E12, 249.0], [1.60773096E12, 277.43499982953074]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6077309E12, 249.0], [1.60773096E12, 278.4710004091263]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6077309E12, 249.0], [1.60773096E12, 277.79249991476536]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6077309E12, 249.0], [1.60773096E12, 152.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6077309E12, 722.0], [1.60773096E12, 2659.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 338.5, "minX": 4.0, "maxY": 4210.0, "series": [{"data": [[4.0, 338.5], [32.0, 722.5], [8.0, 4210.0], [66.0, 3927.5], [142.0, 3593.5], [162.0, 2599.5], [100.0, 721.0], [13.0, 1963.0], [223.0, 992.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 223.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 337.0, "minX": 4.0, "maxY": 4176.0, "series": [{"data": [[4.0, 337.0], [32.0, 722.5], [8.0, 4176.0], [66.0, 3904.0], [142.0, 3545.0], [162.0, 2501.5], [100.0, 721.0], [13.0, 1963.0], [223.0, 992.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 223.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.766666666666667, "minX": 1.6077309E12, "maxY": 7.733333333333333, "series": [{"data": [[1.6077309E12, 4.766666666666667], [1.60773096E12, 7.733333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.6077309E12, "maxY": 11.9, "series": [{"data": [[1.6077309E12, 0.6], [1.60773096E12, 11.9]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6077309E12, "maxY": 4.166666666666667, "series": [{"data": [[1.60773096E12, 4.166666666666667]], "isOverall": false, "label": "GET Home-success", "isController": false}, {"data": [[1.6077309E12, 0.5666666666666667], [1.60773096E12, 3.6]], "isOverall": false, "label": "GET Login-success", "isController": false}, {"data": [[1.6077309E12, 0.03333333333333333], [1.60773096E12, 4.133333333333334]], "isOverall": false, "label": "POST Login-success", "isController": false}, {"data": [[1.60773096E12, 4.166666666666667]], "isOverall": false, "label": "Login-success", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.6077309E12, "maxY": 16.066666666666666, "series": [{"data": [[1.6077309E12, 0.6], [1.60773096E12, 16.066666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

