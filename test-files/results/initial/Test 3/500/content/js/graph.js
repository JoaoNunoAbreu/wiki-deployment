/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 94.0, "minX": 0.0, "maxY": 19427.0, "series": [{"data": [[0.0, 94.0], [0.1, 94.0], [0.2, 117.0], [0.3, 117.0], [0.4, 117.0], [0.5, 117.0], [0.6, 117.0], [0.7, 157.0], [0.8, 159.0], [0.9, 159.0], [1.0, 5940.0], [1.1, 5940.0], [1.2, 5942.0], [1.3, 5942.0], [1.4, 5942.0], [1.5, 5942.0], [1.6, 5946.0], [1.7, 5946.0], [1.8, 5946.0], [1.9, 5946.0], [2.0, 5947.0], [2.1, 5947.0], [2.2, 5947.0], [2.3, 5947.0], [2.4, 5948.0], [2.5, 5948.0], [2.6, 5951.0], [2.7, 5951.0], [2.8, 5951.0], [2.9, 5954.0], [3.0, 5954.0], [3.1, 5955.0], [3.2, 5955.0], [3.3, 5956.0], [3.4, 5956.0], [3.5, 5957.0], [3.6, 5957.0], [3.7, 5959.0], [3.8, 5959.0], [3.9, 5960.0], [4.0, 5960.0], [4.1, 5961.0], [4.2, 5961.0], [4.3, 5961.0], [4.4, 5961.0], [4.5, 5962.0], [4.6, 5962.0], [4.7, 5962.0], [4.8, 5962.0], [4.9, 5965.0], [5.0, 5965.0], [5.1, 5966.0], [5.2, 5966.0], [5.3, 5968.0], [5.4, 5968.0], [5.5, 5970.0], [5.6, 5970.0], [5.7, 5971.0], [5.8, 5971.0], [5.9, 5973.0], [6.0, 5973.0], [6.1, 5974.0], [6.2, 5974.0], [6.3, 5975.0], [6.4, 5975.0], [6.5, 5976.0], [6.6, 5976.0], [6.7, 5978.0], [6.8, 5978.0], [6.9, 5979.0], [7.0, 5979.0], [7.1, 5979.0], [7.2, 5979.0], [7.3, 5979.0], [7.4, 5979.0], [7.5, 5981.0], [7.6, 5981.0], [7.7, 5983.0], [7.8, 5983.0], [7.9, 5984.0], [8.0, 5984.0], [8.1, 5986.0], [8.2, 5986.0], [8.3, 5986.0], [8.4, 5986.0], [8.5, 5988.0], [8.6, 5988.0], [8.7, 5989.0], [8.8, 5989.0], [8.9, 5990.0], [9.0, 5990.0], [9.1, 5990.0], [9.2, 5990.0], [9.3, 5993.0], [9.4, 5993.0], [9.5, 5995.0], [9.6, 5995.0], [9.7, 5996.0], [9.8, 5998.0], [9.9, 5998.0], [10.0, 5998.0], [10.1, 5998.0], [10.2, 5998.0], [10.3, 5999.0], [10.4, 5999.0], [10.5, 5999.0], [10.6, 5999.0], [10.7, 6003.0], [10.8, 6005.0], [10.9, 6005.0], [11.0, 6006.0], [11.1, 6006.0], [11.2, 6007.0], [11.3, 6007.0], [11.4, 6009.0], [11.5, 6009.0], [11.6, 6010.0], [11.7, 6010.0], [11.8, 6013.0], [11.9, 6013.0], [12.0, 6013.0], [12.1, 6013.0], [12.2, 6014.0], [12.3, 6014.0], [12.4, 6015.0], [12.5, 6015.0], [12.6, 6015.0], [12.7, 6015.0], [12.8, 6017.0], [12.9, 6017.0], [13.0, 6019.0], [13.1, 6019.0], [13.2, 6019.0], [13.3, 6019.0], [13.4, 6022.0], [13.5, 6022.0], [13.6, 6022.0], [13.7, 6022.0], [13.8, 6024.0], [13.9, 6024.0], [14.0, 6025.0], [14.1, 6025.0], [14.2, 6027.0], [14.3, 6027.0], [14.4, 6029.0], [14.5, 6029.0], [14.6, 6030.0], [14.7, 6030.0], [14.8, 6031.0], [14.9, 6031.0], [15.0, 6033.0], [15.1, 6033.0], [15.2, 6036.0], [15.3, 6036.0], [15.4, 6037.0], [15.5, 6037.0], [15.6, 6037.0], [15.7, 6037.0], [15.8, 6037.0], [15.9, 6037.0], [16.0, 6039.0], [16.1, 6039.0], [16.2, 6039.0], [16.3, 6039.0], [16.4, 6043.0], [16.5, 6043.0], [16.6, 6043.0], [16.7, 6043.0], [16.8, 6044.0], [16.9, 6044.0], [17.0, 6046.0], [17.1, 6046.0], [17.2, 6055.0], [17.3, 6055.0], [17.4, 6056.0], [17.5, 6056.0], [17.6, 6057.0], [17.7, 6057.0], [17.8, 6061.0], [17.9, 6061.0], [18.0, 6061.0], [18.1, 6061.0], [18.2, 6061.0], [18.3, 6061.0], [18.4, 6062.0], [18.5, 6062.0], [18.6, 6062.0], [18.7, 6062.0], [18.8, 6062.0], [18.9, 6062.0], [19.0, 6062.0], [19.1, 6062.0], [19.2, 6062.0], [19.3, 6062.0], [19.4, 6062.0], [19.5, 6062.0], [19.6, 6063.0], [19.7, 6063.0], [19.8, 6064.0], [19.9, 6064.0], [20.0, 6064.0], [20.1, 6064.0], [20.2, 6065.0], [20.3, 6065.0], [20.4, 6067.0], [20.5, 6067.0], [20.6, 6067.0], [20.7, 6067.0], [20.8, 6072.0], [20.9, 6072.0], [21.0, 6075.0], [21.1, 6075.0], [21.2, 6079.0], [21.3, 6079.0], [21.4, 6087.0], [21.5, 6087.0], [21.6, 6090.0], [21.7, 6090.0], [21.8, 6091.0], [21.9, 6091.0], [22.0, 6091.0], [22.1, 6091.0], [22.2, 6091.0], [22.3, 6091.0], [22.4, 6091.0], [22.5, 6091.0], [22.6, 6092.0], [22.7, 6092.0], [22.8, 6095.0], [22.9, 6095.0], [23.0, 6097.0], [23.1, 6097.0], [23.2, 6101.0], [23.3, 6101.0], [23.4, 6101.0], [23.5, 6101.0], [23.6, 6101.0], [23.7, 6101.0], [23.8, 6103.0], [23.9, 6103.0], [24.0, 6104.0], [24.1, 6104.0], [24.2, 6107.0], [24.3, 6107.0], [24.4, 6109.0], [24.5, 6109.0], [24.6, 6110.0], [24.7, 6110.0], [24.8, 6111.0], [24.9, 6111.0], [25.0, 6111.0], [25.1, 6111.0], [25.2, 6111.0], [25.3, 6111.0], [25.4, 6112.0], [25.5, 6112.0], [25.6, 6117.0], [25.7, 6117.0], [25.8, 6118.0], [25.9, 6118.0], [26.0, 6120.0], [26.1, 6120.0], [26.2, 6121.0], [26.3, 6121.0], [26.4, 6121.0], [26.5, 6121.0], [26.6, 6121.0], [26.7, 6121.0], [26.8, 6122.0], [26.9, 6122.0], [27.0, 6124.0], [27.1, 6124.0], [27.2, 6125.0], [27.3, 6125.0], [27.4, 6126.0], [27.5, 6126.0], [27.6, 6129.0], [27.7, 6129.0], [27.8, 6132.0], [27.9, 6132.0], [28.0, 6133.0], [28.1, 6133.0], [28.2, 6133.0], [28.3, 6133.0], [28.4, 6134.0], [28.5, 6134.0], [28.6, 6135.0], [28.7, 6135.0], [28.8, 6136.0], [28.9, 6136.0], [29.0, 6137.0], [29.1, 6137.0], [29.2, 6137.0], [29.3, 6137.0], [29.4, 6139.0], [29.5, 6139.0], [29.6, 6142.0], [29.7, 6142.0], [29.8, 6143.0], [29.9, 6143.0], [30.0, 6144.0], [30.1, 6144.0], [30.2, 6146.0], [30.3, 6146.0], [30.4, 6147.0], [30.5, 6147.0], [30.6, 6148.0], [30.7, 6148.0], [30.8, 6148.0], [30.9, 6148.0], [31.0, 6151.0], [31.1, 6151.0], [31.2, 6152.0], [31.3, 6152.0], [31.4, 6153.0], [31.5, 6153.0], [31.6, 6155.0], [31.7, 6155.0], [31.8, 6156.0], [31.9, 6156.0], [32.0, 6156.0], [32.1, 6156.0], [32.2, 6158.0], [32.3, 6158.0], [32.4, 6160.0], [32.5, 6160.0], [32.6, 6160.0], [32.7, 6160.0], [32.8, 6161.0], [32.9, 6161.0], [33.0, 6162.0], [33.1, 6162.0], [33.2, 6164.0], [33.3, 6164.0], [33.4, 6166.0], [33.5, 6166.0], [33.6, 6166.0], [33.7, 6166.0], [33.8, 6166.0], [33.9, 6166.0], [34.0, 7560.0], [34.1, 7560.0], [34.2, 7561.0], [34.3, 7561.0], [34.4, 7561.0], [34.5, 7561.0], [34.6, 7562.0], [34.7, 7562.0], [34.8, 7565.0], [34.9, 7565.0], [35.0, 7566.0], [35.1, 7566.0], [35.2, 7566.0], [35.3, 7566.0], [35.4, 7567.0], [35.5, 7567.0], [35.6, 7568.0], [35.7, 7568.0], [35.8, 8693.0], [35.9, 8693.0], [36.0, 8695.0], [36.1, 8695.0], [36.2, 8695.0], [36.3, 8695.0], [36.4, 8696.0], [36.5, 8696.0], [36.6, 8698.0], [36.7, 8698.0], [36.8, 9167.0], [36.9, 9167.0], [37.0, 9173.0], [37.1, 9173.0], [37.2, 9174.0], [37.3, 9174.0], [37.4, 9180.0], [37.5, 9180.0], [37.6, 9180.0], [37.7, 9180.0], [37.8, 9181.0], [37.9, 9181.0], [38.0, 9181.0], [38.1, 9181.0], [38.2, 9181.0], [38.3, 9181.0], [38.4, 9181.0], [38.5, 9181.0], [38.6, 9184.0], [38.7, 9184.0], [38.8, 9186.0], [38.9, 9186.0], [39.0, 9187.0], [39.1, 9187.0], [39.2, 9187.0], [39.3, 9187.0], [39.4, 9189.0], [39.5, 9189.0], [39.6, 9191.0], [39.7, 9191.0], [39.8, 9191.0], [39.9, 9193.0], [40.0, 9193.0], [40.1, 9193.0], [40.2, 9195.0], [40.3, 9195.0], [40.4, 9195.0], [40.5, 9197.0], [40.6, 9197.0], [40.7, 9197.0], [40.8, 9197.0], [40.9, 9199.0], [41.0, 9199.0], [41.1, 9199.0], [41.2, 9199.0], [41.3, 9199.0], [41.4, 9199.0], [41.5, 9201.0], [41.6, 9201.0], [41.7, 9201.0], [41.8, 9201.0], [41.9, 9201.0], [42.0, 9201.0], [42.1, 9201.0], [42.2, 9202.0], [42.3, 9202.0], [42.4, 9202.0], [42.5, 9203.0], [42.6, 9203.0], [42.7, 9204.0], [42.8, 9204.0], [42.9, 9204.0], [43.0, 9204.0], [43.1, 9205.0], [43.2, 9205.0], [43.3, 9205.0], [43.4, 9205.0], [43.5, 9207.0], [43.6, 9207.0], [43.7, 9208.0], [43.8, 9208.0], [43.9, 9208.0], [44.0, 9208.0], [44.1, 9209.0], [44.2, 9209.0], [44.3, 9210.0], [44.4, 9210.0], [44.5, 9210.0], [44.6, 9210.0], [44.7, 9211.0], [44.8, 9211.0], [44.9, 9213.0], [45.0, 9213.0], [45.1, 9213.0], [45.2, 9213.0], [45.3, 9214.0], [45.4, 9214.0], [45.5, 9215.0], [45.6, 9215.0], [45.7, 9218.0], [45.8, 9218.0], [45.9, 9218.0], [46.0, 9218.0], [46.1, 9219.0], [46.2, 9219.0], [46.3, 9220.0], [46.4, 9220.0], [46.5, 9223.0], [46.6, 9223.0], [46.7, 9225.0], [46.8, 9225.0], [46.9, 9227.0], [47.0, 9227.0], [47.1, 9229.0], [47.2, 9229.0], [47.3, 9230.0], [47.4, 9230.0], [47.5, 9231.0], [47.6, 9231.0], [47.7, 9231.0], [47.8, 9231.0], [47.9, 9232.0], [48.0, 9232.0], [48.1, 9233.0], [48.2, 9233.0], [48.3, 9236.0], [48.4, 9236.0], [48.5, 9237.0], [48.6, 9237.0], [48.7, 9238.0], [48.8, 9238.0], [48.9, 9239.0], [49.0, 9239.0], [49.1, 9239.0], [49.2, 9239.0], [49.3, 9240.0], [49.4, 9240.0], [49.5, 9241.0], [49.6, 9241.0], [49.7, 9241.0], [49.8, 9241.0], [49.9, 9243.0], [50.0, 9243.0], [50.1, 9244.0], [50.2, 9244.0], [50.3, 9245.0], [50.4, 9245.0], [50.5, 9248.0], [50.6, 9248.0], [50.7, 9248.0], [50.8, 9248.0], [50.9, 9249.0], [51.0, 9249.0], [51.1, 9249.0], [51.2, 9249.0], [51.3, 9252.0], [51.4, 9252.0], [51.5, 9253.0], [51.6, 9253.0], [51.7, 9254.0], [51.8, 9254.0], [51.9, 9256.0], [52.0, 9256.0], [52.1, 9258.0], [52.2, 9258.0], [52.3, 9259.0], [52.4, 9259.0], [52.5, 9261.0], [52.6, 9261.0], [52.7, 9262.0], [52.8, 9262.0], [52.9, 9262.0], [53.0, 9262.0], [53.1, 9264.0], [53.2, 9264.0], [53.3, 9266.0], [53.4, 9266.0], [53.5, 9268.0], [53.6, 9268.0], [53.7, 9271.0], [53.8, 9271.0], [53.9, 9271.0], [54.0, 9271.0], [54.1, 9272.0], [54.2, 9272.0], [54.3, 9274.0], [54.4, 9274.0], [54.5, 9274.0], [54.6, 9274.0], [54.7, 9275.0], [54.8, 9275.0], [54.9, 9278.0], [55.0, 9278.0], [55.1, 9278.0], [55.2, 9278.0], [55.3, 9281.0], [55.4, 9281.0], [55.5, 9281.0], [55.6, 9281.0], [55.7, 9281.0], [55.8, 9281.0], [55.9, 9283.0], [56.0, 9283.0], [56.1, 9286.0], [56.2, 9286.0], [56.3, 9300.0], [56.4, 9300.0], [56.5, 9310.0], [56.6, 9310.0], [56.7, 9313.0], [56.8, 9313.0], [56.9, 9315.0], [57.0, 9315.0], [57.1, 9316.0], [57.2, 9316.0], [57.3, 9318.0], [57.4, 9318.0], [57.5, 9319.0], [57.6, 9319.0], [57.7, 9320.0], [57.8, 9320.0], [57.9, 9321.0], [58.0, 9321.0], [58.1, 9324.0], [58.2, 9324.0], [58.3, 9328.0], [58.4, 9328.0], [58.5, 9329.0], [58.6, 9329.0], [58.7, 9329.0], [58.8, 9329.0], [58.9, 9333.0], [59.0, 9333.0], [59.1, 9333.0], [59.2, 9333.0], [59.3, 9336.0], [59.4, 9336.0], [59.5, 9336.0], [59.6, 9336.0], [59.7, 9337.0], [59.8, 9337.0], [59.9, 9341.0], [60.0, 9341.0], [60.1, 9341.0], [60.2, 9341.0], [60.3, 9342.0], [60.4, 9342.0], [60.5, 9342.0], [60.6, 9342.0], [60.7, 9346.0], [60.8, 9346.0], [60.9, 9347.0], [61.0, 9347.0], [61.1, 9350.0], [61.2, 9350.0], [61.3, 9351.0], [61.4, 9351.0], [61.5, 9352.0], [61.6, 9352.0], [61.7, 9352.0], [61.8, 9352.0], [61.9, 9354.0], [62.0, 9354.0], [62.1, 9354.0], [62.2, 9354.0], [62.3, 9356.0], [62.4, 9356.0], [62.5, 9357.0], [62.6, 9357.0], [62.7, 9358.0], [62.8, 9358.0], [62.9, 9359.0], [63.0, 9359.0], [63.1, 9359.0], [63.2, 9359.0], [63.3, 9361.0], [63.4, 9361.0], [63.5, 9362.0], [63.6, 9362.0], [63.7, 9363.0], [63.8, 9363.0], [63.9, 9364.0], [64.0, 9364.0], [64.1, 9364.0], [64.2, 9364.0], [64.3, 9364.0], [64.4, 9364.0], [64.5, 9364.0], [64.6, 9364.0], [64.7, 9364.0], [64.8, 9364.0], [64.9, 9365.0], [65.0, 9365.0], [65.1, 9367.0], [65.2, 9367.0], [65.3, 9368.0], [65.4, 9368.0], [65.5, 9370.0], [65.6, 9370.0], [65.7, 9371.0], [65.8, 9371.0], [65.9, 9371.0], [66.0, 9371.0], [66.1, 9373.0], [66.2, 9373.0], [66.3, 9377.0], [66.4, 9377.0], [66.5, 9379.0], [66.6, 9379.0], [66.7, 9381.0], [66.8, 9381.0], [66.9, 9383.0], [67.0, 9383.0], [67.1, 9384.0], [67.2, 9384.0], [67.3, 9384.0], [67.4, 9384.0], [67.5, 9384.0], [67.6, 9384.0], [67.7, 9388.0], [67.8, 9388.0], [67.9, 9389.0], [68.0, 9389.0], [68.1, 9390.0], [68.2, 9390.0], [68.3, 9390.0], [68.4, 9390.0], [68.5, 9391.0], [68.6, 9391.0], [68.7, 9393.0], [68.8, 9393.0], [68.9, 9394.0], [69.0, 9394.0], [69.1, 9394.0], [69.2, 9394.0], [69.3, 9394.0], [69.4, 9394.0], [69.5, 9395.0], [69.6, 9395.0], [69.7, 9396.0], [69.8, 9396.0], [69.9, 9398.0], [70.0, 9398.0], [70.1, 9399.0], [70.2, 9399.0], [70.3, 9400.0], [70.4, 9400.0], [70.5, 9401.0], [70.6, 9401.0], [70.7, 9401.0], [70.8, 9401.0], [70.9, 9402.0], [71.0, 9402.0], [71.1, 9403.0], [71.2, 9403.0], [71.3, 9404.0], [71.4, 9404.0], [71.5, 9404.0], [71.6, 9404.0], [71.7, 9411.0], [71.8, 9411.0], [71.9, 9413.0], [72.0, 9413.0], [72.1, 9416.0], [72.2, 9416.0], [72.3, 9418.0], [72.4, 9418.0], [72.5, 9419.0], [72.6, 9419.0], [72.7, 9420.0], [72.8, 9420.0], [72.9, 9422.0], [73.0, 9422.0], [73.1, 9424.0], [73.2, 9424.0], [73.3, 9425.0], [73.4, 9425.0], [73.5, 9425.0], [73.6, 9425.0], [73.7, 9425.0], [73.8, 9425.0], [73.9, 9426.0], [74.0, 9426.0], [74.1, 9427.0], [74.2, 9427.0], [74.3, 9433.0], [74.4, 9433.0], [74.5, 9434.0], [74.6, 9434.0], [74.7, 9435.0], [74.8, 9435.0], [74.9, 9435.0], [75.0, 9435.0], [75.1, 9441.0], [75.2, 9441.0], [75.3, 9441.0], [75.4, 9441.0], [75.5, 9443.0], [75.6, 9443.0], [75.7, 9444.0], [75.8, 9444.0], [75.9, 9444.0], [76.0, 9444.0], [76.1, 9445.0], [76.2, 9445.0], [76.3, 9448.0], [76.4, 9448.0], [76.5, 9449.0], [76.6, 9449.0], [76.7, 9449.0], [76.8, 9449.0], [76.9, 9450.0], [77.0, 9450.0], [77.1, 9450.0], [77.2, 9450.0], [77.3, 9450.0], [77.4, 9450.0], [77.5, 9453.0], [77.6, 9453.0], [77.7, 9454.0], [77.8, 9454.0], [77.9, 9454.0], [78.0, 9454.0], [78.1, 9454.0], [78.2, 9454.0], [78.3, 9455.0], [78.4, 9455.0], [78.5, 9455.0], [78.6, 9455.0], [78.7, 9455.0], [78.8, 9455.0], [78.9, 9458.0], [79.0, 9458.0], [79.1, 9458.0], [79.2, 9458.0], [79.3, 9459.0], [79.4, 9459.0], [79.5, 9460.0], [79.6, 9460.0], [79.7, 9460.0], [79.8, 9460.0], [79.9, 9460.0], [80.0, 9460.0], [80.1, 9462.0], [80.2, 9462.0], [80.3, 9463.0], [80.4, 9463.0], [80.5, 9465.0], [80.6, 9465.0], [80.7, 9465.0], [80.8, 9465.0], [80.9, 9467.0], [81.0, 9467.0], [81.1, 9467.0], [81.2, 9467.0], [81.3, 9469.0], [81.4, 9469.0], [81.5, 9471.0], [81.6, 9471.0], [81.7, 9473.0], [81.8, 9473.0], [81.9, 9474.0], [82.0, 9474.0], [82.1, 9474.0], [82.2, 9474.0], [82.3, 9476.0], [82.4, 9476.0], [82.5, 9478.0], [82.6, 9478.0], [82.7, 9479.0], [82.8, 9479.0], [82.9, 9481.0], [83.0, 9481.0], [83.1, 9483.0], [83.2, 9483.0], [83.3, 9485.0], [83.4, 9485.0], [83.5, 9485.0], [83.6, 9485.0], [83.7, 9486.0], [83.8, 9486.0], [83.9, 9488.0], [84.0, 9488.0], [84.1, 9490.0], [84.2, 9490.0], [84.3, 9491.0], [84.4, 9491.0], [84.5, 9493.0], [84.6, 9493.0], [84.7, 9495.0], [84.8, 9495.0], [84.9, 9497.0], [85.0, 9497.0], [85.1, 9499.0], [85.2, 9499.0], [85.3, 9500.0], [85.4, 9500.0], [85.5, 9501.0], [85.6, 9501.0], [85.7, 9502.0], [85.8, 9502.0], [85.9, 9505.0], [86.0, 9505.0], [86.1, 9506.0], [86.2, 9506.0], [86.3, 9508.0], [86.4, 9508.0], [86.5, 9509.0], [86.6, 9509.0], [86.7, 9509.0], [86.8, 9509.0], [86.9, 9511.0], [87.0, 9511.0], [87.1, 9512.0], [87.2, 9512.0], [87.3, 9513.0], [87.4, 9513.0], [87.5, 9513.0], [87.6, 9513.0], [87.7, 9518.0], [87.8, 9518.0], [87.9, 9518.0], [88.0, 9518.0], [88.1, 9520.0], [88.2, 9520.0], [88.3, 9521.0], [88.4, 9521.0], [88.5, 9523.0], [88.6, 9523.0], [88.7, 9524.0], [88.8, 9524.0], [88.9, 9526.0], [89.0, 9526.0], [89.1, 9526.0], [89.2, 9526.0], [89.3, 9528.0], [89.4, 9528.0], [89.5, 9533.0], [89.6, 9533.0], [89.7, 9533.0], [89.8, 9533.0], [89.9, 9535.0], [90.0, 9535.0], [90.1, 9548.0], [90.2, 9548.0], [90.3, 9550.0], [90.4, 9550.0], [90.5, 9551.0], [90.6, 9551.0], [90.7, 9552.0], [90.8, 9552.0], [90.9, 9701.0], [91.0, 9701.0], [91.1, 9702.0], [91.2, 9702.0], [91.3, 9703.0], [91.4, 9703.0], [91.5, 9705.0], [91.6, 9705.0], [91.7, 9705.0], [91.8, 9705.0], [91.9, 9970.0], [92.0, 9970.0], [92.1, 10172.0], [92.2, 10172.0], [92.3, 10172.0], [92.4, 10172.0], [92.5, 10174.0], [92.6, 10174.0], [92.7, 10175.0], [92.8, 10175.0], [92.9, 10177.0], [93.0, 10177.0], [93.1, 10178.0], [93.2, 10178.0], [93.3, 10178.0], [93.4, 10178.0], [93.5, 10181.0], [93.6, 10181.0], [93.7, 10182.0], [93.8, 10182.0], [93.9, 10184.0], [94.0, 10184.0], [94.1, 10188.0], [94.2, 10188.0], [94.3, 10198.0], [94.4, 10198.0], [94.5, 10198.0], [94.6, 10198.0], [94.7, 10198.0], [94.8, 10198.0], [94.9, 10201.0], [95.0, 10201.0], [95.1, 10204.0], [95.2, 10204.0], [95.3, 10486.0], [95.4, 10486.0], [95.5, 10488.0], [95.6, 10488.0], [95.7, 10491.0], [95.8, 10491.0], [95.9, 10491.0], [96.0, 10491.0], [96.1, 10493.0], [96.2, 10493.0], [96.3, 10495.0], [96.4, 10495.0], [96.5, 10495.0], [96.6, 10495.0], [96.7, 10495.0], [96.8, 10495.0], [96.9, 10497.0], [97.0, 10497.0], [97.1, 10497.0], [97.2, 10497.0], [97.3, 10498.0], [97.4, 10498.0], [97.5, 10498.0], [97.6, 10498.0], [97.7, 10498.0], [97.8, 10498.0], [97.9, 10501.0], [98.0, 10501.0], [98.1, 10501.0], [98.2, 10501.0], [98.3, 10503.0], [98.4, 10503.0], [98.5, 10506.0], [98.6, 10506.0], [98.7, 10506.0], [98.8, 10506.0], [98.9, 10508.0], [99.0, 10508.0], [99.1, 10508.0], [99.2, 10508.0], [99.3, 10511.0], [99.4, 10511.0], [99.5, 10512.0], [99.6, 10512.0], [99.7, 10513.0], [99.8, 10513.0], [99.9, 10514.0], [100.0, 10514.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[0.0, 337.0], [0.1, 337.0], [0.2, 1204.0], [0.3, 1204.0], [0.4, 1206.0], [0.5, 1206.0], [0.6, 1206.0], [0.7, 1207.0], [0.8, 1208.0], [0.9, 1208.0], [1.0, 1214.0], [1.1, 1214.0], [1.2, 1215.0], [1.3, 1215.0], [1.4, 1216.0], [1.5, 1216.0], [1.6, 1218.0], [1.7, 1218.0], [1.8, 1219.0], [1.9, 1219.0], [2.0, 1220.0], [2.1, 1220.0], [2.2, 1222.0], [2.3, 1222.0], [2.4, 1224.0], [2.5, 1224.0], [2.6, 1224.0], [2.7, 1224.0], [2.8, 1224.0], [2.9, 1224.0], [3.0, 1225.0], [3.1, 1225.0], [3.2, 1226.0], [3.3, 1226.0], [3.4, 1226.0], [3.5, 1229.0], [3.6, 1229.0], [3.7, 1229.0], [3.8, 1229.0], [3.9, 1230.0], [4.0, 1231.0], [4.1, 1231.0], [4.2, 1232.0], [4.3, 1232.0], [4.4, 1232.0], [4.5, 1232.0], [4.6, 1232.0], [4.7, 1234.0], [4.8, 1234.0], [4.9, 1234.0], [5.0, 1234.0], [5.1, 1238.0], [5.2, 1238.0], [5.3, 1239.0], [5.4, 1239.0], [5.5, 1241.0], [5.6, 1241.0], [5.7, 1243.0], [5.8, 1243.0], [5.9, 1244.0], [6.0, 1244.0], [6.1, 1247.0], [6.2, 1247.0], [6.3, 1248.0], [6.4, 1248.0], [6.5, 1250.0], [6.6, 1250.0], [6.7, 1252.0], [6.8, 1252.0], [6.9, 1254.0], [7.0, 1254.0], [7.1, 1254.0], [7.2, 1254.0], [7.3, 1255.0], [7.4, 1255.0], [7.5, 1256.0], [7.6, 1256.0], [7.7, 1258.0], [7.8, 1258.0], [7.9, 1259.0], [8.0, 1259.0], [8.1, 1264.0], [8.2, 1264.0], [8.3, 1265.0], [8.4, 1265.0], [8.5, 1266.0], [8.6, 1266.0], [8.7, 1266.0], [8.8, 1266.0], [8.9, 1267.0], [9.0, 1267.0], [9.1, 1268.0], [9.2, 1268.0], [9.3, 1268.0], [9.4, 1268.0], [9.5, 1269.0], [9.6, 1269.0], [9.7, 1270.0], [9.8, 1271.0], [9.9, 1271.0], [10.0, 1273.0], [10.1, 1273.0], [10.2, 1276.0], [10.3, 1276.0], [10.4, 1277.0], [10.5, 1277.0], [10.6, 1281.0], [10.7, 1281.0], [10.8, 1283.0], [10.9, 1283.0], [11.0, 1283.0], [11.1, 1283.0], [11.2, 1284.0], [11.3, 1284.0], [11.4, 1285.0], [11.5, 1285.0], [11.6, 1288.0], [11.7, 1288.0], [11.8, 1289.0], [11.9, 1289.0], [12.0, 1290.0], [12.1, 1290.0], [12.2, 1292.0], [12.3, 1292.0], [12.4, 1294.0], [12.5, 1294.0], [12.6, 1294.0], [12.7, 1294.0], [12.8, 1296.0], [12.9, 1296.0], [13.0, 1296.0], [13.1, 1296.0], [13.2, 1297.0], [13.3, 1297.0], [13.4, 1299.0], [13.5, 1299.0], [13.6, 1300.0], [13.7, 1300.0], [13.8, 1300.0], [13.9, 1300.0], [14.0, 1300.0], [14.1, 1300.0], [14.2, 1301.0], [14.3, 1301.0], [14.4, 1301.0], [14.5, 1301.0], [14.6, 1303.0], [14.7, 1303.0], [14.8, 1304.0], [14.9, 1304.0], [15.0, 1304.0], [15.1, 1304.0], [15.2, 1306.0], [15.3, 1306.0], [15.4, 1306.0], [15.5, 1306.0], [15.6, 1307.0], [15.7, 1307.0], [15.8, 1309.0], [15.9, 1309.0], [16.0, 1325.0], [16.1, 1325.0], [16.2, 1326.0], [16.3, 1326.0], [16.4, 1328.0], [16.5, 1328.0], [16.6, 1328.0], [16.7, 1328.0], [16.8, 1331.0], [16.9, 1331.0], [17.0, 1333.0], [17.1, 1333.0], [17.2, 1333.0], [17.3, 1333.0], [17.4, 1333.0], [17.5, 1333.0], [17.6, 1335.0], [17.7, 1335.0], [17.8, 1335.0], [17.9, 1335.0], [18.0, 1335.0], [18.1, 1335.0], [18.2, 1335.0], [18.3, 1335.0], [18.4, 1336.0], [18.5, 1336.0], [18.6, 1339.0], [18.7, 1339.0], [18.8, 1341.0], [18.9, 1341.0], [19.0, 1341.0], [19.1, 1341.0], [19.2, 1342.0], [19.3, 1342.0], [19.4, 1344.0], [19.5, 1344.0], [19.6, 1344.0], [19.7, 1344.0], [19.8, 1345.0], [19.9, 1345.0], [20.0, 1346.0], [20.1, 1346.0], [20.2, 1347.0], [20.3, 1347.0], [20.4, 1348.0], [20.5, 1348.0], [20.6, 1349.0], [20.7, 1349.0], [20.8, 1350.0], [20.9, 1350.0], [21.0, 1352.0], [21.1, 1352.0], [21.2, 1352.0], [21.3, 1352.0], [21.4, 1354.0], [21.5, 1354.0], [21.6, 1355.0], [21.7, 1355.0], [21.8, 1357.0], [21.9, 1357.0], [22.0, 1362.0], [22.1, 1362.0], [22.2, 1363.0], [22.3, 1363.0], [22.4, 1365.0], [22.5, 1365.0], [22.6, 1365.0], [22.7, 1365.0], [22.8, 1367.0], [22.9, 1367.0], [23.0, 1367.0], [23.1, 1367.0], [23.2, 1369.0], [23.3, 1369.0], [23.4, 1369.0], [23.5, 1369.0], [23.6, 1372.0], [23.7, 1372.0], [23.8, 1372.0], [23.9, 1372.0], [24.0, 1373.0], [24.1, 1373.0], [24.2, 1375.0], [24.3, 1375.0], [24.4, 1377.0], [24.5, 1377.0], [24.6, 1378.0], [24.7, 1378.0], [24.8, 1379.0], [24.9, 1379.0], [25.0, 1379.0], [25.1, 1379.0], [25.2, 1379.0], [25.3, 1379.0], [25.4, 1381.0], [25.5, 1381.0], [25.6, 1382.0], [25.7, 1382.0], [25.8, 1382.0], [25.9, 1382.0], [26.0, 1382.0], [26.1, 1382.0], [26.2, 1383.0], [26.3, 1383.0], [26.4, 1386.0], [26.5, 1386.0], [26.6, 1388.0], [26.7, 1388.0], [26.8, 1388.0], [26.9, 1388.0], [27.0, 1389.0], [27.1, 1389.0], [27.2, 1389.0], [27.3, 1389.0], [27.4, 1391.0], [27.5, 1391.0], [27.6, 1392.0], [27.7, 1392.0], [27.8, 1393.0], [27.9, 1393.0], [28.0, 1394.0], [28.1, 1394.0], [28.2, 1396.0], [28.3, 1396.0], [28.4, 1397.0], [28.5, 1397.0], [28.6, 1399.0], [28.7, 1399.0], [28.8, 1400.0], [28.9, 1400.0], [29.0, 1401.0], [29.1, 1401.0], [29.2, 1402.0], [29.3, 1402.0], [29.4, 1404.0], [29.5, 1404.0], [29.6, 1405.0], [29.7, 1405.0], [29.8, 1406.0], [29.9, 1406.0], [30.0, 1407.0], [30.1, 1407.0], [30.2, 1410.0], [30.3, 1410.0], [30.4, 1412.0], [30.5, 1412.0], [30.6, 1415.0], [30.7, 1415.0], [30.8, 1415.0], [30.9, 1415.0], [31.0, 1417.0], [31.1, 1417.0], [31.2, 1419.0], [31.3, 1419.0], [31.4, 1420.0], [31.5, 1420.0], [31.6, 1422.0], [31.7, 1422.0], [31.8, 1424.0], [31.9, 1424.0], [32.0, 1425.0], [32.1, 1425.0], [32.2, 1427.0], [32.3, 1427.0], [32.4, 1427.0], [32.5, 1427.0], [32.6, 1430.0], [32.7, 1430.0], [32.8, 1431.0], [32.9, 1431.0], [33.0, 1432.0], [33.1, 1432.0], [33.2, 1433.0], [33.3, 1433.0], [33.4, 1437.0], [33.5, 1437.0], [33.6, 1438.0], [33.7, 1438.0], [33.8, 1442.0], [33.9, 1442.0], [34.0, 1446.0], [34.1, 1446.0], [34.2, 1449.0], [34.3, 1449.0], [34.4, 1449.0], [34.5, 1449.0], [34.6, 1450.0], [34.7, 1450.0], [34.8, 1451.0], [34.9, 1451.0], [35.0, 1451.0], [35.1, 1451.0], [35.2, 1452.0], [35.3, 1452.0], [35.4, 1453.0], [35.5, 1453.0], [35.6, 1463.0], [35.7, 1463.0], [35.8, 1466.0], [35.9, 1466.0], [36.0, 1467.0], [36.1, 1467.0], [36.2, 1468.0], [36.3, 1468.0], [36.4, 1469.0], [36.5, 1469.0], [36.6, 1470.0], [36.7, 1470.0], [36.8, 1471.0], [36.9, 1471.0], [37.0, 1471.0], [37.1, 1471.0], [37.2, 1474.0], [37.3, 1474.0], [37.4, 1474.0], [37.5, 1474.0], [37.6, 1477.0], [37.7, 1477.0], [37.8, 1478.0], [37.9, 1478.0], [38.0, 1483.0], [38.1, 1483.0], [38.2, 1484.0], [38.3, 1484.0], [38.4, 1484.0], [38.5, 1486.0], [38.6, 1486.0], [38.7, 1488.0], [38.8, 1488.0], [38.9, 1489.0], [39.0, 1489.0], [39.1, 1490.0], [39.2, 1490.0], [39.3, 1490.0], [39.4, 1490.0], [39.5, 1490.0], [39.6, 1490.0], [39.7, 1490.0], [39.8, 1490.0], [39.9, 1491.0], [40.0, 1491.0], [40.1, 1491.0], [40.2, 1491.0], [40.3, 1491.0], [40.4, 1491.0], [40.5, 1492.0], [40.6, 1492.0], [40.7, 1492.0], [40.8, 1492.0], [40.9, 1492.0], [41.0, 1492.0], [41.1, 1492.0], [41.2, 1492.0], [41.3, 1493.0], [41.4, 1493.0], [41.5, 1493.0], [41.6, 1493.0], [41.7, 1496.0], [41.8, 1496.0], [41.9, 1496.0], [42.0, 1496.0], [42.1, 1496.0], [42.2, 1496.0], [42.3, 1498.0], [42.4, 1498.0], [42.5, 1498.0], [42.6, 1498.0], [42.7, 1499.0], [42.8, 1499.0], [42.9, 1499.0], [43.0, 1499.0], [43.1, 1499.0], [43.2, 1499.0], [43.3, 1499.0], [43.4, 1499.0], [43.5, 1500.0], [43.6, 1500.0], [43.7, 1500.0], [43.8, 1500.0], [43.9, 1501.0], [44.0, 1501.0], [44.1, 1502.0], [44.2, 1502.0], [44.3, 1502.0], [44.4, 1502.0], [44.5, 1502.0], [44.6, 1502.0], [44.7, 1503.0], [44.8, 1503.0], [44.9, 1504.0], [45.0, 1504.0], [45.1, 1505.0], [45.2, 1505.0], [45.3, 1505.0], [45.4, 1505.0], [45.5, 1506.0], [45.6, 1506.0], [45.7, 1508.0], [45.8, 1508.0], [45.9, 1508.0], [46.0, 1508.0], [46.1, 1509.0], [46.2, 1509.0], [46.3, 1509.0], [46.4, 1509.0], [46.5, 1510.0], [46.6, 1510.0], [46.7, 1510.0], [46.8, 1510.0], [46.9, 1512.0], [47.0, 1512.0], [47.1, 1513.0], [47.2, 1513.0], [47.3, 1515.0], [47.4, 1515.0], [47.5, 1515.0], [47.6, 1515.0], [47.7, 1515.0], [47.8, 1515.0], [47.9, 1515.0], [48.0, 1515.0], [48.1, 1516.0], [48.2, 1516.0], [48.3, 1516.0], [48.4, 1516.0], [48.5, 1516.0], [48.6, 1516.0], [48.7, 1519.0], [48.8, 1519.0], [48.9, 1520.0], [49.0, 1520.0], [49.1, 1521.0], [49.2, 1521.0], [49.3, 1522.0], [49.4, 1522.0], [49.5, 1522.0], [49.6, 1522.0], [49.7, 1523.0], [49.8, 1523.0], [49.9, 1523.0], [50.0, 1523.0], [50.1, 1523.0], [50.2, 1523.0], [50.3, 1525.0], [50.4, 1525.0], [50.5, 1525.0], [50.6, 1525.0], [50.7, 1527.0], [50.8, 1527.0], [50.9, 1527.0], [51.0, 1527.0], [51.1, 1530.0], [51.2, 1530.0], [51.3, 1531.0], [51.4, 1531.0], [51.5, 1534.0], [51.6, 1534.0], [51.7, 1535.0], [51.8, 1535.0], [51.9, 1535.0], [52.0, 1535.0], [52.1, 1538.0], [52.2, 1538.0], [52.3, 1540.0], [52.4, 1540.0], [52.5, 1541.0], [52.6, 1541.0], [52.7, 1543.0], [52.8, 1543.0], [52.9, 1545.0], [53.0, 1545.0], [53.1, 1546.0], [53.2, 1546.0], [53.3, 1562.0], [53.4, 1562.0], [53.5, 1567.0], [53.6, 1567.0], [53.7, 1567.0], [53.8, 1567.0], [53.9, 1567.0], [54.0, 1567.0], [54.1, 1568.0], [54.2, 1568.0], [54.3, 1571.0], [54.4, 1571.0], [54.5, 1576.0], [54.6, 1576.0], [54.7, 1605.0], [54.8, 1605.0], [54.9, 1606.0], [55.0, 1606.0], [55.1, 1609.0], [55.2, 1609.0], [55.3, 2054.0], [55.4, 2054.0], [55.5, 2055.0], [55.6, 2055.0], [55.7, 2056.0], [55.8, 2056.0], [55.9, 2057.0], [56.0, 2057.0], [56.1, 2059.0], [56.2, 2059.0], [56.3, 2059.0], [56.4, 2059.0], [56.5, 2060.0], [56.6, 2060.0], [56.7, 2061.0], [56.8, 2061.0], [56.9, 2062.0], [57.0, 2062.0], [57.1, 2063.0], [57.2, 2063.0], [57.3, 2078.0], [57.4, 2078.0], [57.5, 2079.0], [57.6, 2079.0], [57.7, 2081.0], [57.8, 2081.0], [57.9, 2081.0], [58.0, 2081.0], [58.1, 2084.0], [58.2, 2084.0], [58.3, 2085.0], [58.4, 2085.0], [58.5, 2086.0], [58.6, 2086.0], [58.7, 2086.0], [58.8, 2086.0], [58.9, 2089.0], [59.0, 2089.0], [59.1, 2090.0], [59.2, 2090.0], [59.3, 2092.0], [59.4, 2092.0], [59.5, 2442.0], [59.6, 2442.0], [59.7, 2443.0], [59.8, 2443.0], [59.9, 2445.0], [60.0, 2445.0], [60.1, 2445.0], [60.2, 2445.0], [60.3, 2448.0], [60.4, 2448.0], [60.5, 2448.0], [60.6, 2448.0], [60.7, 2449.0], [60.8, 2449.0], [60.9, 2451.0], [61.0, 2451.0], [61.1, 2452.0], [61.2, 2452.0], [61.3, 4454.0], [61.4, 4454.0], [61.5, 4456.0], [61.6, 4456.0], [61.7, 4457.0], [61.8, 4457.0], [61.9, 4459.0], [62.0, 4459.0], [62.1, 4460.0], [62.2, 4460.0], [62.3, 4460.0], [62.4, 4460.0], [62.5, 4463.0], [62.6, 4463.0], [62.7, 4464.0], [62.8, 4464.0], [62.9, 4464.0], [63.0, 4464.0], [63.1, 4466.0], [63.2, 4466.0], [63.3, 4467.0], [63.4, 4467.0], [63.5, 4468.0], [63.6, 4468.0], [63.7, 4469.0], [63.8, 4469.0], [63.9, 4470.0], [64.0, 4470.0], [64.1, 4470.0], [64.2, 4470.0], [64.3, 4472.0], [64.4, 4472.0], [64.5, 4474.0], [64.6, 4474.0], [64.7, 4475.0], [64.8, 4475.0], [64.9, 4477.0], [65.0, 4477.0], [65.1, 4480.0], [65.2, 4480.0], [65.3, 4481.0], [65.4, 4481.0], [65.5, 4481.0], [65.6, 4481.0], [65.7, 4482.0], [65.8, 4482.0], [65.9, 4485.0], [66.0, 4485.0], [66.1, 4487.0], [66.2, 4487.0], [66.3, 4487.0], [66.4, 4487.0], [66.5, 4488.0], [66.6, 4488.0], [66.7, 4488.0], [66.8, 4488.0], [66.9, 4490.0], [67.0, 4490.0], [67.1, 4491.0], [67.2, 4491.0], [67.3, 4491.0], [67.4, 4491.0], [67.5, 4493.0], [67.6, 4493.0], [67.7, 4496.0], [67.8, 4496.0], [67.9, 4496.0], [68.0, 4496.0], [68.1, 4498.0], [68.2, 4498.0], [68.3, 4499.0], [68.4, 4499.0], [68.5, 4499.0], [68.6, 4499.0], [68.7, 4500.0], [68.8, 4500.0], [68.9, 4501.0], [69.0, 4501.0], [69.1, 4501.0], [69.2, 4501.0], [69.3, 4502.0], [69.4, 4502.0], [69.5, 4502.0], [69.6, 4502.0], [69.7, 4503.0], [69.8, 4503.0], [69.9, 4504.0], [70.0, 4504.0], [70.1, 4504.0], [70.2, 4504.0], [70.3, 4505.0], [70.4, 4505.0], [70.5, 4506.0], [70.6, 4506.0], [70.7, 4506.0], [70.8, 4506.0], [70.9, 4506.0], [71.0, 4506.0], [71.1, 4508.0], [71.2, 4508.0], [71.3, 4508.0], [71.4, 4508.0], [71.5, 4510.0], [71.6, 4510.0], [71.7, 4514.0], [71.8, 4514.0], [71.9, 4514.0], [72.0, 4514.0], [72.1, 4515.0], [72.2, 4515.0], [72.3, 4516.0], [72.4, 4516.0], [72.5, 4518.0], [72.6, 4518.0], [72.7, 4519.0], [72.8, 4519.0], [72.9, 4519.0], [73.0, 4519.0], [73.1, 4521.0], [73.2, 4521.0], [73.3, 4522.0], [73.4, 4522.0], [73.5, 4524.0], [73.6, 4524.0], [73.7, 4525.0], [73.8, 4525.0], [73.9, 4536.0], [74.0, 4536.0], [74.1, 4538.0], [74.2, 4538.0], [74.3, 4540.0], [74.4, 4540.0], [74.5, 4549.0], [74.6, 4549.0], [74.7, 4549.0], [74.8, 4549.0], [74.9, 4549.0], [75.0, 4549.0], [75.1, 4549.0], [75.2, 4549.0], [75.3, 4549.0], [75.4, 4549.0], [75.5, 4549.0], [75.6, 4549.0], [75.7, 4549.0], [75.8, 4549.0], [75.9, 4549.0], [76.0, 4549.0], [76.1, 4550.0], [76.2, 4550.0], [76.3, 4550.0], [76.4, 4550.0], [76.5, 4550.0], [76.6, 4550.0], [76.7, 4550.0], [76.8, 4550.0], [76.9, 4550.0], [77.0, 4550.0], [77.1, 4551.0], [77.2, 4551.0], [77.3, 4553.0], [77.4, 4553.0], [77.5, 4554.0], [77.6, 4554.0], [77.7, 4555.0], [77.8, 4555.0], [77.9, 4556.0], [78.0, 4556.0], [78.1, 4566.0], [78.2, 4566.0], [78.3, 4568.0], [78.4, 4568.0], [78.5, 4569.0], [78.6, 4569.0], [78.7, 4569.0], [78.8, 4569.0], [78.9, 4572.0], [79.0, 4572.0], [79.1, 4573.0], [79.2, 4573.0], [79.3, 4573.0], [79.4, 4573.0], [79.5, 4573.0], [79.6, 4573.0], [79.7, 4575.0], [79.8, 4575.0], [79.9, 4576.0], [80.0, 4576.0], [80.1, 4577.0], [80.2, 4577.0], [80.3, 4578.0], [80.4, 4578.0], [80.5, 4578.0], [80.6, 4578.0], [80.7, 4581.0], [80.8, 4581.0], [80.9, 4582.0], [81.0, 4582.0], [81.1, 4583.0], [81.2, 4583.0], [81.3, 4585.0], [81.4, 4585.0], [81.5, 4586.0], [81.6, 4586.0], [81.7, 4589.0], [81.8, 4589.0], [81.9, 4590.0], [82.0, 4590.0], [82.1, 4591.0], [82.2, 4591.0], [82.3, 4592.0], [82.4, 4592.0], [82.5, 4593.0], [82.6, 4593.0], [82.7, 4594.0], [82.8, 4594.0], [82.9, 4594.0], [83.0, 4594.0], [83.1, 4596.0], [83.2, 4596.0], [83.3, 4596.0], [83.4, 4596.0], [83.5, 4598.0], [83.6, 4598.0], [83.7, 4600.0], [83.8, 4600.0], [83.9, 4601.0], [84.0, 4601.0], [84.1, 4603.0], [84.2, 4603.0], [84.3, 4603.0], [84.4, 4603.0], [84.5, 4605.0], [84.6, 4605.0], [84.7, 4608.0], [84.8, 4608.0], [84.9, 4609.0], [85.0, 4609.0], [85.1, 4609.0], [85.2, 4609.0], [85.3, 4609.0], [85.4, 4609.0], [85.5, 4609.0], [85.6, 4609.0], [85.7, 4610.0], [85.8, 4610.0], [85.9, 4611.0], [86.0, 4611.0], [86.1, 4612.0], [86.2, 4612.0], [86.3, 4612.0], [86.4, 4612.0], [86.5, 4614.0], [86.6, 4614.0], [86.7, 4618.0], [86.8, 4618.0], [86.9, 4618.0], [87.0, 4618.0], [87.1, 4618.0], [87.2, 4618.0], [87.3, 4621.0], [87.4, 4621.0], [87.5, 4624.0], [87.6, 4624.0], [87.7, 4627.0], [87.8, 4627.0], [87.9, 4629.0], [88.0, 4629.0], [88.1, 4629.0], [88.2, 4629.0], [88.3, 4629.0], [88.4, 4629.0], [88.5, 4629.0], [88.6, 4629.0], [88.7, 4632.0], [88.8, 4632.0], [88.9, 4633.0], [89.0, 4633.0], [89.1, 4634.0], [89.2, 4634.0], [89.3, 4637.0], [89.4, 4637.0], [89.5, 4637.0], [89.6, 4637.0], [89.7, 4638.0], [89.8, 4638.0], [89.9, 4640.0], [90.0, 4640.0], [90.1, 4641.0], [90.2, 4641.0], [90.3, 4642.0], [90.4, 4642.0], [90.5, 4643.0], [90.6, 4643.0], [90.7, 4644.0], [90.8, 4644.0], [90.9, 4646.0], [91.0, 4646.0], [91.1, 4648.0], [91.2, 4648.0], [91.3, 4650.0], [91.4, 4650.0], [91.5, 4653.0], [91.6, 4653.0], [91.7, 4654.0], [91.8, 4654.0], [91.9, 4655.0], [92.0, 4655.0], [92.1, 4657.0], [92.2, 4657.0], [92.3, 4657.0], [92.4, 4657.0], [92.5, 4662.0], [92.6, 4662.0], [92.7, 4662.0], [92.8, 4662.0], [92.9, 4663.0], [93.0, 4663.0], [93.1, 4663.0], [93.2, 4663.0], [93.3, 4664.0], [93.4, 4664.0], [93.5, 4664.0], [93.6, 4664.0], [93.7, 4667.0], [93.8, 4667.0], [93.9, 4677.0], [94.0, 4677.0], [94.1, 4677.0], [94.2, 4677.0], [94.3, 4678.0], [94.4, 4678.0], [94.5, 4678.0], [94.6, 4678.0], [94.7, 4681.0], [94.8, 4681.0], [94.9, 4681.0], [95.0, 4681.0], [95.1, 4681.0], [95.2, 4681.0], [95.3, 4684.0], [95.4, 4684.0], [95.5, 4684.0], [95.6, 4684.0], [95.7, 4685.0], [95.8, 4685.0], [95.9, 4686.0], [96.0, 4686.0], [96.1, 4688.0], [96.2, 4688.0], [96.3, 4689.0], [96.4, 4689.0], [96.5, 4690.0], [96.6, 4690.0], [96.7, 4691.0], [96.8, 4691.0], [96.9, 4692.0], [97.0, 4692.0], [97.1, 4693.0], [97.2, 4693.0], [97.3, 4695.0], [97.4, 4695.0], [97.5, 4695.0], [97.6, 4695.0], [97.7, 4697.0], [97.8, 4697.0], [97.9, 4697.0], [98.0, 4697.0], [98.1, 4697.0], [98.2, 4697.0], [98.3, 4697.0], [98.4, 4697.0], [98.5, 4699.0], [98.6, 4699.0], [98.7, 4704.0], [98.8, 4704.0], [98.9, 4718.0], [99.0, 4718.0], [99.1, 18543.0], [99.2, 18543.0], [99.3, 18543.0], [99.4, 18543.0], [99.5, 18543.0], [99.6, 18543.0], [99.7, 18543.0], [99.8, 18543.0], [99.9, 18642.0], [100.0, 18642.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[0.0, 671.0], [0.1, 671.0], [0.2, 691.0], [0.3, 691.0], [0.4, 691.0], [0.5, 691.0], [0.6, 691.0], [0.7, 692.0], [0.8, 692.0], [0.9, 692.0], [1.0, 693.0], [1.1, 693.0], [1.2, 693.0], [1.3, 693.0], [1.4, 693.0], [1.5, 693.0], [1.6, 694.0], [1.7, 694.0], [1.8, 694.0], [1.9, 694.0], [2.0, 694.0], [2.1, 694.0], [2.2, 701.0], [2.3, 701.0], [2.4, 701.0], [2.5, 710.0], [2.6, 710.0], [2.7, 710.0], [2.8, 710.0], [2.9, 3163.0], [3.0, 3163.0], [3.1, 3257.0], [3.2, 3257.0], [3.3, 3272.0], [3.4, 3272.0], [3.5, 3275.0], [3.6, 3275.0], [3.7, 3279.0], [3.8, 3279.0], [3.9, 3279.0], [4.0, 3279.0], [4.1, 3281.0], [4.2, 3281.0], [4.3, 3282.0], [4.4, 3282.0], [4.5, 3285.0], [4.6, 3285.0], [4.7, 3285.0], [4.8, 3285.0], [4.9, 3286.0], [5.0, 3286.0], [5.1, 3287.0], [5.2, 3287.0], [5.3, 3288.0], [5.4, 3288.0], [5.5, 3289.0], [5.6, 3289.0], [5.7, 3289.0], [5.8, 3289.0], [5.9, 3293.0], [6.0, 3293.0], [6.1, 3293.0], [6.2, 3293.0], [6.3, 3295.0], [6.4, 3295.0], [6.5, 3295.0], [6.6, 3295.0], [6.7, 3295.0], [6.8, 3295.0], [6.9, 3296.0], [7.0, 3296.0], [7.1, 3298.0], [7.2, 3298.0], [7.3, 3302.0], [7.4, 3302.0], [7.5, 3305.0], [7.6, 3305.0], [7.7, 3305.0], [7.8, 3305.0], [7.9, 3306.0], [8.0, 3306.0], [8.1, 3306.0], [8.2, 3306.0], [8.3, 3310.0], [8.4, 3310.0], [8.5, 3311.0], [8.6, 3311.0], [8.7, 3312.0], [8.8, 3315.0], [8.9, 3315.0], [9.0, 3315.0], [9.1, 3315.0], [9.2, 3315.0], [9.3, 3319.0], [9.4, 3320.0], [9.5, 3320.0], [9.6, 3322.0], [9.7, 3322.0], [9.8, 3325.0], [9.9, 3325.0], [10.0, 3326.0], [10.1, 3326.0], [10.2, 3329.0], [10.3, 3329.0], [10.4, 3329.0], [10.5, 3329.0], [10.6, 3331.0], [10.7, 3331.0], [10.8, 3336.0], [10.9, 3336.0], [11.0, 3336.0], [11.1, 3336.0], [11.2, 3347.0], [11.3, 3347.0], [11.4, 3348.0], [11.5, 3348.0], [11.6, 3349.0], [11.7, 3349.0], [11.8, 3350.0], [11.9, 3350.0], [12.0, 3351.0], [12.1, 3351.0], [12.2, 3351.0], [12.3, 3351.0], [12.4, 3352.0], [12.5, 3352.0], [12.6, 3355.0], [12.7, 3355.0], [12.8, 3357.0], [12.9, 3357.0], [13.0, 3359.0], [13.1, 3359.0], [13.2, 3361.0], [13.3, 3361.0], [13.4, 3362.0], [13.5, 3362.0], [13.6, 3363.0], [13.7, 3363.0], [13.8, 3364.0], [13.9, 3364.0], [14.0, 3364.0], [14.1, 3364.0], [14.2, 3367.0], [14.3, 3367.0], [14.4, 3368.0], [14.5, 3368.0], [14.6, 3368.0], [14.7, 3368.0], [14.8, 3370.0], [14.9, 3370.0], [15.0, 3371.0], [15.1, 3371.0], [15.2, 3371.0], [15.3, 3371.0], [15.4, 3374.0], [15.5, 3374.0], [15.6, 3385.0], [15.7, 3385.0], [15.8, 3387.0], [15.9, 3387.0], [16.0, 3387.0], [16.1, 3387.0], [16.2, 3387.0], [16.3, 3387.0], [16.4, 3389.0], [16.5, 3389.0], [16.6, 3389.0], [16.7, 3389.0], [16.8, 3390.0], [16.9, 3390.0], [17.0, 3390.0], [17.1, 3390.0], [17.2, 3392.0], [17.3, 3392.0], [17.4, 3393.0], [17.5, 3393.0], [17.6, 3394.0], [17.7, 3394.0], [17.8, 3394.0], [17.9, 3394.0], [18.0, 3398.0], [18.1, 3398.0], [18.2, 3400.0], [18.3, 3400.0], [18.4, 3402.0], [18.5, 3402.0], [18.6, 3403.0], [18.7, 3403.0], [18.8, 3403.0], [18.9, 3403.0], [19.0, 3406.0], [19.1, 3406.0], [19.2, 3410.0], [19.3, 3410.0], [19.4, 3418.0], [19.5, 3418.0], [19.6, 3419.0], [19.7, 3419.0], [19.8, 3420.0], [19.9, 3420.0], [20.0, 3423.0], [20.1, 3423.0], [20.2, 3425.0], [20.3, 3425.0], [20.4, 3429.0], [20.5, 3429.0], [20.6, 3429.0], [20.7, 3429.0], [20.8, 3429.0], [20.9, 3429.0], [21.0, 3431.0], [21.1, 3431.0], [21.2, 3433.0], [21.3, 3433.0], [21.4, 3433.0], [21.5, 3433.0], [21.6, 3435.0], [21.7, 3435.0], [21.8, 3435.0], [21.9, 3435.0], [22.0, 3436.0], [22.1, 3436.0], [22.2, 3437.0], [22.3, 3437.0], [22.4, 3438.0], [22.5, 3438.0], [22.6, 3441.0], [22.7, 3441.0], [22.8, 3443.0], [22.9, 3443.0], [23.0, 3443.0], [23.1, 3443.0], [23.2, 3444.0], [23.3, 3444.0], [23.4, 3448.0], [23.5, 3448.0], [23.6, 3453.0], [23.7, 3453.0], [23.8, 3456.0], [23.9, 3456.0], [24.0, 3467.0], [24.1, 3467.0], [24.2, 3467.0], [24.3, 3467.0], [24.4, 3468.0], [24.5, 3468.0], [24.6, 3470.0], [24.7, 3470.0], [24.8, 3473.0], [24.9, 3473.0], [25.0, 3474.0], [25.1, 3474.0], [25.2, 3477.0], [25.3, 3477.0], [25.4, 3477.0], [25.5, 3477.0], [25.6, 3479.0], [25.7, 3479.0], [25.8, 3479.0], [25.9, 3479.0], [26.0, 3480.0], [26.1, 3480.0], [26.2, 3485.0], [26.3, 3485.0], [26.4, 3485.0], [26.5, 3485.0], [26.6, 3486.0], [26.7, 3486.0], [26.8, 3486.0], [26.9, 3486.0], [27.0, 3488.0], [27.1, 3488.0], [27.2, 3491.0], [27.3, 3491.0], [27.4, 3492.0], [27.5, 3492.0], [27.6, 3492.0], [27.7, 3492.0], [27.8, 3496.0], [27.9, 3496.0], [28.0, 3498.0], [28.1, 3498.0], [28.2, 3498.0], [28.3, 3498.0], [28.4, 3498.0], [28.5, 3498.0], [28.6, 3500.0], [28.7, 3500.0], [28.8, 3500.0], [28.9, 3500.0], [29.0, 3503.0], [29.1, 3503.0], [29.2, 3505.0], [29.3, 3505.0], [29.4, 3505.0], [29.5, 3505.0], [29.6, 3507.0], [29.7, 3507.0], [29.8, 3507.0], [29.9, 3507.0], [30.0, 3509.0], [30.1, 3509.0], [30.2, 3511.0], [30.3, 3511.0], [30.4, 3513.0], [30.5, 3513.0], [30.6, 3515.0], [30.7, 3515.0], [30.8, 3515.0], [30.9, 3515.0], [31.0, 3515.0], [31.1, 3515.0], [31.2, 3516.0], [31.3, 3516.0], [31.4, 3516.0], [31.5, 3516.0], [31.6, 3517.0], [31.7, 3517.0], [31.8, 3517.0], [31.9, 3517.0], [32.0, 3517.0], [32.1, 3517.0], [32.2, 3517.0], [32.3, 3517.0], [32.4, 3519.0], [32.5, 3519.0], [32.6, 3519.0], [32.7, 3519.0], [32.8, 3519.0], [32.9, 3519.0], [33.0, 3519.0], [33.1, 3519.0], [33.2, 3520.0], [33.3, 3520.0], [33.4, 3521.0], [33.5, 3521.0], [33.6, 3522.0], [33.7, 3522.0], [33.8, 3525.0], [33.9, 3525.0], [34.0, 3525.0], [34.1, 3525.0], [34.2, 3527.0], [34.3, 3527.0], [34.4, 3527.0], [34.5, 3527.0], [34.6, 3527.0], [34.7, 3527.0], [34.8, 3528.0], [34.9, 3528.0], [35.0, 3528.0], [35.1, 3528.0], [35.2, 3528.0], [35.3, 3528.0], [35.4, 3529.0], [35.5, 3529.0], [35.6, 3530.0], [35.7, 3530.0], [35.8, 3531.0], [35.9, 3531.0], [36.0, 3531.0], [36.1, 3531.0], [36.2, 3531.0], [36.3, 3531.0], [36.4, 3531.0], [36.5, 3531.0], [36.6, 3531.0], [36.7, 3531.0], [36.8, 3532.0], [36.9, 3532.0], [37.0, 3533.0], [37.1, 3533.0], [37.2, 3533.0], [37.3, 3533.0], [37.4, 3534.0], [37.5, 3534.0], [37.6, 3534.0], [37.7, 3534.0], [37.8, 3534.0], [37.9, 3534.0], [38.0, 3535.0], [38.1, 3535.0], [38.2, 3535.0], [38.3, 3535.0], [38.4, 3535.0], [38.5, 3535.0], [38.6, 3537.0], [38.7, 3537.0], [38.8, 3537.0], [38.9, 3537.0], [39.0, 3539.0], [39.1, 3539.0], [39.2, 3544.0], [39.3, 3544.0], [39.4, 3547.0], [39.5, 3547.0], [39.6, 3548.0], [39.7, 3548.0], [39.8, 3549.0], [39.9, 3549.0], [40.0, 3552.0], [40.1, 3552.0], [40.2, 3553.0], [40.3, 3553.0], [40.4, 3554.0], [40.5, 3554.0], [40.6, 3563.0], [40.7, 3563.0], [40.8, 6650.0], [40.9, 6650.0], [41.0, 6654.0], [41.1, 6654.0], [41.2, 6656.0], [41.3, 6656.0], [41.4, 6656.0], [41.5, 6656.0], [41.6, 6657.0], [41.7, 6657.0], [41.8, 6658.0], [41.9, 6658.0], [42.0, 6659.0], [42.1, 6659.0], [42.2, 6665.0], [42.3, 6665.0], [42.4, 6671.0], [42.5, 6671.0], [42.6, 6674.0], [42.7, 6674.0], [42.8, 6674.0], [42.9, 6676.0], [43.0, 6676.0], [43.1, 6677.0], [43.2, 6677.0], [43.3, 6677.0], [43.4, 6677.0], [43.5, 6682.0], [43.6, 6682.0], [43.7, 6683.0], [43.8, 6683.0], [43.9, 6685.0], [44.0, 6685.0], [44.1, 6689.0], [44.2, 6689.0], [44.3, 6691.0], [44.4, 6691.0], [44.5, 6698.0], [44.6, 6698.0], [44.7, 6698.0], [44.8, 6698.0], [44.9, 6983.0], [45.0, 6983.0], [45.1, 7631.0], [45.2, 7631.0], [45.3, 7638.0], [45.4, 7638.0], [45.5, 7651.0], [45.6, 7651.0], [45.7, 7660.0], [45.8, 7660.0], [45.9, 7666.0], [46.0, 7666.0], [46.1, 7670.0], [46.2, 7670.0], [46.3, 7670.0], [46.4, 7670.0], [46.5, 7674.0], [46.6, 7674.0], [46.7, 7676.0], [46.8, 7676.0], [46.9, 7677.0], [47.0, 7677.0], [47.1, 7682.0], [47.2, 7682.0], [47.3, 7684.0], [47.4, 7684.0], [47.5, 7685.0], [47.6, 7685.0], [47.7, 7685.0], [47.8, 7685.0], [47.9, 7687.0], [48.0, 7687.0], [48.1, 7688.0], [48.2, 7688.0], [48.3, 7689.0], [48.4, 7689.0], [48.5, 7691.0], [48.6, 7691.0], [48.7, 7691.0], [48.8, 7691.0], [48.9, 7692.0], [49.0, 7692.0], [49.1, 7693.0], [49.2, 7693.0], [49.3, 7694.0], [49.4, 7694.0], [49.5, 7694.0], [49.6, 7694.0], [49.7, 7695.0], [49.8, 7695.0], [49.9, 7695.0], [50.0, 7695.0], [50.1, 7695.0], [50.2, 7695.0], [50.3, 7696.0], [50.4, 7696.0], [50.5, 7698.0], [50.6, 7698.0], [50.7, 7698.0], [50.8, 7698.0], [50.9, 7699.0], [51.0, 7699.0], [51.1, 7701.0], [51.2, 7701.0], [51.3, 7705.0], [51.4, 7705.0], [51.5, 7706.0], [51.6, 7706.0], [51.7, 7707.0], [51.8, 7707.0], [51.9, 7709.0], [52.0, 7709.0], [52.1, 7710.0], [52.2, 7710.0], [52.3, 7712.0], [52.4, 7712.0], [52.5, 7713.0], [52.6, 7713.0], [52.7, 7717.0], [52.8, 7717.0], [52.9, 7717.0], [53.0, 7717.0], [53.1, 7718.0], [53.2, 7718.0], [53.3, 7718.0], [53.4, 7718.0], [53.5, 7719.0], [53.6, 7719.0], [53.7, 7719.0], [53.8, 7719.0], [53.9, 7720.0], [54.0, 7720.0], [54.1, 7723.0], [54.2, 7723.0], [54.3, 7723.0], [54.4, 7723.0], [54.5, 7724.0], [54.6, 7724.0], [54.7, 7725.0], [54.8, 7725.0], [54.9, 7725.0], [55.0, 7725.0], [55.1, 7725.0], [55.2, 7725.0], [55.3, 7726.0], [55.4, 7726.0], [55.5, 7731.0], [55.6, 7731.0], [55.7, 7731.0], [55.8, 7731.0], [55.9, 7732.0], [56.0, 7732.0], [56.1, 7732.0], [56.2, 7732.0], [56.3, 7732.0], [56.4, 7732.0], [56.5, 7733.0], [56.6, 7733.0], [56.7, 7734.0], [56.8, 7734.0], [56.9, 7736.0], [57.0, 7736.0], [57.1, 7736.0], [57.2, 7736.0], [57.3, 7738.0], [57.4, 7738.0], [57.5, 7740.0], [57.6, 7740.0], [57.7, 7741.0], [57.8, 7741.0], [57.9, 7744.0], [58.0, 7744.0], [58.1, 7745.0], [58.2, 7745.0], [58.3, 7748.0], [58.4, 7748.0], [58.5, 7750.0], [58.6, 7750.0], [58.7, 7752.0], [58.8, 7752.0], [58.9, 7753.0], [59.0, 7753.0], [59.1, 7754.0], [59.2, 7754.0], [59.3, 7754.0], [59.4, 7754.0], [59.5, 7755.0], [59.6, 7755.0], [59.7, 7755.0], [59.8, 7755.0], [59.9, 7755.0], [60.0, 7755.0], [60.1, 7759.0], [60.2, 7759.0], [60.3, 7760.0], [60.4, 7760.0], [60.5, 7760.0], [60.6, 7760.0], [60.7, 7763.0], [60.8, 7763.0], [60.9, 7771.0], [61.0, 7771.0], [61.1, 7778.0], [61.2, 7778.0], [61.3, 7782.0], [61.4, 7782.0], [61.5, 7788.0], [61.6, 7788.0], [61.7, 7789.0], [61.8, 7789.0], [61.9, 7789.0], [62.0, 7789.0], [62.1, 7790.0], [62.2, 7790.0], [62.3, 7791.0], [62.4, 7791.0], [62.5, 7794.0], [62.6, 7794.0], [62.7, 7794.0], [62.8, 7794.0], [62.9, 7795.0], [63.0, 7795.0], [63.1, 7800.0], [63.2, 7800.0], [63.3, 7800.0], [63.4, 7800.0], [63.5, 7800.0], [63.6, 7800.0], [63.7, 7802.0], [63.8, 7802.0], [63.9, 7803.0], [64.0, 7803.0], [64.1, 7804.0], [64.2, 7804.0], [64.3, 7806.0], [64.4, 7806.0], [64.5, 7807.0], [64.6, 7807.0], [64.7, 7808.0], [64.8, 7808.0], [64.9, 7809.0], [65.0, 7809.0], [65.1, 7809.0], [65.2, 7809.0], [65.3, 7810.0], [65.4, 7810.0], [65.5, 7811.0], [65.6, 7811.0], [65.7, 7812.0], [65.8, 7812.0], [65.9, 7812.0], [66.0, 7812.0], [66.1, 7813.0], [66.2, 7813.0], [66.3, 7818.0], [66.4, 7818.0], [66.5, 7818.0], [66.6, 7818.0], [66.7, 7823.0], [66.8, 7823.0], [66.9, 7829.0], [67.0, 7829.0], [67.1, 7829.0], [67.2, 7829.0], [67.3, 7829.0], [67.4, 7829.0], [67.5, 7830.0], [67.6, 7830.0], [67.7, 7838.0], [67.8, 7838.0], [67.9, 7839.0], [68.0, 7839.0], [68.1, 7840.0], [68.2, 7840.0], [68.3, 7840.0], [68.4, 7840.0], [68.5, 7840.0], [68.6, 7840.0], [68.7, 7841.0], [68.8, 7841.0], [68.9, 7842.0], [69.0, 7842.0], [69.1, 7844.0], [69.2, 7844.0], [69.3, 7844.0], [69.4, 7844.0], [69.5, 7848.0], [69.6, 7848.0], [69.7, 7850.0], [69.8, 7850.0], [69.9, 7853.0], [70.0, 7853.0], [70.1, 7854.0], [70.2, 7854.0], [70.3, 7856.0], [70.4, 7856.0], [70.5, 7859.0], [70.6, 7859.0], [70.7, 7859.0], [70.8, 7859.0], [70.9, 7860.0], [71.0, 7860.0], [71.1, 7863.0], [71.2, 7863.0], [71.3, 7864.0], [71.4, 7864.0], [71.5, 7866.0], [71.6, 7866.0], [71.7, 7867.0], [71.8, 7867.0], [71.9, 7867.0], [72.0, 7867.0], [72.1, 7868.0], [72.2, 7868.0], [72.3, 7869.0], [72.4, 7869.0], [72.5, 7871.0], [72.6, 7871.0], [72.7, 7871.0], [72.8, 7871.0], [72.9, 7873.0], [73.0, 7873.0], [73.1, 7875.0], [73.2, 7875.0], [73.3, 7878.0], [73.4, 7878.0], [73.5, 7881.0], [73.6, 7881.0], [73.7, 7881.0], [73.8, 7881.0], [73.9, 7884.0], [74.0, 7884.0], [74.1, 7887.0], [74.2, 7887.0], [74.3, 7890.0], [74.4, 7890.0], [74.5, 7891.0], [74.6, 7891.0], [74.7, 7894.0], [74.8, 7894.0], [74.9, 7895.0], [75.0, 7895.0], [75.1, 7897.0], [75.2, 7897.0], [75.3, 7901.0], [75.4, 7901.0], [75.5, 7903.0], [75.6, 7903.0], [75.7, 7903.0], [75.8, 7903.0], [75.9, 7904.0], [76.0, 7904.0], [76.1, 7905.0], [76.2, 7905.0], [76.3, 7909.0], [76.4, 7909.0], [76.5, 7909.0], [76.6, 7909.0], [76.7, 7912.0], [76.8, 7912.0], [76.9, 7913.0], [77.0, 7913.0], [77.1, 7916.0], [77.2, 7916.0], [77.3, 7916.0], [77.4, 7916.0], [77.5, 7918.0], [77.6, 7918.0], [77.7, 7918.0], [77.8, 7918.0], [77.9, 7920.0], [78.0, 7920.0], [78.1, 7920.0], [78.2, 7920.0], [78.3, 7920.0], [78.4, 7920.0], [78.5, 7921.0], [78.6, 7921.0], [78.7, 7923.0], [78.8, 7923.0], [78.9, 7924.0], [79.0, 7924.0], [79.1, 7925.0], [79.2, 7925.0], [79.3, 7926.0], [79.4, 7926.0], [79.5, 7929.0], [79.6, 7929.0], [79.7, 7933.0], [79.8, 7933.0], [79.9, 7940.0], [80.0, 7940.0], [80.1, 7941.0], [80.2, 7941.0], [80.3, 7941.0], [80.4, 7941.0], [80.5, 7942.0], [80.6, 7942.0], [80.7, 7945.0], [80.8, 7945.0], [80.9, 7948.0], [81.0, 7948.0], [81.1, 7949.0], [81.2, 7949.0], [81.3, 7950.0], [81.4, 7950.0], [81.5, 7952.0], [81.6, 7952.0], [81.7, 7958.0], [81.8, 7958.0], [81.9, 7959.0], [82.0, 7959.0], [82.1, 7960.0], [82.2, 7960.0], [82.3, 7961.0], [82.4, 7961.0], [82.5, 7961.0], [82.6, 7961.0], [82.7, 7964.0], [82.8, 7964.0], [82.9, 7965.0], [83.0, 7965.0], [83.1, 7977.0], [83.2, 7977.0], [83.3, 7978.0], [83.4, 7978.0], [83.5, 7978.0], [83.6, 7978.0], [83.7, 7979.0], [83.8, 7979.0], [83.9, 7980.0], [84.0, 7980.0], [84.1, 7980.0], [84.2, 7980.0], [84.3, 7981.0], [84.4, 7981.0], [84.5, 7989.0], [84.6, 7989.0], [84.7, 7989.0], [84.8, 7989.0], [84.9, 7989.0], [85.0, 7989.0], [85.1, 7992.0], [85.2, 7992.0], [85.3, 7998.0], [85.4, 7998.0], [85.5, 7999.0], [85.6, 7999.0], [85.7, 8001.0], [85.8, 8001.0], [85.9, 8001.0], [86.0, 8001.0], [86.1, 8008.0], [86.2, 8008.0], [86.3, 8009.0], [86.4, 8009.0], [86.5, 8011.0], [86.6, 8011.0], [86.7, 8012.0], [86.8, 8012.0], [86.9, 8014.0], [87.0, 8014.0], [87.1, 8018.0], [87.2, 8018.0], [87.3, 8018.0], [87.4, 8018.0], [87.5, 8020.0], [87.6, 8020.0], [87.7, 8025.0], [87.8, 8025.0], [87.9, 8026.0], [88.0, 8026.0], [88.1, 8027.0], [88.2, 8027.0], [88.3, 8032.0], [88.4, 8032.0], [88.5, 8032.0], [88.6, 8032.0], [88.7, 8036.0], [88.8, 8036.0], [88.9, 8038.0], [89.0, 8038.0], [89.1, 8039.0], [89.2, 8039.0], [89.3, 8040.0], [89.4, 8040.0], [89.5, 8041.0], [89.6, 8041.0], [89.7, 8044.0], [89.8, 8044.0], [89.9, 8045.0], [90.0, 8045.0], [90.1, 8048.0], [90.2, 8048.0], [90.3, 8050.0], [90.4, 8050.0], [90.5, 8050.0], [90.6, 8050.0], [90.7, 8052.0], [90.8, 8052.0], [90.9, 8053.0], [91.0, 8053.0], [91.1, 8053.0], [91.2, 8053.0], [91.3, 8056.0], [91.4, 8056.0], [91.5, 8064.0], [91.6, 8064.0], [91.7, 8068.0], [91.8, 8068.0], [91.9, 8068.0], [92.0, 8068.0], [92.1, 8070.0], [92.2, 8070.0], [92.3, 8070.0], [92.4, 8070.0], [92.5, 8071.0], [92.6, 8071.0], [92.7, 8073.0], [92.8, 8073.0], [92.9, 8075.0], [93.0, 8075.0], [93.1, 8075.0], [93.2, 8075.0], [93.3, 8081.0], [93.4, 8081.0], [93.5, 8082.0], [93.6, 8082.0], [93.7, 8084.0], [93.8, 8084.0], [93.9, 8084.0], [94.0, 8084.0], [94.1, 8084.0], [94.2, 8084.0], [94.3, 8086.0], [94.4, 8086.0], [94.5, 8088.0], [94.6, 8088.0], [94.7, 8088.0], [94.8, 8088.0], [94.9, 8089.0], [95.0, 8089.0], [95.1, 8091.0], [95.2, 8091.0], [95.3, 8092.0], [95.4, 8092.0], [95.5, 8094.0], [95.6, 8094.0], [95.7, 8094.0], [95.8, 8094.0], [95.9, 8096.0], [96.0, 8096.0], [96.1, 8096.0], [96.2, 8096.0], [96.3, 8098.0], [96.4, 8098.0], [96.5, 8100.0], [96.6, 8100.0], [96.7, 8102.0], [96.8, 8102.0], [96.9, 8102.0], [97.0, 8102.0], [97.1, 8103.0], [97.2, 8103.0], [97.3, 8103.0], [97.4, 8103.0], [97.5, 8104.0], [97.6, 8104.0], [97.7, 8108.0], [97.8, 8108.0], [97.9, 8109.0], [98.0, 8109.0], [98.1, 8112.0], [98.2, 8112.0], [98.3, 8117.0], [98.4, 8117.0], [98.5, 8120.0], [98.6, 8120.0], [98.7, 8123.0], [98.8, 8123.0], [98.9, 8441.0], [99.0, 8441.0], [99.1, 9159.0], [99.2, 9159.0], [99.3, 9165.0], [99.4, 9165.0], [99.5, 9166.0], [99.6, 9166.0], [99.7, 9167.0], [99.8, 9167.0], [99.9, 9182.0], [100.0, 9182.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[0.0, 10681.0], [0.1, 10681.0], [0.2, 10701.0], [0.3, 10701.0], [0.4, 10703.0], [0.5, 10703.0], [0.6, 10703.0], [0.7, 10704.0], [0.8, 10704.0], [0.9, 10704.0], [1.0, 10705.0], [1.1, 10705.0], [1.2, 10715.0], [1.3, 10715.0], [1.4, 10719.0], [1.5, 10719.0], [1.6, 10724.0], [1.7, 10724.0], [1.8, 13470.0], [1.9, 13470.0], [2.0, 13855.0], [2.1, 13855.0], [2.2, 13878.0], [2.3, 13878.0], [2.4, 13888.0], [2.5, 13888.0], [2.6, 13889.0], [2.7, 13889.0], [2.8, 13889.0], [2.9, 13890.0], [3.0, 13890.0], [3.1, 13890.0], [3.2, 13894.0], [3.3, 13894.0], [3.4, 13894.0], [3.5, 13898.0], [3.6, 13898.0], [3.7, 13903.0], [3.8, 13903.0], [3.9, 13904.0], [4.0, 13904.0], [4.1, 13908.0], [4.2, 13908.0], [4.3, 13912.0], [4.4, 13912.0], [4.5, 13915.0], [4.6, 13915.0], [4.7, 13915.0], [4.8, 13915.0], [4.9, 13916.0], [5.0, 13916.0], [5.1, 13916.0], [5.2, 13916.0], [5.3, 13920.0], [5.4, 13920.0], [5.5, 13920.0], [5.6, 13920.0], [5.7, 13923.0], [5.8, 13923.0], [5.9, 13926.0], [6.0, 13926.0], [6.1, 13929.0], [6.2, 13929.0], [6.3, 13932.0], [6.4, 13932.0], [6.5, 13934.0], [6.6, 13934.0], [6.7, 13936.0], [6.8, 13936.0], [6.9, 13936.0], [7.0, 13936.0], [7.1, 13943.0], [7.2, 13943.0], [7.3, 13944.0], [7.4, 13944.0], [7.5, 13946.0], [7.6, 13946.0], [7.7, 13947.0], [7.8, 13947.0], [7.9, 13950.0], [8.0, 13950.0], [8.1, 13950.0], [8.2, 13950.0], [8.3, 13951.0], [8.4, 13951.0], [8.5, 13958.0], [8.6, 13958.0], [8.7, 13960.0], [8.8, 13960.0], [8.9, 13962.0], [9.0, 13962.0], [9.1, 13963.0], [9.2, 13963.0], [9.3, 13966.0], [9.4, 13970.0], [9.5, 13970.0], [9.6, 13971.0], [9.7, 13971.0], [9.8, 13973.0], [9.9, 13973.0], [10.0, 13976.0], [10.1, 13976.0], [10.2, 13977.0], [10.3, 13977.0], [10.4, 13977.0], [10.5, 13977.0], [10.6, 13978.0], [10.7, 13978.0], [10.8, 13978.0], [10.9, 13978.0], [11.0, 13978.0], [11.1, 13978.0], [11.2, 13982.0], [11.3, 13982.0], [11.4, 13982.0], [11.5, 13982.0], [11.6, 13988.0], [11.7, 13988.0], [11.8, 13993.0], [11.9, 13993.0], [12.0, 13993.0], [12.1, 13993.0], [12.2, 13994.0], [12.3, 13994.0], [12.4, 13996.0], [12.5, 13996.0], [12.6, 13997.0], [12.7, 13997.0], [12.8, 13998.0], [12.9, 13998.0], [13.0, 13999.0], [13.1, 13999.0], [13.2, 13999.0], [13.3, 13999.0], [13.4, 14003.0], [13.5, 14003.0], [13.6, 14004.0], [13.7, 14004.0], [13.8, 14007.0], [13.9, 14007.0], [14.0, 14009.0], [14.1, 14009.0], [14.2, 14013.0], [14.3, 14013.0], [14.4, 14014.0], [14.5, 14014.0], [14.6, 14014.0], [14.7, 14014.0], [14.8, 14014.0], [14.9, 14014.0], [15.0, 14017.0], [15.1, 14017.0], [15.2, 14026.0], [15.3, 14026.0], [15.4, 14031.0], [15.5, 14031.0], [15.6, 14032.0], [15.7, 14032.0], [15.8, 14036.0], [15.9, 14036.0], [16.0, 14037.0], [16.1, 14037.0], [16.2, 14042.0], [16.3, 14042.0], [16.4, 14042.0], [16.5, 14042.0], [16.6, 14042.0], [16.7, 14042.0], [16.8, 14044.0], [16.9, 14044.0], [17.0, 14045.0], [17.1, 14045.0], [17.2, 14048.0], [17.3, 14048.0], [17.4, 14050.0], [17.5, 14050.0], [17.6, 14050.0], [17.7, 14050.0], [17.8, 14053.0], [17.9, 14053.0], [18.0, 14053.0], [18.1, 14053.0], [18.2, 14054.0], [18.3, 14054.0], [18.4, 14055.0], [18.5, 14055.0], [18.6, 14058.0], [18.7, 14058.0], [18.8, 14066.0], [18.9, 14066.0], [19.0, 14066.0], [19.1, 14066.0], [19.2, 14075.0], [19.3, 14075.0], [19.4, 14078.0], [19.5, 14078.0], [19.6, 14081.0], [19.7, 14081.0], [19.8, 14081.0], [19.9, 14081.0], [20.0, 14086.0], [20.1, 14086.0], [20.2, 14089.0], [20.3, 14089.0], [20.4, 14089.0], [20.5, 14089.0], [20.6, 14089.0], [20.7, 14089.0], [20.8, 14089.0], [20.9, 14089.0], [21.0, 14092.0], [21.1, 14092.0], [21.2, 14096.0], [21.3, 14096.0], [21.4, 14099.0], [21.5, 14099.0], [21.6, 14104.0], [21.7, 14104.0], [21.8, 14105.0], [21.9, 14105.0], [22.0, 14107.0], [22.1, 14107.0], [22.2, 14107.0], [22.3, 14107.0], [22.4, 14108.0], [22.5, 14108.0], [22.6, 14109.0], [22.7, 14109.0], [22.8, 14109.0], [22.9, 14109.0], [23.0, 14111.0], [23.1, 14111.0], [23.2, 14114.0], [23.3, 14114.0], [23.4, 14118.0], [23.5, 14118.0], [23.6, 14121.0], [23.7, 14121.0], [23.8, 14122.0], [23.9, 14122.0], [24.0, 14122.0], [24.1, 14122.0], [24.2, 14123.0], [24.3, 14123.0], [24.4, 14127.0], [24.5, 14127.0], [24.6, 14127.0], [24.7, 14127.0], [24.8, 14133.0], [24.9, 14133.0], [25.0, 14135.0], [25.1, 14135.0], [25.2, 14137.0], [25.3, 14137.0], [25.4, 14138.0], [25.5, 14138.0], [25.6, 14138.0], [25.7, 14138.0], [25.8, 14138.0], [25.9, 14138.0], [26.0, 14138.0], [26.1, 14138.0], [26.2, 14138.0], [26.3, 14138.0], [26.4, 14138.0], [26.5, 14138.0], [26.6, 14139.0], [26.7, 14139.0], [26.8, 14140.0], [26.9, 14140.0], [27.0, 14140.0], [27.1, 14140.0], [27.2, 14140.0], [27.3, 14140.0], [27.4, 14140.0], [27.5, 14140.0], [27.6, 14140.0], [27.7, 14140.0], [27.8, 14140.0], [27.9, 14140.0], [28.0, 14143.0], [28.1, 14143.0], [28.2, 14143.0], [28.3, 14143.0], [28.4, 14144.0], [28.5, 14144.0], [28.6, 14144.0], [28.7, 14144.0], [28.8, 14146.0], [28.9, 14146.0], [29.0, 14146.0], [29.1, 14146.0], [29.2, 14147.0], [29.3, 14147.0], [29.4, 14149.0], [29.5, 14149.0], [29.6, 14150.0], [29.7, 14150.0], [29.8, 14150.0], [29.9, 14150.0], [30.0, 14151.0], [30.1, 14151.0], [30.2, 14152.0], [30.3, 14152.0], [30.4, 14153.0], [30.5, 14153.0], [30.6, 14153.0], [30.7, 14153.0], [30.8, 14153.0], [30.9, 14153.0], [31.0, 14153.0], [31.1, 14153.0], [31.2, 14154.0], [31.3, 14154.0], [31.4, 14154.0], [31.5, 14154.0], [31.6, 14154.0], [31.7, 14154.0], [31.8, 14155.0], [31.9, 14155.0], [32.0, 14155.0], [32.1, 14155.0], [32.2, 14155.0], [32.3, 14155.0], [32.4, 14155.0], [32.5, 14155.0], [32.6, 14156.0], [32.7, 14156.0], [32.8, 14156.0], [32.9, 14156.0], [33.0, 14157.0], [33.1, 14157.0], [33.2, 14157.0], [33.3, 14157.0], [33.4, 14158.0], [33.5, 14158.0], [33.6, 14158.0], [33.7, 14158.0], [33.8, 14159.0], [33.9, 14159.0], [34.0, 14162.0], [34.1, 14162.0], [34.2, 14163.0], [34.3, 14163.0], [34.4, 14163.0], [34.5, 14163.0], [34.6, 14166.0], [34.7, 14166.0], [34.8, 14173.0], [34.9, 14173.0], [35.0, 18368.0], [35.1, 18368.0], [35.2, 18383.0], [35.3, 18383.0], [35.4, 18386.0], [35.5, 18386.0], [35.6, 18388.0], [35.7, 18388.0], [35.8, 18389.0], [35.9, 18389.0], [36.0, 18395.0], [36.1, 18395.0], [36.2, 18398.0], [36.3, 18398.0], [36.4, 18398.0], [36.5, 18398.0], [36.6, 18400.0], [36.7, 18400.0], [36.8, 18401.0], [36.9, 18401.0], [37.0, 18404.0], [37.1, 18404.0], [37.2, 18405.0], [37.3, 18405.0], [37.4, 18406.0], [37.5, 18406.0], [37.6, 18410.0], [37.7, 18410.0], [37.8, 18410.0], [37.9, 18410.0], [38.0, 18410.0], [38.1, 18410.0], [38.2, 18411.0], [38.3, 18411.0], [38.4, 18415.0], [38.5, 18415.0], [38.6, 18417.0], [38.7, 18417.0], [38.8, 18417.0], [38.9, 18417.0], [39.0, 18418.0], [39.1, 18418.0], [39.2, 18418.0], [39.3, 18418.0], [39.4, 18419.0], [39.5, 18419.0], [39.6, 18421.0], [39.7, 18421.0], [39.8, 18423.0], [39.9, 18423.0], [40.0, 18426.0], [40.1, 18426.0], [40.2, 18426.0], [40.3, 18426.0], [40.4, 18434.0], [40.5, 18434.0], [40.6, 18435.0], [40.7, 18435.0], [40.8, 18435.0], [40.9, 18436.0], [41.0, 18436.0], [41.1, 18437.0], [41.2, 18437.0], [41.3, 18438.0], [41.4, 18438.0], [41.5, 18439.0], [41.6, 18439.0], [41.7, 18444.0], [41.8, 18444.0], [41.9, 18445.0], [42.0, 18445.0], [42.1, 18446.0], [42.2, 18446.0], [42.3, 18446.0], [42.4, 18446.0], [42.5, 18447.0], [42.6, 18447.0], [42.7, 18447.0], [42.8, 18447.0], [42.9, 18450.0], [43.0, 18450.0], [43.1, 18452.0], [43.2, 18452.0], [43.3, 18454.0], [43.4, 18454.0], [43.5, 18454.0], [43.6, 18454.0], [43.7, 18456.0], [43.8, 18456.0], [43.9, 18456.0], [44.0, 18456.0], [44.1, 18457.0], [44.2, 18457.0], [44.3, 18458.0], [44.4, 18458.0], [44.5, 18459.0], [44.6, 18459.0], [44.7, 18462.0], [44.8, 18462.0], [44.9, 18463.0], [45.0, 18463.0], [45.1, 18464.0], [45.2, 18464.0], [45.3, 18466.0], [45.4, 18466.0], [45.5, 18467.0], [45.6, 18467.0], [45.7, 18468.0], [45.8, 18468.0], [45.9, 18469.0], [46.0, 18469.0], [46.1, 18471.0], [46.2, 18471.0], [46.3, 18471.0], [46.4, 18471.0], [46.5, 18472.0], [46.6, 18472.0], [46.7, 18472.0], [46.8, 18472.0], [46.9, 18472.0], [47.0, 18472.0], [47.1, 18473.0], [47.2, 18473.0], [47.3, 18474.0], [47.4, 18474.0], [47.5, 18475.0], [47.6, 18475.0], [47.7, 18475.0], [47.8, 18475.0], [47.9, 18476.0], [48.0, 18476.0], [48.1, 18476.0], [48.2, 18476.0], [48.3, 18477.0], [48.4, 18477.0], [48.5, 18479.0], [48.6, 18479.0], [48.7, 18479.0], [48.8, 18479.0], [48.9, 18480.0], [49.0, 18480.0], [49.1, 18480.0], [49.2, 18480.0], [49.3, 18481.0], [49.4, 18481.0], [49.5, 18483.0], [49.6, 18483.0], [49.7, 18484.0], [49.8, 18484.0], [49.9, 18484.0], [50.0, 18484.0], [50.1, 18486.0], [50.2, 18486.0], [50.3, 18488.0], [50.4, 18488.0], [50.5, 18490.0], [50.6, 18490.0], [50.7, 18490.0], [50.8, 18490.0], [50.9, 18490.0], [51.0, 18490.0], [51.1, 18493.0], [51.2, 18493.0], [51.3, 18494.0], [51.4, 18494.0], [51.5, 18497.0], [51.6, 18497.0], [51.7, 18499.0], [51.8, 18499.0], [51.9, 18501.0], [52.0, 18501.0], [52.1, 18505.0], [52.2, 18505.0], [52.3, 18505.0], [52.4, 18505.0], [52.5, 18506.0], [52.6, 18506.0], [52.7, 18507.0], [52.8, 18507.0], [52.9, 18509.0], [53.0, 18509.0], [53.1, 18511.0], [53.2, 18511.0], [53.3, 18511.0], [53.4, 18511.0], [53.5, 18511.0], [53.6, 18511.0], [53.7, 18517.0], [53.8, 18517.0], [53.9, 18519.0], [54.0, 18519.0], [54.1, 18521.0], [54.2, 18521.0], [54.3, 18523.0], [54.4, 18523.0], [54.5, 18523.0], [54.6, 18523.0], [54.7, 18524.0], [54.8, 18524.0], [54.9, 18525.0], [55.0, 18525.0], [55.1, 18529.0], [55.2, 18529.0], [55.3, 18531.0], [55.4, 18531.0], [55.5, 18533.0], [55.6, 18533.0], [55.7, 18535.0], [55.8, 18535.0], [55.9, 18537.0], [56.0, 18537.0], [56.1, 18537.0], [56.2, 18537.0], [56.3, 18540.0], [56.4, 18540.0], [56.5, 18540.0], [56.6, 18540.0], [56.7, 18540.0], [56.8, 18540.0], [56.9, 18540.0], [57.0, 18540.0], [57.1, 18541.0], [57.2, 18541.0], [57.3, 18542.0], [57.4, 18542.0], [57.5, 18546.0], [57.6, 18546.0], [57.7, 18550.0], [57.8, 18550.0], [57.9, 18550.0], [58.0, 18550.0], [58.1, 18550.0], [58.2, 18550.0], [58.3, 18553.0], [58.4, 18553.0], [58.5, 18554.0], [58.6, 18554.0], [58.7, 18555.0], [58.8, 18555.0], [58.9, 18556.0], [59.0, 18556.0], [59.1, 18558.0], [59.2, 18558.0], [59.3, 18558.0], [59.4, 18558.0], [59.5, 18559.0], [59.6, 18559.0], [59.7, 18561.0], [59.8, 18561.0], [59.9, 18565.0], [60.0, 18565.0], [60.1, 18567.0], [60.2, 18567.0], [60.3, 18574.0], [60.4, 18574.0], [60.5, 18574.0], [60.6, 18574.0], [60.7, 18579.0], [60.8, 18579.0], [60.9, 18580.0], [61.0, 18580.0], [61.1, 18581.0], [61.2, 18581.0], [61.3, 18586.0], [61.4, 18586.0], [61.5, 18587.0], [61.6, 18587.0], [61.7, 18589.0], [61.8, 18589.0], [61.9, 18590.0], [62.0, 18590.0], [62.1, 18590.0], [62.2, 18590.0], [62.3, 18592.0], [62.4, 18592.0], [62.5, 18593.0], [62.6, 18593.0], [62.7, 18595.0], [62.8, 18595.0], [62.9, 18598.0], [63.0, 18598.0], [63.1, 18599.0], [63.2, 18599.0], [63.3, 18600.0], [63.4, 18600.0], [63.5, 18606.0], [63.6, 18606.0], [63.7, 18606.0], [63.8, 18606.0], [63.9, 18607.0], [64.0, 18607.0], [64.1, 18607.0], [64.2, 18607.0], [64.3, 18609.0], [64.4, 18609.0], [64.5, 18611.0], [64.6, 18611.0], [64.7, 18611.0], [64.8, 18611.0], [64.9, 18614.0], [65.0, 18614.0], [65.1, 18615.0], [65.2, 18615.0], [65.3, 18616.0], [65.4, 18616.0], [65.5, 18616.0], [65.6, 18616.0], [65.7, 18617.0], [65.8, 18617.0], [65.9, 18617.0], [66.0, 18617.0], [66.1, 18618.0], [66.2, 18618.0], [66.3, 18619.0], [66.4, 18619.0], [66.5, 18620.0], [66.6, 18620.0], [66.7, 18623.0], [66.8, 18623.0], [66.9, 18623.0], [67.0, 18623.0], [67.1, 18623.0], [67.2, 18623.0], [67.3, 18626.0], [67.4, 18626.0], [67.5, 18626.0], [67.6, 18626.0], [67.7, 18628.0], [67.8, 18628.0], [67.9, 18630.0], [68.0, 18630.0], [68.1, 18635.0], [68.2, 18635.0], [68.3, 18638.0], [68.4, 18638.0], [68.5, 18638.0], [68.6, 18638.0], [68.7, 18641.0], [68.8, 18641.0], [68.9, 18642.0], [69.0, 18642.0], [69.1, 18643.0], [69.2, 18643.0], [69.3, 18646.0], [69.4, 18646.0], [69.5, 18646.0], [69.6, 18646.0], [69.7, 18650.0], [69.8, 18650.0], [69.9, 18651.0], [70.0, 18651.0], [70.1, 18652.0], [70.2, 18652.0], [70.3, 18652.0], [70.4, 18652.0], [70.5, 18652.0], [70.6, 18652.0], [70.7, 18654.0], [70.8, 18654.0], [70.9, 18654.0], [71.0, 18654.0], [71.1, 18656.0], [71.2, 18656.0], [71.3, 18658.0], [71.4, 18658.0], [71.5, 18658.0], [71.6, 18658.0], [71.7, 18659.0], [71.8, 18659.0], [71.9, 18659.0], [72.0, 18659.0], [72.1, 18664.0], [72.2, 18664.0], [72.3, 18664.0], [72.4, 18664.0], [72.5, 18666.0], [72.6, 18666.0], [72.7, 18666.0], [72.8, 18666.0], [72.9, 18667.0], [73.0, 18667.0], [73.1, 18668.0], [73.2, 18668.0], [73.3, 18673.0], [73.4, 18673.0], [73.5, 18673.0], [73.6, 18673.0], [73.7, 18676.0], [73.8, 18676.0], [73.9, 18676.0], [74.0, 18676.0], [74.1, 18678.0], [74.2, 18678.0], [74.3, 18681.0], [74.4, 18681.0], [74.5, 18681.0], [74.6, 18681.0], [74.7, 18683.0], [74.8, 18683.0], [74.9, 18684.0], [75.0, 18684.0], [75.1, 18684.0], [75.2, 18684.0], [75.3, 18687.0], [75.4, 18687.0], [75.5, 18688.0], [75.6, 18688.0], [75.7, 18689.0], [75.8, 18689.0], [75.9, 18690.0], [76.0, 18690.0], [76.1, 18692.0], [76.2, 18692.0], [76.3, 18692.0], [76.4, 18692.0], [76.5, 18694.0], [76.6, 18694.0], [76.7, 18701.0], [76.8, 18701.0], [76.9, 18702.0], [77.0, 18702.0], [77.1, 18702.0], [77.2, 18702.0], [77.3, 18708.0], [77.4, 18708.0], [77.5, 18710.0], [77.6, 18710.0], [77.7, 18710.0], [77.8, 18710.0], [77.9, 18712.0], [78.0, 18712.0], [78.1, 18715.0], [78.2, 18715.0], [78.3, 18717.0], [78.4, 18717.0], [78.5, 18718.0], [78.6, 18718.0], [78.7, 18719.0], [78.8, 18719.0], [78.9, 18723.0], [79.0, 18723.0], [79.1, 18724.0], [79.2, 18724.0], [79.3, 18730.0], [79.4, 18730.0], [79.5, 18731.0], [79.6, 18731.0], [79.7, 18737.0], [79.8, 18737.0], [79.9, 18738.0], [80.0, 18738.0], [80.1, 18740.0], [80.2, 18740.0], [80.3, 18740.0], [80.4, 18740.0], [80.5, 18743.0], [80.6, 18743.0], [80.7, 18743.0], [80.8, 18743.0], [80.9, 18751.0], [81.0, 18751.0], [81.1, 18751.0], [81.2, 18751.0], [81.3, 18752.0], [81.4, 18752.0], [81.5, 18753.0], [81.6, 18753.0], [81.7, 18753.0], [81.8, 18753.0], [81.9, 18754.0], [82.0, 18754.0], [82.1, 18757.0], [82.2, 18757.0], [82.3, 18759.0], [82.4, 18759.0], [82.5, 18761.0], [82.6, 18761.0], [82.7, 18761.0], [82.8, 18761.0], [82.9, 18764.0], [83.0, 18764.0], [83.1, 18766.0], [83.2, 18766.0], [83.3, 18767.0], [83.4, 18767.0], [83.5, 18768.0], [83.6, 18768.0], [83.7, 18770.0], [83.8, 18770.0], [83.9, 18773.0], [84.0, 18773.0], [84.1, 18783.0], [84.2, 18783.0], [84.3, 18783.0], [84.4, 18783.0], [84.5, 18784.0], [84.6, 18784.0], [84.7, 18785.0], [84.8, 18785.0], [84.9, 18786.0], [85.0, 18786.0], [85.1, 18787.0], [85.2, 18787.0], [85.3, 18790.0], [85.4, 18790.0], [85.5, 18796.0], [85.6, 18796.0], [85.7, 18798.0], [85.8, 18798.0], [85.9, 18801.0], [86.0, 18801.0], [86.1, 18802.0], [86.2, 18802.0], [86.3, 18806.0], [86.4, 18806.0], [86.5, 18806.0], [86.6, 18806.0], [86.7, 18808.0], [86.8, 18808.0], [86.9, 18809.0], [87.0, 18809.0], [87.1, 18810.0], [87.2, 18810.0], [87.3, 18811.0], [87.4, 18811.0], [87.5, 18811.0], [87.6, 18811.0], [87.7, 18813.0], [87.8, 18813.0], [87.9, 18817.0], [88.0, 18817.0], [88.1, 18817.0], [88.2, 18817.0], [88.3, 18817.0], [88.4, 18817.0], [88.5, 18817.0], [88.6, 18817.0], [88.7, 18823.0], [88.8, 18823.0], [88.9, 18826.0], [89.0, 18826.0], [89.1, 18826.0], [89.2, 18826.0], [89.3, 18829.0], [89.4, 18829.0], [89.5, 18829.0], [89.6, 18829.0], [89.7, 18830.0], [89.8, 18830.0], [89.9, 18832.0], [90.0, 18832.0], [90.1, 18833.0], [90.2, 18833.0], [90.3, 18834.0], [90.4, 18834.0], [90.5, 18835.0], [90.6, 18835.0], [90.7, 18837.0], [90.8, 18837.0], [90.9, 18841.0], [91.0, 18841.0], [91.1, 18842.0], [91.2, 18842.0], [91.3, 18842.0], [91.4, 18842.0], [91.5, 18843.0], [91.6, 18843.0], [91.7, 18845.0], [91.8, 18845.0], [91.9, 18848.0], [92.0, 18848.0], [92.1, 18849.0], [92.2, 18849.0], [92.3, 18852.0], [92.4, 18852.0], [92.5, 18853.0], [92.6, 18853.0], [92.7, 18854.0], [92.8, 18854.0], [92.9, 18856.0], [93.0, 18856.0], [93.1, 18858.0], [93.2, 18858.0], [93.3, 18859.0], [93.4, 18859.0], [93.5, 18859.0], [93.6, 18859.0], [93.7, 18867.0], [93.8, 18867.0], [93.9, 18869.0], [94.0, 18869.0], [94.1, 18871.0], [94.2, 18871.0], [94.3, 18876.0], [94.4, 18876.0], [94.5, 18882.0], [94.6, 18882.0], [94.7, 18915.0], [94.8, 18915.0], [94.9, 18915.0], [95.0, 18915.0], [95.1, 18919.0], [95.2, 18919.0], [95.3, 18922.0], [95.4, 18922.0], [95.5, 18926.0], [95.6, 18926.0], [95.7, 18928.0], [95.8, 18928.0], [95.9, 18935.0], [96.0, 18935.0], [96.1, 18937.0], [96.2, 18937.0], [96.3, 18938.0], [96.4, 18938.0], [96.5, 18945.0], [96.6, 18945.0], [96.7, 18945.0], [96.8, 18945.0], [96.9, 18949.0], [97.0, 18949.0], [97.1, 18951.0], [97.2, 18951.0], [97.3, 18957.0], [97.4, 18957.0], [97.5, 18960.0], [97.6, 18960.0], [97.7, 18961.0], [97.8, 18961.0], [97.9, 19202.0], [98.0, 19202.0], [98.1, 19307.0], [98.2, 19307.0], [98.3, 19311.0], [98.4, 19311.0], [98.5, 19312.0], [98.6, 19312.0], [98.7, 19314.0], [98.8, 19314.0], [98.9, 19327.0], [99.0, 19327.0], [99.1, 19351.0], [99.2, 19351.0], [99.3, 19353.0], [99.4, 19353.0], [99.5, 19393.0], [99.6, 19393.0], [99.7, 19396.0], [99.8, 19396.0], [99.9, 19427.0], [100.0, 19427.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 76.0, "series": [{"data": [[8600.0, 5.0], [0.0, 1.0], [9200.0, 74.0], [9100.0, 23.0], [9700.0, 5.0], [9500.0, 28.0], [9400.0, 75.0], [9300.0, 70.0], [9900.0, 1.0], [10100.0, 14.0], [10200.0, 2.0], [10500.0, 11.0], [10400.0, 13.0], [6100.0, 54.0], [6000.0, 63.0], [5900.0, 48.0], [100.0, 4.0], [7500.0, 9.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[2400.0, 9.0], [4400.0, 37.0], [4500.0, 75.0], [4600.0, 75.0], [300.0, 1.0], [4700.0, 2.0], [1200.0, 67.0], [18500.0, 4.0], [18600.0, 1.0], [1300.0, 76.0], [1400.0, 73.0], [1500.0, 56.0], [1600.0, 3.0], [2000.0, 21.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[8400.0, 1.0], [9100.0, 5.0], [600.0, 11.0], [700.0, 3.0], [3100.0, 1.0], [3300.0, 55.0], [3200.0, 21.0], [3400.0, 52.0], [3500.0, 61.0], [6600.0, 20.0], [6900.0, 1.0], [7600.0, 30.0], [7900.0, 52.0], [7800.0, 61.0], [7700.0, 60.0], [8100.0, 12.0], [8000.0, 54.0]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[10700.0, 8.0], [10600.0, 1.0], [13400.0, 1.0], [13800.0, 8.0], [14100.0, 67.0], [14000.0, 41.0], [13900.0, 49.0], [18400.0, 76.0], [18300.0, 8.0], [18500.0, 57.0], [18700.0, 46.0], [18600.0, 67.0], [18800.0, 44.0], [19200.0, 1.0], [18900.0, 16.0], [19300.0, 9.0], [19400.0, 1.0]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1262.0, "series": [{"data": [[0.0, 6.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 232.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1262.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 374.9325000000003, "minX": 1.60773096E12, "maxY": 374.9325000000003, "series": [{"data": [[1.60773096E12, 374.9325000000003]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 94.0, "minX": 1.0, "maxY": 19427.0, "series": [{"data": [[2.0, 159.0], [3.0, 157.0], [4.0, 117.0], [5.0, 117.0], [6.0, 8695.0], [8.0, 8694.5], [9.0, 8695.0], [10.0, 8698.0], [11.0, 9211.0], [13.0, 9206.5], [14.0, 9203.0], [16.0, 9204.5], [17.0, 9180.0], [18.0, 9167.0], [19.0, 9199.0], [21.0, 9177.0], [22.0, 9199.0], [25.0, 9199.333333333334], [26.0, 9232.0], [30.0, 9238.0], [31.0, 9689.25], [33.0, 10194.0], [35.0, 9331.5], [37.0, 9321.0], [38.0, 10178.0], [40.0, 10173.666666666666], [42.0, 9794.0], [45.0, 10190.0], [44.0, 9197.0], [49.0, 9688.5], [48.0, 10181.0], [50.0, 9222.0], [52.0, 9221.5], [57.0, 9341.0], [58.0, 9193.0], [60.0, 9196.166666666666], [62.0, 9709.0], [66.0, 9453.5], [71.0, 9213.0], [70.0, 9416.5], [68.0, 9227.0], [75.0, 9217.333333333334], [74.0, 9239.0], [79.0, 9313.0], [77.0, 9350.0], [76.0, 9197.0], [82.0, 9320.0], [86.0, 9262.0], [90.0, 9264.25], [89.0, 9272.0], [88.0, 9315.4], [95.0, 9197.0], [94.0, 9216.5], [92.0, 10198.0], [99.0, 9318.0], [98.0, 9314.666666666666], [96.0, 9189.0], [102.0, 9337.0], [101.0, 9307.5], [107.0, 9174.0], [106.0, 9214.666666666666], [111.0, 9232.666666666666], [109.0, 9181.0], [115.0, 9248.0], [119.0, 9317.5], [117.0, 9253.0], [116.0, 9233.0], [123.0, 9248.5], [122.0, 9236.5], [120.0, 9229.0], [125.0, 9293.0], [124.0, 9223.0], [134.0, 9260.0], [133.0, 9266.0], [130.0, 9249.0], [142.0, 9271.0], [139.0, 9295.624999999998], [138.0, 9271.0], [137.0, 9249.0], [151.0, 9310.0], [149.0, 9305.0], [148.0, 9277.5], [144.0, 9282.0], [156.0, 9341.0], [155.0, 9370.5], [153.0, 9328.0], [167.0, 9351.0], [166.0, 9373.0], [165.0, 9359.0], [164.0, 9359.0], [163.0, 9355.0], [174.0, 9360.6], [173.0, 9328.0], [168.0, 9347.666666666666], [183.0, 9435.0], [182.0, 9419.0], [181.0, 9383.0], [180.0, 9388.0], [179.0, 9377.0], [177.0, 9374.0], [190.0, 9421.5], [186.0, 9414.25], [184.0, 9361.0], [196.0, 9437.625000000002], [206.0, 9367.333333333334], [205.0, 9379.0], [204.0, 9394.0], [203.0, 9393.0], [200.0, 9431.75], [215.0, 9420.0], [213.0, 9416.0], [212.0, 9445.0], [211.0, 9409.0], [210.0, 9368.0], [219.0, 9403.5], [217.0, 9403.0], [216.0, 9399.0], [226.0, 9400.714285714284], [235.0, 9449.4], [234.0, 9429.0], [233.0, 9441.0], [247.0, 9470.0], [245.0, 9454.0], [255.0, 9450.0], [250.0, 9471.5], [259.0, 9462.5], [271.0, 9495.0], [269.0, 9476.75], [267.0, 9483.0], [266.0, 9473.0], [264.0, 9491.0], [263.0, 9483.0], [262.0, 9471.0], [261.0, 9465.0], [258.0, 9455.0], [256.0, 9462.5], [287.0, 9511.0], [285.0, 9521.0], [275.0, 9499.0], [272.0, 9487.4], [282.0, 9512.0], [281.0, 9520.75], [280.0, 9509.0], [279.0, 9509.5], [278.0, 9490.0], [276.0, 9486.666666666666], [277.0, 9478.0], [303.0, 10494.0], [300.0, 10493.5], [296.0, 9537.142857142857], [291.0, 9520.5], [290.0, 9520.5], [288.0, 9528.0], [306.0, 10498.0], [318.0, 10512.0], [317.0, 10504.0], [314.0, 10504.333333333334], [311.0, 10498.666666666666], [310.0, 10486.0], [309.0, 10101.5], [305.0, 10511.0], [304.0, 10497.0], [335.0, 5973.0], [332.0, 5950.571428571428], [325.0, 9703.0], [324.0, 9705.0], [323.0, 9702.0], [322.0, 10305.25], [350.0, 6015.666666666667], [347.0, 5959.0], [346.0, 5948.75], [345.0, 5961.0], [344.0, 5962.0], [340.0, 5964.8], [367.0, 6005.0], [363.0, 6017.833333333333], [361.0, 5986.0], [355.0, 5978.4], [382.0, 6031.0], [383.0, 6005.5], [381.0, 6009.0], [379.0, 5990.0], [377.0, 5981.0], [373.0, 6000.666666666667], [372.0, 5994.0], [371.0, 5979.0], [368.0, 5974.5], [398.0, 6073.0], [397.0, 6061.0], [395.0, 6024.0], [392.0, 6001.0], [390.0, 6030.0], [386.0, 6022.0], [385.0, 6002.5], [384.0, 6033.0], [412.0, 6047.666666666667], [409.0, 6050.0], [408.0, 6018.0], [407.0, 6031.666666666667], [402.0, 6020.5], [401.0, 6015.0], [430.0, 6098.5], [428.0, 6061.0], [426.0, 6061.666666666667], [424.0, 6063.0], [421.0, 6059.0], [420.0, 6055.0], [417.0, 6053.6], [446.0, 6104.0], [445.0, 6072.0], [444.0, 6097.333333333333], [440.0, 6105.5], [438.0, 6108.249999999999], [463.0, 6110.666666666667], [461.0, 6126.0], [460.0, 6143.0], [456.0, 6116.6], [455.0, 6111.0], [453.0, 6108.5], [451.0, 6135.0], [448.0, 6095.0], [479.0, 6148.571428571428], [472.0, 6136.4], [470.0, 6139.5], [465.0, 6140.5], [464.0, 6120.0], [494.0, 7565.0], [495.0, 7560.0], [492.0, 7566.0], [491.0, 9970.0], [490.0, 6166.0], [489.0, 6166.0], [488.0, 6162.6], [486.0, 6156.0], [484.0, 6148.0], [483.0, 6160.0], [482.0, 6156.0], [500.0, 7564.0], [1.0, 94.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[253.15200000000038, 8219.634000000005]], "isOverall": false, "label": "GET Home-Aggregated", "isController": false}, {"data": [[130.0, 18543.0], [5.0, 18642.0], [500.0, 2654.86464646465], [126.0, 18543.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[496.0419999999999, 2813.9440000000036]], "isOverall": false, "label": "POST Login-Aggregated", "isController": false}, {"data": [[406.0, 694.2142857142857], [500.0, 6100.316872427988]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[497.3679999999999, 5948.945999999997]], "isOverall": false, "label": "GET Login-Aggregated", "isController": false}, {"data": [[2.0, 19396.0], [3.0, 19393.0], [4.0, 19351.0], [5.0, 19353.0], [6.0, 19307.0], [8.0, 19319.5], [9.0, 19311.0], [10.0, 19314.0], [11.0, 18537.0], [13.0, 18463.0], [14.0, 18466.0], [16.0, 18474.0], [17.0, 18615.0], [18.0, 18684.0], [19.0, 18462.0], [21.0, 18442.5], [22.0, 18418.0], [25.0, 18452.333333333332], [26.0, 18398.0], [30.0, 18389.0], [31.0, 18704.25], [33.0, 18918.5], [35.0, 18517.0], [37.0, 18574.0], [38.0, 18945.0], [40.0, 18940.333333333332], [42.0, 18836.0], [45.0, 18932.0], [44.0, 18426.0], [49.0, 18668.5], [48.0, 18960.0], [50.0, 18527.0], [52.0, 18458.0], [57.0, 18630.0], [58.0, 18479.0], [60.0, 18438.666666666668], [62.0, 18662.5], [66.0, 18604.0], [71.0, 18410.0], [70.0, 18649.0], [68.0, 18405.0], [75.0, 18487.333333333332], [74.0, 18580.0], [79.0, 18553.0], [77.0, 18646.0], [76.0, 18405.5], [82.0, 18480.0], [86.0, 18652.0], [90.0, 18590.75], [89.0, 18454.0], [88.0, 18531.6], [95.0, 18436.0], [94.0, 18464.5], [92.0, 18928.0], [99.0, 18555.0], [98.0, 18534.333333333332], [96.0, 18406.0], [102.0, 18606.0], [101.0, 18479.5], [107.0, 18421.0], [106.0, 18526.333333333332], [111.0, 18560.666666666668], [109.0, 18521.0], [115.0, 18550.0], [119.0, 18653.0], [117.0, 18673.0], [116.0, 18593.0], [123.0, 18499.5], [122.0, 18609.5], [120.0, 18368.0], [125.0, 18546.333333333332], [124.0, 18383.0], [134.0, 18550.0], [133.0, 18659.0], [130.0, 18481.0], [142.0, 18533.333333333332], [139.0, 18615.75], [138.0, 18567.0], [137.0, 18673.0], [151.0, 18623.0], [149.0, 18619.5], [148.0, 18618.0], [144.0, 18563.5], [156.0, 18483.0], [155.0, 18661.0], [153.0, 18491.75], [167.0, 18581.0], [166.0, 18669.0], [165.0, 18610.0], [164.0, 18505.0], [163.0, 18516.5], [174.0, 18659.2], [173.0, 18497.0], [168.0, 18614.0], [183.0, 18811.0], [182.0, 18790.0], [181.0, 18676.0], [180.0, 18768.0], [179.0, 18858.0], [177.0, 18676.5], [190.0, 18796.5], [186.0, 18744.0], [184.0, 18472.0], [196.0, 18760.625], [206.0, 18588.666666666668], [205.0, 18447.0], [204.0, 18542.0], [203.0, 18484.0], [200.0, 18805.0], [215.0, 18705.0], [213.0, 18684.0], [212.0, 18719.0], [211.0, 18649.0], [210.0, 18641.0], [219.0, 18553.0], [217.0, 18611.0], [216.0, 18600.0], [226.0, 18606.85714285714], [235.0, 18819.4], [234.0, 18741.0], [233.0, 18837.0], [247.0, 18733.5], [245.0, 18683.0], [255.0, 18783.0], [250.0, 18846.75], [259.0, 18701.0], [271.0, 18817.0], [269.0, 18716.75], [267.0, 18730.0], [266.0, 18806.0], [264.0, 18804.0], [263.0, 18732.0], [262.0, 18654.0], [261.0, 18754.0], [258.0, 18664.0], [256.0, 18775.5], [287.0, 18668.0], [285.0, 18755.5], [275.0, 18826.0], [272.0, 18792.0], [281.0, 18725.25], [282.0, 18759.0], [280.0, 18666.0], [279.0, 18774.0], [278.0, 18796.0], [276.0, 18785.666666666668], [277.0, 18694.0], [303.0, 18669.0], [300.0, 18521.5], [296.0, 18815.571428571428], [291.0, 18786.5], [290.0, 18791.0], [288.0, 18834.0], [306.0, 18479.0], [318.0, 18620.0], [317.0, 18467.0], [314.0, 18583.666666666668], [311.0, 18599.0], [310.0, 18464.0], [309.0, 18552.5], [305.0, 18499.0], [304.0, 18493.0], [335.0, 14005.666666666666], [332.0, 14085.0], [325.0, 18434.0], [324.0, 18417.0], [323.0, 18417.0], [322.0, 18625.25], [350.0, 14009.333333333334], [347.0, 14111.0], [346.0, 13996.0], [345.0, 14037.0], [344.0, 13951.0], [340.0, 13998.8], [367.0, 14026.0], [363.0, 13985.0], [361.0, 14037.0], [355.0, 13968.2], [382.0, 13977.0], [383.0, 14034.5], [381.0, 14073.0], [379.0, 13936.5], [377.0, 13888.0], [373.0, 13995.0], [372.0, 13987.0], [371.0, 14081.0], [368.0, 13916.0], [398.0, 14075.5], [397.0, 14048.0], [395.0, 13912.0], [392.0, 13970.5], [390.0, 14002.5], [386.0, 14030.666666666666], [385.0, 14018.0], [384.0, 14162.0], [412.0, 14013.333333333334], [409.0, 14013.0], [408.0, 13920.0], [407.0, 13965.666666666666], [402.0, 13944.75], [401.0, 13894.0], [430.0, 14092.25], [428.0, 13889.0], [426.0, 14064.333333333334], [424.0, 14020.0], [421.0, 14017.0], [420.0, 13966.0], [417.0, 14064.4], [446.0, 14092.0], [445.0, 13916.0], [444.0, 14112.333333333334], [440.0, 14131.0], [438.0, 14125.999999999998], [463.0, 14113.333333333334], [461.0, 14140.0], [460.0, 14157.0], [456.0, 14103.6], [455.0, 14074.5], [453.0, 14140.5], [451.0, 14127.0], [448.0, 13947.0], [479.0, 14146.714285714284], [472.0, 14152.0], [470.0, 14131.0], [465.0, 14154.5], [464.0, 14133.5], [494.0, 10710.0], [495.0, 10704.0], [492.0, 10724.0], [491.0, 13470.0], [490.0, 14137.0], [489.0, 14135.0], [488.0, 14144.0], [486.0, 14153.0], [484.0, 14133.0], [483.0, 14155.0], [482.0, 14154.0], [500.0, 10701.6], [1.0, 19427.0]], "isOverall": false, "label": "Login", "isController": true}, {"data": [[253.15200000000038, 16982.524000000027]], "isOverall": false, "label": "Login-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14933.333333333334, "minX": 1.60773096E12, "maxY": 142675.63333333333, "series": [{"data": [[1.60773096E12, 142675.63333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60773096E12, 14933.333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2813.9440000000036, "minX": 1.60773096E12, "maxY": 16982.524000000027, "series": [{"data": [[1.60773096E12, 8219.634000000005]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60773096E12, 2813.9440000000036]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60773096E12, 5948.945999999997]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60773096E12, 16982.524000000027]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2813.104000000001, "minX": 1.60773096E12, "maxY": 16852.64, "series": [{"data": [[1.60773096E12, 8177.678000000004]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60773096E12, 2813.104000000001]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60773096E12, 5861.858]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60773096E12, 16852.64]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.60773096E12, "maxY": 230.79600000000002, "series": [{"data": [[1.60773096E12, 0.0]], "isOverall": false, "label": "GET Home", "isController": false}, {"data": [[1.60773096E12, 0.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.60773096E12, 230.79600000000002]], "isOverall": false, "label": "GET Login", "isController": false}, {"data": [[1.60773096E12, 230.796]], "isOverall": false, "label": "Login", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 94.0, "minX": 1.60773096E12, "maxY": 18642.0, "series": [{"data": [[1.60773096E12, 18642.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60773096E12, 693.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60773096E12, 693.8599001431465]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60773096E12, 693.2594998210668]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.60773096E12, 94.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60773096E12, 5998.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 693.0, "minX": 1.0, "maxY": 10497.0, "series": [{"data": [[264.0, 1387.0], [1.0, 9970.0], [36.0, 1564.5], [301.0, 9365.0], [165.0, 6056.0], [21.0, 6676.0], [200.0, 3429.0], [408.0, 7746.5], [14.0, 693.0], [29.0, 10497.0], [61.0, 4491.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 408.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 690.0, "minX": 1.0, "maxY": 10465.0, "series": [{"data": [[264.0, 1387.0], [1.0, 9935.0], [36.0, 1564.5], [301.0, 9312.0], [165.0, 6021.0], [21.0, 6595.0], [200.0, 3336.5], [408.0, 7651.0], [14.0, 690.0], [29.0, 10465.0], [61.0, 4491.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 408.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.60773096E12, "maxY": 25.0, "series": [{"data": [[1.60773096E12, 25.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.60773096E12, "maxY": 25.0, "series": [{"data": [[1.60773096E12, 25.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60773096E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.60773096E12, "maxY": 8.333333333333334, "series": [{"data": [[1.60773096E12, 8.333333333333334]], "isOverall": false, "label": "GET Home-success", "isController": false}, {"data": [[1.60773096E12, 8.333333333333334]], "isOverall": false, "label": "GET Login-success", "isController": false}, {"data": [[1.60773096E12, 8.333333333333334]], "isOverall": false, "label": "POST Login-success", "isController": false}, {"data": [[1.60773096E12, 8.333333333333334]], "isOverall": false, "label": "Login-success", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.60773096E12, "maxY": 33.333333333333336, "series": [{"data": [[1.60773096E12, 33.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60773096E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

